ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.MX_GPIO_Init,"ax",%progbits
  20              		.align	1
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	MX_GPIO_Init:
  26              	.LFB234:
  27              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "cmsis_os.h"
  22:Core/Src/main.c **** #include "usb_device.h"
  23:Core/Src/main.c **** 
  24:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  25:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  26:Core/Src/main.c **** #include "semphr.h"
  27:Core/Src/main.c **** #include "usbd_cdc_if.h"
  28:Core/Src/main.c **** #include "usbd_core.h"
  29:Core/Src/main.c **** #include "stdio.h"
  30:Core/Src/main.c **** #include "configurables.h"
  31:Core/Src/main.c **** #include "commands.h"
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 2


  32:Core/Src/main.c **** #include "utils.h"
  33:Core/Src/main.c **** #include "thermal_control.h"
  34:Core/Src/main.c **** //#include "usbd_cdc_if.h"
  35:Core/Src/main.c **** //#include "C:\Users\M\Desktop\STMprojects\USB\Api\core\src"
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* USER CODE END Includes */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  40:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  41:Core/Src/main.c **** int _write(int le, char *ptr, int len)
  42:Core/Src/main.c **** {
  43:Core/Src/main.c ****     int DataIdx;
  44:Core/Src/main.c ****     for(DataIdx = 0; DataIdx < len; DataIdx++)
  45:Core/Src/main.c ****     {
  46:Core/Src/main.c ****         ITM_SendChar(*ptr++);
  47:Core/Src/main.c ****     }
  48:Core/Src/main.c ****     return len;
  49:Core/Src/main.c **** }
  50:Core/Src/main.c **** /* USER CODE END PTD */
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  53:Core/Src/main.c **** /* USER CODE BEGIN PD */
  54:Core/Src/main.c **** I2C_HandleTypeDef hi2c1;
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** extern USBD_HandleTypeDef hUsbDeviceFS;
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** /* USER CODE END PD */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  61:Core/Src/main.c **** /* USER CODE BEGIN PM */
  62:Core/Src/main.c **** typedef struct {
  63:Core/Src/main.c ****     SemaphoreHandle_t semaphore;
  64:Core/Src/main.c ****     double value;
  65:Core/Src/main.c **** } MUTEX_f;
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** typedef struct {
  68:Core/Src/main.c ****     SemaphoreHandle_t semaphore;
  69:Core/Src/main.c ****     GPIO_TypeDef* port;
  70:Core/Src/main.c ****     uint16_t pin;
  71:Core/Src/main.c **** } MUTEX_digitPin;
  72:Core/Src/main.c **** /* USER CODE END PM */
  73:Core/Src/main.c **** 
  74:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  75:Core/Src/main.c **** ADC_HandleTypeDef hadc1;
  76:Core/Src/main.c **** 
  77:Core/Src/main.c **** I2C_HandleTypeDef hi2c1;
  78:Core/Src/main.c **** 
  79:Core/Src/main.c **** TIM_HandleTypeDef htim2;
  80:Core/Src/main.c **** 
  81:Core/Src/main.c **** /* Definitions for Blink */
  82:Core/Src/main.c **** osThreadId_t BlinkHandle;
  83:Core/Src/main.c **** const osThreadAttr_t Blink_attributes = {
  84:Core/Src/main.c ****   .name = "Blink",
  85:Core/Src/main.c ****   .stack_size = 128 * 4,
  86:Core/Src/main.c ****   .priority = (osPriority_t) osPriorityNormal,
  87:Core/Src/main.c **** };
  88:Core/Src/main.c **** /* USER CODE BEGIN PV */
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 3


  89:Core/Src/main.c **** 
  90:Core/Src/main.c **** osThreadId_t COM_manager_handle;
  91:Core/Src/main.c **** const osThreadAttr_t COM_attributes = {
  92:Core/Src/main.c ****         .name = "COM",
  93:Core/Src/main.c ****         .stack_size = 128 * 2,
  94:Core/Src/main.c ****         .priority = (osPriority_t) osPriorityNormal,
  95:Core/Src/main.c **** };
  96:Core/Src/main.c **** 
  97:Core/Src/main.c **** osThreadId_t LED_manager_handle;
  98:Core/Src/main.c **** const osThreadAttr_t LED_attributes = {
  99:Core/Src/main.c ****         .name = "LED",
 100:Core/Src/main.c ****         .stack_size = 32,
 101:Core/Src/main.c ****         .priority = (osPriority_t) osPriorityNormal,
 102:Core/Src/main.c **** };
 103:Core/Src/main.c **** 
 104:Core/Src/main.c **** osThreadId_t TEMP_manager_handle;
 105:Core/Src/main.c **** const osThreadAttr_t TEMP_attributes = {
 106:Core/Src/main.c ****         .name = "TEMP",
 107:Core/Src/main.c ****         .stack_size = 128 * 1,
 108:Core/Src/main.c ****         .priority = (osPriority_t) osPriorityNormal,
 109:Core/Src/main.c **** };
 110:Core/Src/main.c **** 
 111:Core/Src/main.c **** osThreadId_t POT_manager_handle;
 112:Core/Src/main.c **** const osThreadAttr_t POT_attributes = {
 113:Core/Src/main.c ****         .name = "POT",
 114:Core/Src/main.c ****         .stack_size = 128 * 1,
 115:Core/Src/main.c ****         .priority = (osPriority_t) osPriorityNormal,
 116:Core/Src/main.c **** };
 117:Core/Src/main.c **** /* USER CODE END PV */
 118:Core/Src/main.c **** 
 119:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
 120:Core/Src/main.c **** void SystemClock_Config(void);
 121:Core/Src/main.c **** static void MX_GPIO_Init(void);
 122:Core/Src/main.c **** static void MX_I2C1_Init(void);
 123:Core/Src/main.c **** static void MX_ADC1_Init(void);
 124:Core/Src/main.c **** static void MX_TIM2_Init(void);
 125:Core/Src/main.c **** void StartBlink(void *argument);
 126:Core/Src/main.c **** 
 127:Core/Src/main.c **** /* USER CODE BEGIN PFP */
 128:Core/Src/main.c **** void COM_manager(void *argument);
 129:Core/Src/main.c **** 
 130:Core/Src/main.c **** void LED_manager(void *argument);
 131:Core/Src/main.c **** 
 132:Core/Src/main.c **** //void Master(void *argument);
 133:Core/Src/main.c **** 
 134:Core/Src/main.c **** void TEMP_manager(void *argument);
 135:Core/Src/main.c **** 
 136:Core/Src/main.c **** void POT_manager(void *argument);
 137:Core/Src/main.c **** 
 138:Core/Src/main.c **** 
 139:Core/Src/main.c **** /* USER CODE END PFP */
 140:Core/Src/main.c **** 
 141:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 142:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 143:Core/Src/main.c **** // printf function
 144:Core/Src/main.c **** uint8_t DataToSend[16];
 145:Core/Src/main.c **** uint8_t MessageCounter = 0;
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 4


 146:Core/Src/main.c **** uint8_t MessageLength = 0;
 147:Core/Src/main.c **** 
 148:Core/Src/main.c **** 
 149:Core/Src/main.c **** MUTEX_f ACTUAL_TEMP = {.semaphore = NULL, .value = 0};
 150:Core/Src/main.c **** MUTEX_f TARGET_TEMP = {.semaphore = NULL, .value = 0};
 151:Core/Src/main.c **** MUTEX_digitPin BLUE_LED = {.semaphore=NULL, .port = GPIOA, .pin = GPIO_PIN_5};
 152:Core/Src/main.c **** MUTEX_digitPin RED_LED = {.semaphore=NULL, .port = GPIOA, .pin = GPIO_PIN_6};
 153:Core/Src/main.c **** MUTEX_digitPin GREEN_LED = {.semaphore=NULL, .port = GPIOA, .pin = GPIO_PIN_7};
 154:Core/Src/main.c **** 
 155:Core/Src/main.c **** /* USER CODE END 0 */
 156:Core/Src/main.c **** 
 157:Core/Src/main.c **** /**
 158:Core/Src/main.c ****   * @brief  The application entry point.
 159:Core/Src/main.c ****   * @retval int
 160:Core/Src/main.c ****   */
 161:Core/Src/main.c **** int main(void)
 162:Core/Src/main.c **** {
 163:Core/Src/main.c **** 
 164:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 165:Core/Src/main.c ****     uint8_t enable_potentiometer = 1;
 166:Core/Src/main.c **** 
 167:Core/Src/main.c **** 
 168:Core/Src/main.c ****   /* USER CODE END 1 */
 169:Core/Src/main.c **** 
 170:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 171:Core/Src/main.c **** 
 172:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 173:Core/Src/main.c ****   HAL_Init();
 174:Core/Src/main.c **** 
 175:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 176:Core/Src/main.c **** 
 177:Core/Src/main.c ****   /* USER CODE END Init */
 178:Core/Src/main.c **** 
 179:Core/Src/main.c ****   /* Configure the system clock */
 180:Core/Src/main.c ****   SystemClock_Config();
 181:Core/Src/main.c **** 
 182:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 183:Core/Src/main.c **** 
 184:Core/Src/main.c ****   /* USER CODE END SysInit */
 185:Core/Src/main.c **** 
 186:Core/Src/main.c ****   /* Initialize all configured peripherals */
 187:Core/Src/main.c ****   MX_GPIO_Init();
 188:Core/Src/main.c ****   MX_I2C1_Init();
 189:Core/Src/main.c ****   MX_ADC1_Init();
 190:Core/Src/main.c ****   MX_TIM2_Init();
 191:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 192:Core/Src/main.c ****     MX_USB_DEVICE_Init();
 193:Core/Src/main.c ****     // printf("waiting for connection \r \n ");
 194:Core/Src/main.c ****     HAL_GPIO_WritePin(BLUE_LED.port, BLUE_LED.pin, GPIO_PIN_SET);
 195:Core/Src/main.c ****     HAL_GPIO_WritePin(RED_LED.port, RED_LED.pin, GPIO_PIN_SET);
 196:Core/Src/main.c ****     HAL_GPIO_WritePin(GREEN_LED.port, GREEN_LED.pin, GPIO_PIN_SET);
 197:Core/Src/main.c **** 
 198:Core/Src/main.c ****     uint32_t before = HAL_GetTick();
 199:Core/Src/main.c ****     while((HAL_GetTick()-before)<CONNECTION_TIMEOUT){
 200:Core/Src/main.c **** 
 201:Core/Src/main.c ****         HAL_GPIO_TogglePin(BLUE_LED.port, BLUE_LED.pin);
 202:Core/Src/main.c ****         HAL_Delay(100);
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 5


 203:Core/Src/main.c ****         printf("waiting for connection \r \n ");
 204:Core/Src/main.c ****         USBD_StatusTypeDef x = USBD_LL_DevConnected(&hUsbDeviceFS);
 205:Core/Src/main.c ****         if(hUsbDeviceFS.dev_state==USBD_STATE_CONFIGURED){
 206:Core/Src/main.c ****             enable_potentiometer = 0;
 207:Core/Src/main.c ****             HAL_GPIO_WritePin(BLUE_LED.port, BLUE_LED.pin, GPIO_PIN_RESET);
 208:Core/Src/main.c ****             printf("connected");
 209:Core/Src/main.c ****         }
 210:Core/Src/main.c ****     };
 211:Core/Src/main.c **** 
 212:Core/Src/main.c ****     if(enable_potentiometer==1){
 213:Core/Src/main.c ****         USBD_DeInit(&hUsbDeviceFS);
 214:Core/Src/main.c ****         HAL_GPIO_WritePin(BLUE_LED.port, BLUE_LED.pin, GPIO_PIN_SET);
 215:Core/Src/main.c ****     }
 216:Core/Src/main.c **** 
 217:Core/Src/main.c **** 
 218:Core/Src/main.c **** 
 219:Core/Src/main.c ****     osKernelInitialize();
 220:Core/Src/main.c **** 
 221:Core/Src/main.c ****     if (enable_potentiometer == 1) {
 222:Core/Src/main.c ****         //    osThreadNew(POT_manager, NULL, &POT_attributes);
 223:Core/Src/main.c **** 
 224:Core/Src/main.c ****     }else
 225:Core/Src/main.c ****     {
 226:Core/Src/main.c ****         osThreadNew(COM_manager, NULL, &COM_attributes);
 227:Core/Src/main.c **** 
 228:Core/Src/main.c ****     }
 229:Core/Src/main.c **** 
 230:Core/Src/main.c ****     COM_manager_handle = osThreadNew(LED_manager, NULL, &LED_attributes);
 231:Core/Src/main.c ****     TEMP_manager_handle = osThreadNew(TEMP_manager, NULL, &TEMP_attributes);
 232:Core/Src/main.c ****   /* USER CODE END 2 */
 233:Core/Src/main.c **** 
 234:Core/Src/main.c ****   /* Init scheduler */
 235:Core/Src/main.c ****   osKernelInitialize();
 236:Core/Src/main.c **** 
 237:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_MUTEX */
 238:Core/Src/main.c ****   /* add mutexes, ... */
 239:Core/Src/main.c ****   /* USER CODE END RTOS_MUTEX */
 240:Core/Src/main.c **** 
 241:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_SEMAPHORES */
 242:Core/Src/main.c ****   /* add semaphores, ... */
 243:Core/Src/main.c ****   /* USER CODE END RTOS_SEMAPHORES */
 244:Core/Src/main.c **** 
 245:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_TIMERS */
 246:Core/Src/main.c ****   /* start timers, add new ones, ... */
 247:Core/Src/main.c ****   /* USER CODE END RTOS_TIMERS */
 248:Core/Src/main.c **** 
 249:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_QUEUES */
 250:Core/Src/main.c ****   /* add queues, ... */
 251:Core/Src/main.c ****   /* USER CODE END RTOS_QUEUES */
 252:Core/Src/main.c **** 
 253:Core/Src/main.c ****   /* Create the thread(s) */
 254:Core/Src/main.c ****   /* creation of Blink */
 255:Core/Src/main.c ****   BlinkHandle = osThreadNew(StartBlink, NULL, &Blink_attributes);
 256:Core/Src/main.c **** 
 257:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_THREADS */
 258:Core/Src/main.c ****   /* add threads, ... */
 259:Core/Src/main.c ****   /* USER CODE END RTOS_THREADS */
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 6


 260:Core/Src/main.c **** 
 261:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_EVENTS */
 262:Core/Src/main.c ****   /* add events, ... */
 263:Core/Src/main.c ****   /* USER CODE END RTOS_EVENTS */
 264:Core/Src/main.c **** 
 265:Core/Src/main.c ****   /* Start scheduler */
 266:Core/Src/main.c ****   osKernelStart();
 267:Core/Src/main.c **** 
 268:Core/Src/main.c ****   /* We should never get here as control is now taken by the scheduler */
 269:Core/Src/main.c **** 
 270:Core/Src/main.c ****   /* Infinite loop */
 271:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 272:Core/Src/main.c **** //    while (1) {
 273:Core/Src/main.c ****     /* USER CODE END WHILE */
 274:Core/Src/main.c **** 
 275:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 276:Core/Src/main.c **** //    }
 277:Core/Src/main.c ****   /* USER CODE END 3 */
 278:Core/Src/main.c **** }
 279:Core/Src/main.c **** 
 280:Core/Src/main.c **** /**
 281:Core/Src/main.c ****   * @brief System Clock Configuration
 282:Core/Src/main.c ****   * @retval None
 283:Core/Src/main.c ****   */
 284:Core/Src/main.c **** void SystemClock_Config(void)
 285:Core/Src/main.c **** {
 286:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 287:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 288:Core/Src/main.c **** 
 289:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 290:Core/Src/main.c ****   */
 291:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 292:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 293:Core/Src/main.c **** 
 294:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 295:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 296:Core/Src/main.c ****   */
 297:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 298:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 299:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 300:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 301:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 25;
 302:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 192;
 303:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 304:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 305:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 306:Core/Src/main.c ****   {
 307:Core/Src/main.c ****     Error_Handler();
 308:Core/Src/main.c ****   }
 309:Core/Src/main.c **** 
 310:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 311:Core/Src/main.c ****   */
 312:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 313:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 314:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 315:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 316:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 7


 317:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 318:Core/Src/main.c **** 
 319:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 320:Core/Src/main.c ****   {
 321:Core/Src/main.c ****     Error_Handler();
 322:Core/Src/main.c ****   }
 323:Core/Src/main.c **** }
 324:Core/Src/main.c **** 
 325:Core/Src/main.c **** /**
 326:Core/Src/main.c ****   * @brief ADC1 Initialization Function
 327:Core/Src/main.c ****   * @param None
 328:Core/Src/main.c ****   * @retval None
 329:Core/Src/main.c ****   */
 330:Core/Src/main.c **** static void MX_ADC1_Init(void)
 331:Core/Src/main.c **** {
 332:Core/Src/main.c **** 
 333:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 0 */
 334:Core/Src/main.c **** 
 335:Core/Src/main.c ****   /* USER CODE END ADC1_Init 0 */
 336:Core/Src/main.c **** 
 337:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 338:Core/Src/main.c **** 
 339:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 1 */
 340:Core/Src/main.c **** 
 341:Core/Src/main.c ****   /* USER CODE END ADC1_Init 1 */
 342:Core/Src/main.c **** 
 343:Core/Src/main.c ****   /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of con
 344:Core/Src/main.c ****   */
 345:Core/Src/main.c ****   hadc1.Instance = ADC1;
 346:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV2;
 347:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 348:Core/Src/main.c ****   hadc1.Init.ScanConvMode = DISABLE;
 349:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = DISABLE;
 350:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 351:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 352:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 353:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 354:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 355:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = DISABLE;
 356:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 357:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 358:Core/Src/main.c ****   {
 359:Core/Src/main.c ****     Error_Handler();
 360:Core/Src/main.c ****   }
 361:Core/Src/main.c **** 
 362:Core/Src/main.c ****   /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and it
 363:Core/Src/main.c ****   */
 364:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_0;
 365:Core/Src/main.c ****   sConfig.Rank = 1;
 366:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 367:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 368:Core/Src/main.c ****   {
 369:Core/Src/main.c ****     Error_Handler();
 370:Core/Src/main.c ****   }
 371:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 2 */
 372:Core/Src/main.c **** 
 373:Core/Src/main.c ****   /* USER CODE END ADC1_Init 2 */
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 8


 374:Core/Src/main.c **** 
 375:Core/Src/main.c **** }
 376:Core/Src/main.c **** 
 377:Core/Src/main.c **** /**
 378:Core/Src/main.c ****   * @brief I2C1 Initialization Function
 379:Core/Src/main.c ****   * @param None
 380:Core/Src/main.c ****   * @retval None
 381:Core/Src/main.c ****   */
 382:Core/Src/main.c **** static void MX_I2C1_Init(void)
 383:Core/Src/main.c **** {
 384:Core/Src/main.c **** 
 385:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 0 */
 386:Core/Src/main.c **** 
 387:Core/Src/main.c ****   /* USER CODE END I2C1_Init 0 */
 388:Core/Src/main.c **** 
 389:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 1 */
 390:Core/Src/main.c **** 
 391:Core/Src/main.c ****   /* USER CODE END I2C1_Init 1 */
 392:Core/Src/main.c ****   hi2c1.Instance = I2C1;
 393:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 394:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 395:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 396:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 397:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 398:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 399:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 400:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 401:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 402:Core/Src/main.c ****   {
 403:Core/Src/main.c ****     Error_Handler();
 404:Core/Src/main.c ****   }
 405:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 2 */
 406:Core/Src/main.c **** 
 407:Core/Src/main.c ****   /* USER CODE END I2C1_Init 2 */
 408:Core/Src/main.c **** 
 409:Core/Src/main.c **** }
 410:Core/Src/main.c **** 
 411:Core/Src/main.c **** /**
 412:Core/Src/main.c ****   * @brief TIM2 Initialization Function
 413:Core/Src/main.c ****   * @param None
 414:Core/Src/main.c ****   * @retval None
 415:Core/Src/main.c ****   */
 416:Core/Src/main.c **** static void MX_TIM2_Init(void)
 417:Core/Src/main.c **** {
 418:Core/Src/main.c **** 
 419:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 0 */
 420:Core/Src/main.c **** 
 421:Core/Src/main.c ****   /* USER CODE END TIM2_Init 0 */
 422:Core/Src/main.c **** 
 423:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 424:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 425:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 426:Core/Src/main.c **** 
 427:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 1 */
 428:Core/Src/main.c **** 
 429:Core/Src/main.c ****   /* USER CODE END TIM2_Init 1 */
 430:Core/Src/main.c ****   htim2.Instance = TIM2;
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 9


 431:Core/Src/main.c ****   htim2.Init.Prescaler = 0;
 432:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 433:Core/Src/main.c ****   htim2.Init.Period = 4294967295;
 434:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 435:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 436:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 437:Core/Src/main.c ****   {
 438:Core/Src/main.c ****     Error_Handler();
 439:Core/Src/main.c ****   }
 440:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 441:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 442:Core/Src/main.c ****   {
 443:Core/Src/main.c ****     Error_Handler();
 444:Core/Src/main.c ****   }
 445:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 446:Core/Src/main.c ****   {
 447:Core/Src/main.c ****     Error_Handler();
 448:Core/Src/main.c ****   }
 449:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 450:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 451:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 452:Core/Src/main.c ****   {
 453:Core/Src/main.c ****     Error_Handler();
 454:Core/Src/main.c ****   }
 455:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 456:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 457:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 458:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 459:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 460:Core/Src/main.c ****   {
 461:Core/Src/main.c ****     Error_Handler();
 462:Core/Src/main.c ****   }
 463:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 2 */
 464:Core/Src/main.c **** 
 465:Core/Src/main.c ****   /* USER CODE END TIM2_Init 2 */
 466:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim2);
 467:Core/Src/main.c **** 
 468:Core/Src/main.c **** }
 469:Core/Src/main.c **** 
 470:Core/Src/main.c **** /**
 471:Core/Src/main.c ****   * @brief GPIO Initialization Function
 472:Core/Src/main.c ****   * @param None
 473:Core/Src/main.c ****   * @retval None
 474:Core/Src/main.c ****   */
 475:Core/Src/main.c **** static void MX_GPIO_Init(void)
 476:Core/Src/main.c **** {
  28              		.loc 1 476 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 40
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 30B5     		push	{r4, r5, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 12
  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
  37              		.cfi_offset 14, -4
  38 0002 8BB0     		sub	sp, sp, #44
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 10


  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 56
 477:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  41              		.loc 1 477 3 view .LVU1
  42              		.loc 1 477 20 is_stmt 0 view .LVU2
  43 0004 0024     		movs	r4, #0
  44 0006 0594     		str	r4, [sp, #20]
  45 0008 0694     		str	r4, [sp, #24]
  46 000a 0794     		str	r4, [sp, #28]
  47 000c 0894     		str	r4, [sp, #32]
  48 000e 0994     		str	r4, [sp, #36]
 478:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_1 */
 479:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_1 */
 480:Core/Src/main.c **** 
 481:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 482:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  49              		.loc 1 482 3 is_stmt 1 view .LVU3
  50              	.LBB4:
  51              		.loc 1 482 3 view .LVU4
  52 0010 0194     		str	r4, [sp, #4]
  53              		.loc 1 482 3 view .LVU5
  54 0012 1E4B     		ldr	r3, .L3
  55 0014 1A6B     		ldr	r2, [r3, #48]
  56 0016 42F00402 		orr	r2, r2, #4
  57 001a 1A63     		str	r2, [r3, #48]
  58              		.loc 1 482 3 view .LVU6
  59 001c 1A6B     		ldr	r2, [r3, #48]
  60 001e 02F00402 		and	r2, r2, #4
  61 0022 0192     		str	r2, [sp, #4]
  62              		.loc 1 482 3 view .LVU7
  63 0024 019A     		ldr	r2, [sp, #4]
  64              	.LBE4:
  65              		.loc 1 482 3 view .LVU8
 483:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  66              		.loc 1 483 3 view .LVU9
  67              	.LBB5:
  68              		.loc 1 483 3 view .LVU10
  69 0026 0294     		str	r4, [sp, #8]
  70              		.loc 1 483 3 view .LVU11
  71 0028 1A6B     		ldr	r2, [r3, #48]
  72 002a 42F08002 		orr	r2, r2, #128
  73 002e 1A63     		str	r2, [r3, #48]
  74              		.loc 1 483 3 view .LVU12
  75 0030 1A6B     		ldr	r2, [r3, #48]
  76 0032 02F08002 		and	r2, r2, #128
  77 0036 0292     		str	r2, [sp, #8]
  78              		.loc 1 483 3 view .LVU13
  79 0038 029A     		ldr	r2, [sp, #8]
  80              	.LBE5:
  81              		.loc 1 483 3 view .LVU14
 484:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  82              		.loc 1 484 3 view .LVU15
  83              	.LBB6:
  84              		.loc 1 484 3 view .LVU16
  85 003a 0394     		str	r4, [sp, #12]
  86              		.loc 1 484 3 view .LVU17
  87 003c 1A6B     		ldr	r2, [r3, #48]
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 11


  88 003e 42F00102 		orr	r2, r2, #1
  89 0042 1A63     		str	r2, [r3, #48]
  90              		.loc 1 484 3 view .LVU18
  91 0044 1A6B     		ldr	r2, [r3, #48]
  92 0046 02F00102 		and	r2, r2, #1
  93 004a 0392     		str	r2, [sp, #12]
  94              		.loc 1 484 3 view .LVU19
  95 004c 039A     		ldr	r2, [sp, #12]
  96              	.LBE6:
  97              		.loc 1 484 3 view .LVU20
 485:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  98              		.loc 1 485 3 view .LVU21
  99              	.LBB7:
 100              		.loc 1 485 3 view .LVU22
 101 004e 0494     		str	r4, [sp, #16]
 102              		.loc 1 485 3 view .LVU23
 103 0050 1A6B     		ldr	r2, [r3, #48]
 104 0052 42F00202 		orr	r2, r2, #2
 105 0056 1A63     		str	r2, [r3, #48]
 106              		.loc 1 485 3 view .LVU24
 107 0058 1B6B     		ldr	r3, [r3, #48]
 108 005a 03F00203 		and	r3, r3, #2
 109 005e 0493     		str	r3, [sp, #16]
 110              		.loc 1 485 3 view .LVU25
 111 0060 049B     		ldr	r3, [sp, #16]
 112              	.LBE7:
 113              		.loc 1 485 3 view .LVU26
 486:Core/Src/main.c **** 
 487:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 488:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15, GPIO_PIN_RESET);
 114              		.loc 1 488 3 view .LVU27
 115 0062 0B4D     		ldr	r5, .L3+4
 116 0064 2246     		mov	r2, r4
 117 0066 4FF46041 		mov	r1, #57344
 118 006a 2846     		mov	r0, r5
 119 006c FFF7FEFF 		bl	HAL_GPIO_WritePin
 120              	.LVL0:
 489:Core/Src/main.c **** 
 490:Core/Src/main.c ****   /*Configure GPIO pins : PC13 PC14 PC15 */
 491:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15;
 121              		.loc 1 491 3 view .LVU28
 122              		.loc 1 491 23 is_stmt 0 view .LVU29
 123 0070 4FF46043 		mov	r3, #57344
 124 0074 0593     		str	r3, [sp, #20]
 492:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 125              		.loc 1 492 3 is_stmt 1 view .LVU30
 126              		.loc 1 492 24 is_stmt 0 view .LVU31
 127 0076 0123     		movs	r3, #1
 128 0078 0693     		str	r3, [sp, #24]
 493:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 129              		.loc 1 493 3 is_stmt 1 view .LVU32
 130              		.loc 1 493 24 is_stmt 0 view .LVU33
 131 007a 0794     		str	r4, [sp, #28]
 494:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 132              		.loc 1 494 3 is_stmt 1 view .LVU34
 133              		.loc 1 494 25 is_stmt 0 view .LVU35
 134 007c 0894     		str	r4, [sp, #32]
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 12


 495:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 135              		.loc 1 495 3 is_stmt 1 view .LVU36
 136 007e 05A9     		add	r1, sp, #20
 137 0080 2846     		mov	r0, r5
 138 0082 FFF7FEFF 		bl	HAL_GPIO_Init
 139              	.LVL1:
 496:Core/Src/main.c **** 
 497:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_2 */
 498:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_2 */
 499:Core/Src/main.c **** }
 140              		.loc 1 499 1 is_stmt 0 view .LVU37
 141 0086 0BB0     		add	sp, sp, #44
 142              	.LCFI2:
 143              		.cfi_def_cfa_offset 12
 144              		@ sp needed
 145 0088 30BD     		pop	{r4, r5, pc}
 146              	.L4:
 147 008a 00BF     		.align	2
 148              	.L3:
 149 008c 00380240 		.word	1073887232
 150 0090 00080240 		.word	1073874944
 151              		.cfi_endproc
 152              	.LFE234:
 154              		.section	.rodata.LED_manager.str1.4,"aMS",%progbits,1
 155              		.align	2
 156              	.LC0:
 157 0000 4C454420 		.ascii	"LED manager started \015 \000"
 157      6D616E61 
 157      67657220 
 157      73746172 
 157      74656420 
 158 0017 00       		.align	2
 159              	.LC1:
 160 0018 70726576 		.ascii	"prev_bool: %d \015 \012\000"
 160      5F626F6F 
 160      6C3A2025 
 160      64200D20 
 160      0A00
 161              		.section	.text.LED_manager,"ax",%progbits
 162              		.align	1
 163              		.global	LED_manager
 164              		.syntax unified
 165              		.thumb
 166              		.thumb_func
 168              	LED_manager:
 169              	.LVL2:
 170              	.LFB238:
 500:Core/Src/main.c **** 
 501:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 502:Core/Src/main.c **** 
 503:Core/Src/main.c **** 
 504:Core/Src/main.c **** 
 505:Core/Src/main.c **** 
 506:Core/Src/main.c **** 
 507:Core/Src/main.c **** void COM_manager(void *argument) {
 508:Core/Src/main.c ****     uint32_t len = 32;
 509:Core/Src/main.c ****     char feedback[RX_BUFF_SIZE];
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 13


 510:Core/Src/main.c ****     printf("COM manager started \r \n");
 511:Core/Src/main.c ****     printf("before while loop \r \n");
 512:Core/Src/main.c **** //    extern uint8_t received_bool;
 513:Core/Src/main.c ****     while (1) {
 514:Core/Src/main.c **** 
 515:Core/Src/main.c **** //printf("waiting for data \r \n");
 516:Core/Src/main.c ****         if (hUsbDeviceFS.dev_connection_status == 0x01) {
 517:Core/Src/main.c ****             HAL_Delay(1);
 518:Core/Src/main.c **** 
 519:Core/Src/main.c **** 
 520:Core/Src/main.c ****             printf("received command: %02X \r \n", UserRxBufferFS[0]);
 521:Core/Src/main.c ****             for (int i = 0; i < RX_BUFF_SIZE; i++) {
 522:Core/Src/main.c ****                 printf("%02X ", UserRxBufferFS[i]);
 523:Core/Src/main.c ****             }
 524:Core/Src/main.c ****             switch (UserRxBufferFS[0]) {
 525:Core/Src/main.c ****                 case SET_LED_STATE:
 526:Core/Src/main.c ****                     switch(UserRxBufferFS[RX_BUFF_SIZE - 2]){
 527:Core/Src/main.c ****                         case 0x01:
 528:Core/Src/main.c ****                             HAL_GPIO_WritePin(RED_LED.port, RED_LED.pin, !UserRxBufferFS[RX_BUFF_SI
 529:Core/Src/main.c ****                             strcpy(feedback+(RX_BUFF_SIZE-12), "BL switched");
 530:Core/Src/main.c **** 
 531:Core/Src/main.c ****                             break;
 532:Core/Src/main.c ****                         case 0x02:
 533:Core/Src/main.c ****                             HAL_GPIO_WritePin(GREEN_LED.port, GREEN_LED.pin, !UserRxBufferFS[RX_BUF
 534:Core/Src/main.c ****                             strcpy(feedback+(RX_BUFF_SIZE-12), "EL switched");
 535:Core/Src/main.c ****                             break;
 536:Core/Src/main.c ****                         default:
 537:Core/Src/main.c ****                             printf("unknown command \r \n");
 538:Core/Src/main.c ****                             break;
 539:Core/Src/main.c ****                     }
 540:Core/Src/main.c **** 
 541:Core/Src/main.c ****                     feedback[0]= SET_LED_STATE;
 542:Core/Src/main.c ****                     CDC_Transmit_FS(feedback, RX_BUFF_SIZE);
 543:Core/Src/main.c ****                     break;
 544:Core/Src/main.c ****                 case REQUEST_ACTUAL_TEMPERATURE:
 545:Core/Src/main.c ****                     printf("sending actual temperature \r \n");
 546:Core/Src/main.c ****                     char value[RX_BUFF_SIZE];
 547:Core/Src/main.c **** // Write
 548:Core/Src/main.c ****                     memset(value, 0x00, RX_BUFF_SIZE);
 549:Core/Src/main.c ****                     * ((double *) (value + (sizeof(value) - sizeof(double)))) = ACTUAL_TEMP.value;
 550:Core/Src/main.c ****                     value[0]= REQUEST_ACTUAL_TEMPERATURE;
 551:Core/Src/main.c **** // Read
 552:Core/Src/main.c **** //                    int outValue = * ((int *) (set + (sizeof(set) - sizeof(int))));
 553:Core/Src/main.c ****                     CDC_Transmit_FS(value, RX_BUFF_SIZE);
 554:Core/Src/main.c **** //                    xSemaphoreGive(ACTUAL_TEMP.semaphore);
 555:Core/Src/main.c ****                     break;
 556:Core/Src/main.c ****                 case SET_TARGET_TEMPERATURE:
 557:Core/Src/main.c ****                     printf("setting target temperature \r \n");
 558:Core/Src/main.c **** //                    float ee =
 559:Core/Src/main.c ****                     TARGET_TEMP.value = * ((float *) (UserRxBufferFS + (sizeof(UserRxBufferFS) - si
 560:Core/Src/main.c ****                     memset(feedback, 0x00, RX_BUFF_SIZE);
 561:Core/Src/main.c ****                     * ((double *) (feedback + (sizeof(feedback) - sizeof(double)))) = TARGET_TEMP.v
 562:Core/Src/main.c ****                     feedback[0]= SET_TARGET_TEMPERATURE;
 563:Core/Src/main.c ****                     CDC_Transmit_FS(feedback, RX_BUFF_SIZE);
 564:Core/Src/main.c **** 
 565:Core/Src/main.c ****                     break;
 566:Core/Src/main.c ****                 case REQUEST_ACTUAL_HEATER_STATE:
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 14


 567:Core/Src/main.c ****                     printf("sending actual heater state \r \n");
 568:Core/Src/main.c ****                     char h_value[RX_BUFF_SIZE];
 569:Core/Src/main.c **** // Write
 570:Core/Src/main.c ****                     memset(h_value, 0x20, RX_BUFF_SIZE);
 571:Core/Src/main.c ****                     * ((int *) (h_value + (sizeof(h_value) - sizeof(int)))) = ((TIM2->CCR2)/MAX_PWM
 572:Core/Src/main.c **** 
 573:Core/Src/main.c **** // Read
 574:Core/Src/main.c **** //                    int outValue = * ((int *) (set + (sizeof(set) - sizeof(int))));
 575:Core/Src/main.c ****                     CDC_Transmit_FS(value, RX_BUFF_SIZE);
 576:Core/Src/main.c ****                 default:
 577:Core/Src/main.c ****                     printf("unknown command \r \n");
 578:Core/Src/main.c ****                     break;
 579:Core/Src/main.c ****             }
 580:Core/Src/main.c **** 
 581:Core/Src/main.c ****             memset(feedback, 0x20, RX_BUFF_SIZE);
 582:Core/Src/main.c ****             hUsbDeviceFS.dev_connection_status = 0x00;
 583:Core/Src/main.c **** //        osDelay(100);
 584:Core/Src/main.c ****         }
 585:Core/Src/main.c ****     }
 586:Core/Src/main.c **** }
 587:Core/Src/main.c **** 
 588:Core/Src/main.c **** 
 589:Core/Src/main.c **** void POT_manager(void *argument) {
 590:Core/Src/main.c ****     uint16_t potentiometer_value = HAL_ADC_GetValue(&hadc1);
 591:Core/Src/main.c ****     while(1) {
 592:Core/Src/main.c ****     HAL_Delay(1000);
 593:Core/Src/main.c **** 
 594:Core/Src/main.c ****     };
 595:Core/Src/main.c **** }
 596:Core/Src/main.c **** 
 597:Core/Src/main.c **** void TEMP_manager(void *argument) {
 598:Core/Src/main.c ****     HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_3);
 599:Core/Src/main.c ****     __HAL_TIM_SET_COMPARE(&htim2, TIM_CHANNEL_3, 100-0);
 600:Core/Src/main.c **** 
 601:Core/Src/main.c ****     HAL_ADC_Start(&hadc1);
 602:Core/Src/main.c ****     uint16_t dac_out;
 603:Core/Src/main.c ****     float prev_error = 0;
 604:Core/Src/main.c ****     float integral = 0;
 605:Core/Src/main.c ****     float prev_integral = 0;
 606:Core/Src/main.c ****     float error = 0;
 607:Core/Src/main.c ****     uint32_t time_variable=HAL_GetTick();
 608:Core/Src/main.c **** //    uint32_t time_diff;
 609:Core/Src/main.c ****     while (1) {
 610:Core/Src/main.c **** 
 611:Core/Src/main.c **** 
 612:Core/Src/main.c ****         if(HAL_GetTick()%TEMP_CORRECTION_INTERVAL==0) {
 613:Core/Src/main.c **** //            xSemaphoreTake(ACTUAL_TEMP.semaphore, portMAX_DELAY);
 614:Core/Src/main.c ****             HAL_ADC_Start(&hadc1);
 615:Core/Src/main.c ****             HAL_Delay(10);
 616:Core/Src/main.c ****             if (HAL_ADC_PollForConversion(&hadc1, HAL_MAX_DELAY) == HAL_OK) {
 617:Core/Src/main.c ****                 ACTUAL_TEMP.value = calc_temp(HAL_ADC_GetValue(&hadc1));
 618:Core/Src/main.c **** 
 619:Core/Src/main.c ****             }
 620:Core/Src/main.c ****             HAL_ADC_Stop(&hadc1);
 621:Core/Src/main.c **** 
 622:Core/Src/main.c ****             time_variable = HAL_GetTick()-time_variable;
 623:Core/Src/main.c ****             error = TARGET_TEMP.value==0 ? 0.0 : (TARGET_TEMP.value - ACTUAL_TEMP.value);
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 15


 624:Core/Src/main.c ****             integral = prev_integral + error * TEMP_CORRECTION_INTERVAL;
 625:Core/Src/main.c **** 
 626:Core/Src/main.c **** //            dac_out = PID_PROPORTIONAL*error + PID_INTEGRAL*integral + PID_DERIVATIVE*((error - p
 627:Core/Src/main.c ****             dac_out =  (TARGET_TEMP.value   - ACTUAL_TEMP.value)*100/ACTUAL_TEMP.value;
 628:Core/Src/main.c ****             prev_error = error;
 629:Core/Src/main.c ****             prev_integral = integral;
 630:Core/Src/main.c ****             time_variable = HAL_GetTick();
 631:Core/Src/main.c **** 
 632:Core/Src/main.c ****             __HAL_TIM_SET_COMPARE(&htim2, TIM_CHANNEL_3, dac_out > 100 ? 0:(100-dac_out));
 633:Core/Src/main.c **** 
 634:Core/Src/main.c **** 
 635:Core/Src/main.c **** 
 636:Core/Src/main.c **** 
 637:Core/Src/main.c ****         }
 638:Core/Src/main.c ****     }
 639:Core/Src/main.c **** }
 640:Core/Src/main.c **** 
 641:Core/Src/main.c **** #if LED1_BINARY_BLINK==0x01
 642:Core/Src/main.c **** void LED_manager(void *argument) {
 643:Core/Src/main.c ****     while (1) {
 644:Core/Src/main.c ****         if(received_bool==1){
 645:Core/Src/main.c ****             unsigned char order[8];
 646:Core/Src/main.c ****             HexToBin(CDC_RX_Buffer[0], order);
 647:Core/Src/main.c ****             xSemaphoreTake(LED1.semaphore, portMAX_DELAY);
 648:Core/Src/main.c ****             for (int i = 7; i >= 0; i--) {
 649:Core/Src/main.c ****                 HAL_Delay(10);
 650:Core/Src/main.c ****                 HAL_GPIO_WritePin(LED1.port, LED1.pin, order[i]);
 651:Core/Src/main.c ****             }
 652:Core/Src/main.c ****             xSemaphoreGive(LED1.semaphore);
 653:Core/Src/main.c ****             while (received_bool==1){
 654:Core/Src/main.c ****                 HAL_Delay(10);
 655:Core/Src/main.c ****             }
 656:Core/Src/main.c **** 
 657:Core/Src/main.c ****         }
 658:Core/Src/main.c **** 
 659:Core/Src/main.c **** 
 660:Core/Src/main.c **** 
 661:Core/Src/main.c ****     }
 662:Core/Src/main.c **** }
 663:Core/Src/main.c **** #else
 664:Core/Src/main.c **** //void LED_manager(void *argument) {
 665:Core/Src/main.c **** //    while (1) {
 666:Core/Src/main.c **** //        if(received_bool==1){
 667:Core/Src/main.c **** //            xSemaphoreTake(LED1.semaphore, portMAX_DELAY);
 668:Core/Src/main.c **** //            HAL_GPIO_WritePin(LED1.port, LED1.pin, CDC_RX_Buffer[0]);
 669:Core/Src/main.c **** //            xSemaphoreGive(LED1.semaphore);
 670:Core/Src/main.c **** //            while (received_bool==1){
 671:Core/Src/main.c **** //                HAL_Delay(10);
 672:Core/Src/main.c **** //            }
 673:Core/Src/main.c **** //
 674:Core/Src/main.c **** //        }
 675:Core/Src/main.c **** //
 676:Core/Src/main.c **** 
 677:Core/Src/main.c **** void LED_manager(void *argument) {
 171              		.loc 1 677 34 is_stmt 1 view -0
 172              		.cfi_startproc
 173              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 16


 174              		@ frame_needed = 0, uses_anonymous_args = 0
 175              		.loc 1 677 34 is_stmt 0 view .LVU39
 176 0000 10B5     		push	{r4, lr}
 177              	.LCFI3:
 178              		.cfi_def_cfa_offset 8
 179              		.cfi_offset 4, -8
 180              		.cfi_offset 14, -4
 678:Core/Src/main.c ****     uint8_t prev_bool = hUsbDeviceFS.dev_connection_status;
 181              		.loc 1 678 5 is_stmt 1 view .LVU40
 182              		.loc 1 678 13 is_stmt 0 view .LVU41
 183 0002 054B     		ldr	r3, .L8
 184 0004 93F89F42 		ldrb	r4, [r3, #671]	@ zero_extendqisi2
 185              	.LVL3:
 679:Core/Src/main.c ****     printf("LED manager started \r \n");
 186              		.loc 1 679 5 is_stmt 1 view .LVU42
 187 0008 0448     		ldr	r0, .L8+4
 188              	.LVL4:
 189              		.loc 1 679 5 is_stmt 0 view .LVU43
 190 000a FFF7FEFF 		bl	puts
 191              	.LVL5:
 680:Core/Src/main.c ****     printf("prev_bool: %d \r \n", prev_bool);
 192              		.loc 1 680 5 is_stmt 1 view .LVU44
 193 000e 2146     		mov	r1, r4
 194 0010 0348     		ldr	r0, .L8+8
 195 0012 FFF7FEFF 		bl	printf
 196              	.LVL6:
 197              	.L6:
 681:Core/Src/main.c ****     while (1) {
 198              		.loc 1 681 5 discriminator 1 view .LVU45
 682:Core/Src/main.c **** //if(prev_bool!=hUsbDeviceFS.dev_connection_status){
 683:Core/Src/main.c **** //            prev_bool = hUsbDeviceFS.dev_connection_status;
 684:Core/Src/main.c **** //            printf("bool_state has changed \r \n");
 685:Core/Src/main.c **** //        }
 686:Core/Src/main.c **** ////            xSemaphoreTake(LED2.semaphore, portMAX_DELAY);
 687:Core/Src/main.c **** //            HAL_GPIO_TogglePin(LED2.port, LED2.pin);
 688:Core/Src/main.c **** ////            xSemaphoreGive(LED2.semaphore);
 689:Core/Src/main.c **** //            HAL_Delay(200);
 690:Core/Src/main.c **** 
 691:Core/Src/main.c **** 
 692:Core/Src/main.c ****     }
 199              		.loc 1 692 5 discriminator 1 view .LVU46
 681:Core/Src/main.c ****     while (1) {
 200              		.loc 1 681 11 discriminator 1 view .LVU47
 201 0016 FEE7     		b	.L6
 202              	.L9:
 203              		.align	2
 204              	.L8:
 205 0018 00000000 		.word	hUsbDeviceFS
 206 001c 00000000 		.word	.LC0
 207 0020 18000000 		.word	.LC1
 208              		.cfi_endproc
 209              	.LFE238:
 211              		.section	.rodata.COM_manager.str1.4,"aMS",%progbits,1
 212              		.align	2
 213              	.LC2:
 214 0000 434F4D20 		.ascii	"COM manager started \015 \000"
 214      6D616E61 
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 17


 214      67657220 
 214      73746172 
 214      74656420 
 215 0017 00       		.align	2
 216              	.LC3:
 217 0018 6265666F 		.ascii	"before while loop \015 \000"
 217      72652077 
 217      68696C65 
 217      206C6F6F 
 217      70200D20 
 218 002d 000000   		.align	2
 219              	.LC4:
 220 0030 72656365 		.ascii	"received command: %02X \015 \012\000"
 220      69766564 
 220      20636F6D 
 220      6D616E64 
 220      3A202530 
 221 004b 00       		.align	2
 222              	.LC5:
 223 004c 25303258 		.ascii	"%02X \000"
 223      2000
 224 0052 0000     		.align	2
 225              	.LC6:
 226 0054 424C2073 		.ascii	"BL switched\000"
 226      77697463 
 226      68656400 
 227              		.align	2
 228              	.LC7:
 229 0060 454C2073 		.ascii	"EL switched\000"
 229      77697463 
 229      68656400 
 230              		.align	2
 231              	.LC8:
 232 006c 756E6B6E 		.ascii	"unknown command \015 \000"
 232      6F776E20 
 232      636F6D6D 
 232      616E6420 
 232      0D2000
 233 007f 00       		.align	2
 234              	.LC9:
 235 0080 73656E64 		.ascii	"sending actual temperature \015 \000"
 235      696E6720 
 235      61637475 
 235      616C2074 
 235      656D7065 
 236 009e 0000     		.align	2
 237              	.LC10:
 238 00a0 73657474 		.ascii	"setting target temperature \015 \000"
 238      696E6720 
 238      74617267 
 238      65742074 
 238      656D7065 
 239              		.global	__aeabi_f2d
 240 00be 0000     		.align	2
 241              	.LC11:
 242 00c0 73656E64 		.ascii	"sending actual heater state \015 \000"
 242      696E6720 
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 18


 242      61637475 
 242      616C2068 
 242      65617465 
 243              		.section	.text.COM_manager,"ax",%progbits
 244              		.align	1
 245              		.global	COM_manager
 246              		.syntax unified
 247              		.thumb
 248              		.thumb_func
 250              	COM_manager:
 251              	.LVL7:
 252              	.LFB235:
 507:Core/Src/main.c ****     uint32_t len = 32;
 253              		.loc 1 507 34 view -0
 254              		.cfi_startproc
 255              		@ args = 0, pretend = 0, frame = 48
 256              		@ frame_needed = 0, uses_anonymous_args = 0
 507:Core/Src/main.c ****     uint32_t len = 32;
 257              		.loc 1 507 34 is_stmt 0 view .LVU49
 258 0000 10B5     		push	{r4, lr}
 259              	.LCFI4:
 260              		.cfi_def_cfa_offset 8
 261              		.cfi_offset 4, -8
 262              		.cfi_offset 14, -4
 263 0002 8CB0     		sub	sp, sp, #48
 264              	.LCFI5:
 265              		.cfi_def_cfa_offset 56
 508:Core/Src/main.c ****     char feedback[RX_BUFF_SIZE];
 266              		.loc 1 508 5 is_stmt 1 view .LVU50
 267              	.LVL8:
 509:Core/Src/main.c ****     printf("COM manager started \r \n");
 268              		.loc 1 509 5 view .LVU51
 510:Core/Src/main.c ****     printf("before while loop \r \n");
 269              		.loc 1 510 5 view .LVU52
 270 0004 5748     		ldr	r0, .L28
 271              	.LVL9:
 510:Core/Src/main.c ****     printf("before while loop \r \n");
 272              		.loc 1 510 5 is_stmt 0 view .LVU53
 273 0006 FFF7FEFF 		bl	puts
 274              	.LVL10:
 511:Core/Src/main.c **** //    extern uint8_t received_bool;
 275              		.loc 1 511 5 is_stmt 1 view .LVU54
 276 000a 5748     		ldr	r0, .L28+4
 277 000c FFF7FEFF 		bl	puts
 278              	.LVL11:
 279 0010 99E0     		b	.L11
 280              	.LVL12:
 281              	.L13:
 282              	.LBB8:
 522:Core/Src/main.c ****             }
 283              		.loc 1 522 17 discriminator 3 view .LVU55
 284 0012 564B     		ldr	r3, .L28+8
 285 0014 195D     		ldrb	r1, [r3, r4]	@ zero_extendqisi2
 286 0016 5648     		ldr	r0, .L28+12
 287 0018 FFF7FEFF 		bl	printf
 288              	.LVL13:
 521:Core/Src/main.c ****                 printf("%02X ", UserRxBufferFS[i]);
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 19


 289              		.loc 1 521 47 discriminator 3 view .LVU56
 521:Core/Src/main.c ****                 printf("%02X ", UserRxBufferFS[i]);
 290              		.loc 1 521 48 is_stmt 0 discriminator 3 view .LVU57
 291 001c 0134     		adds	r4, r4, #1
 292              	.LVL14:
 293              	.L12:
 521:Core/Src/main.c ****                 printf("%02X ", UserRxBufferFS[i]);
 294              		.loc 1 521 29 is_stmt 1 discriminator 1 view .LVU58
 521:Core/Src/main.c ****                 printf("%02X ", UserRxBufferFS[i]);
 295              		.loc 1 521 13 is_stmt 0 discriminator 1 view .LVU59
 296 001e 0F2C     		cmp	r4, #15
 297 0020 F7DD     		ble	.L13
 298              	.LBE8:
 524:Core/Src/main.c ****                 case SET_LED_STATE:
 299              		.loc 1 524 13 is_stmt 1 view .LVU60
 524:Core/Src/main.c ****                 case SET_LED_STATE:
 300              		.loc 1 524 35 is_stmt 0 view .LVU61
 301 0022 524B     		ldr	r3, .L28+8
 302 0024 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 524:Core/Src/main.c ****                 case SET_LED_STATE:
 303              		.loc 1 524 13 view .LVU62
 304 0026 013B     		subs	r3, r3, #1
 305 0028 072B     		cmp	r3, #7
 306 002a 7FD8     		bhi	.L14
 307 002c DFE803F0 		tbb	[pc, r3]
 308              	.L16:
 309 0030 37       		.byte	(.L19-.L16)/2
 310 0031 4C       		.byte	(.L18-.L16)/2
 311 0032 7E       		.byte	(.L14-.L16)/2
 312 0033 7E       		.byte	(.L14-.L16)/2
 313 0034 66       		.byte	(.L17-.L16)/2
 314 0035 7E       		.byte	(.L14-.L16)/2
 315 0036 7E       		.byte	(.L14-.L16)/2
 316 0037 04       		.byte	(.L15-.L16)/2
 317              		.p2align 1
 318              	.L15:
 319              	.LBB9:
 526:Core/Src/main.c ****                         case 0x01:
 320              		.loc 1 526 21 is_stmt 1 view .LVU63
 526:Core/Src/main.c ****                         case 0x01:
 321              		.loc 1 526 42 is_stmt 0 view .LVU64
 322 0038 4C4B     		ldr	r3, .L28+8
 323 003a 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
 324 003c 012B     		cmp	r3, #1
 325 003e 05D0     		beq	.L20
 326 0040 022B     		cmp	r3, #2
 327 0042 1BD0     		beq	.L21
 537:Core/Src/main.c ****                             break;
 328              		.loc 1 537 29 is_stmt 1 view .LVU65
 329 0044 4B48     		ldr	r0, .L28+16
 330 0046 FFF7FEFF 		bl	puts
 331              	.LVL15:
 538:Core/Src/main.c ****                     }
 332              		.loc 1 538 29 view .LVU66
 333 004a 0FE0     		b	.L23
 334              	.L20:
 528:Core/Src/main.c ****                             strcpy(feedback+(RX_BUFF_SIZE-12), "BL switched");
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 20


 335              		.loc 1 528 29 view .LVU67
 528:Core/Src/main.c ****                             strcpy(feedback+(RX_BUFF_SIZE-12), "BL switched");
 336              		.loc 1 528 89 is_stmt 0 view .LVU68
 337 004c 474B     		ldr	r3, .L28+8
 338 004e DA7B     		ldrb	r2, [r3, #15]	@ zero_extendqisi2
 528:Core/Src/main.c ****                             strcpy(feedback+(RX_BUFF_SIZE-12), "BL switched");
 339              		.loc 1 528 29 view .LVU69
 340 0050 494B     		ldr	r3, .L28+20
 341 0052 B2FA82F2 		clz	r2, r2
 342 0056 5209     		lsrs	r2, r2, #5
 343 0058 1989     		ldrh	r1, [r3, #8]
 344 005a 5868     		ldr	r0, [r3, #4]
 345 005c FFF7FEFF 		bl	HAL_GPIO_WritePin
 346              	.LVL16:
 529:Core/Src/main.c **** 
 347              		.loc 1 529 29 is_stmt 1 view .LVU70
 348 0060 464B     		ldr	r3, .L28+24
 349 0062 93E80700 		ldm	r3, {r0, r1, r2}
 350 0066 0CAB     		add	r3, sp, #48
 351 0068 03E90700 		stmdb	r3, {r0, r1, r2}
 531:Core/Src/main.c ****                         case 0x02:
 352              		.loc 1 531 29 view .LVU71
 353              	.L23:
 541:Core/Src/main.c ****                     CDC_Transmit_FS(feedback, RX_BUFF_SIZE);
 354              		.loc 1 541 21 view .LVU72
 541:Core/Src/main.c ****                     CDC_Transmit_FS(feedback, RX_BUFF_SIZE);
 355              		.loc 1 541 32 is_stmt 0 view .LVU73
 356 006c 0823     		movs	r3, #8
 357 006e 8DF82030 		strb	r3, [sp, #32]
 542:Core/Src/main.c ****                     break;
 358              		.loc 1 542 21 is_stmt 1 view .LVU74
 359 0072 1021     		movs	r1, #16
 360 0074 08A8     		add	r0, sp, #32
 361 0076 FFF7FEFF 		bl	CDC_Transmit_FS
 362              	.LVL17:
 543:Core/Src/main.c ****                 case REQUEST_ACTUAL_TEMPERATURE:
 363              		.loc 1 543 21 view .LVU75
 364 007a 5AE0     		b	.L24
 365              	.L21:
 533:Core/Src/main.c ****                             strcpy(feedback+(RX_BUFF_SIZE-12), "EL switched");
 366              		.loc 1 533 29 view .LVU76
 533:Core/Src/main.c ****                             strcpy(feedback+(RX_BUFF_SIZE-12), "EL switched");
 367              		.loc 1 533 93 is_stmt 0 view .LVU77
 368 007c 3B4B     		ldr	r3, .L28+8
 369 007e DA7B     		ldrb	r2, [r3, #15]	@ zero_extendqisi2
 533:Core/Src/main.c ****                             strcpy(feedback+(RX_BUFF_SIZE-12), "EL switched");
 370              		.loc 1 533 29 view .LVU78
 371 0080 3F4B     		ldr	r3, .L28+28
 372 0082 B2FA82F2 		clz	r2, r2
 373 0086 5209     		lsrs	r2, r2, #5
 374 0088 1989     		ldrh	r1, [r3, #8]
 375 008a 5868     		ldr	r0, [r3, #4]
 376 008c FFF7FEFF 		bl	HAL_GPIO_WritePin
 377              	.LVL18:
 534:Core/Src/main.c ****                             break;
 378              		.loc 1 534 29 is_stmt 1 view .LVU79
 379 0090 3C4B     		ldr	r3, .L28+32
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 21


 380 0092 93E80700 		ldm	r3, {r0, r1, r2}
 381 0096 0CAB     		add	r3, sp, #48
 382 0098 03E90700 		stmdb	r3, {r0, r1, r2}
 535:Core/Src/main.c ****                         default:
 383              		.loc 1 535 29 view .LVU80
 384 009c E6E7     		b	.L23
 385              	.L19:
 545:Core/Src/main.c ****                     char value[RX_BUFF_SIZE];
 386              		.loc 1 545 21 view .LVU81
 387 009e 3A48     		ldr	r0, .L28+36
 388 00a0 FFF7FEFF 		bl	puts
 389              	.LVL19:
 546:Core/Src/main.c **** // Write
 390              		.loc 1 546 21 view .LVU82
 548:Core/Src/main.c ****                     * ((double *) (value + (sizeof(value) - sizeof(double)))) = ACTUAL_TEMP.value;
 391              		.loc 1 548 21 view .LVU83
 392 00a4 0023     		movs	r3, #0
 393 00a6 0093     		str	r3, [sp]
 394 00a8 0193     		str	r3, [sp, #4]
 395 00aa 0293     		str	r3, [sp, #8]
 396 00ac 0393     		str	r3, [sp, #12]
 549:Core/Src/main.c ****                     value[0]= REQUEST_ACTUAL_TEMPERATURE;
 397              		.loc 1 549 21 view .LVU84
 549:Core/Src/main.c ****                     value[0]= REQUEST_ACTUAL_TEMPERATURE;
 398              		.loc 1 549 92 is_stmt 0 view .LVU85
 399 00ae 374B     		ldr	r3, .L28+40
 400 00b0 D3E90223 		ldrd	r2, [r3, #8]
 549:Core/Src/main.c ****                     value[0]= REQUEST_ACTUAL_TEMPERATURE;
 401              		.loc 1 549 79 view .LVU86
 402 00b4 CDE90223 		strd	r2, [sp, #8]
 550:Core/Src/main.c **** // Read
 403              		.loc 1 550 21 is_stmt 1 view .LVU87
 550:Core/Src/main.c **** // Read
 404              		.loc 1 550 29 is_stmt 0 view .LVU88
 405 00b8 0123     		movs	r3, #1
 406 00ba 8DF80030 		strb	r3, [sp]
 553:Core/Src/main.c **** //                    xSemaphoreGive(ACTUAL_TEMP.semaphore);
 407              		.loc 1 553 21 is_stmt 1 view .LVU89
 408 00be 1021     		movs	r1, #16
 409 00c0 6846     		mov	r0, sp
 410 00c2 FFF7FEFF 		bl	CDC_Transmit_FS
 411              	.LVL20:
 555:Core/Src/main.c ****                 case SET_TARGET_TEMPERATURE:
 412              		.loc 1 555 21 view .LVU90
 413 00c6 34E0     		b	.L24
 414              	.L18:
 557:Core/Src/main.c **** //                    float ee =
 415              		.loc 1 557 21 view .LVU91
 416 00c8 3148     		ldr	r0, .L28+44
 417 00ca FFF7FEFF 		bl	puts
 418              	.LVL21:
 559:Core/Src/main.c ****                     memset(feedback, 0x00, RX_BUFF_SIZE);
 419              		.loc 1 559 21 view .LVU92
 559:Core/Src/main.c ****                     memset(feedback, 0x00, RX_BUFF_SIZE);
 420              		.loc 1 559 41 is_stmt 0 view .LVU93
 421 00ce 274B     		ldr	r3, .L28+8
 422 00d0 D3F8FC03 		ldr	r0, [r3, #1020]	@ unaligned
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 22


 423 00d4 FFF7FEFF 		bl	__aeabi_f2d
 424              	.LVL22:
 559:Core/Src/main.c ****                     memset(feedback, 0x00, RX_BUFF_SIZE);
 425              		.loc 1 559 39 view .LVU94
 426 00d8 2E4B     		ldr	r3, .L28+48
 427 00da C3E90201 		strd	r0, [r3, #8]
 560:Core/Src/main.c ****                     * ((double *) (feedback + (sizeof(feedback) - sizeof(double)))) = TARGET_TEMP.v
 428              		.loc 1 560 21 is_stmt 1 view .LVU95
 429 00de 0023     		movs	r3, #0
 430 00e0 0893     		str	r3, [sp, #32]
 431 00e2 0993     		str	r3, [sp, #36]
 432 00e4 0A93     		str	r3, [sp, #40]
 433 00e6 0B93     		str	r3, [sp, #44]
 561:Core/Src/main.c ****                     feedback[0]= SET_TARGET_TEMPERATURE;
 434              		.loc 1 561 21 view .LVU96
 561:Core/Src/main.c ****                     feedback[0]= SET_TARGET_TEMPERATURE;
 435              		.loc 1 561 85 is_stmt 0 view .LVU97
 436 00e8 CDE90A01 		strd	r0, [sp, #40]
 562:Core/Src/main.c ****                     CDC_Transmit_FS(feedback, RX_BUFF_SIZE);
 437              		.loc 1 562 21 is_stmt 1 view .LVU98
 562:Core/Src/main.c ****                     CDC_Transmit_FS(feedback, RX_BUFF_SIZE);
 438              		.loc 1 562 32 is_stmt 0 view .LVU99
 439 00ec 0223     		movs	r3, #2
 440 00ee 8DF82030 		strb	r3, [sp, #32]
 563:Core/Src/main.c **** 
 441              		.loc 1 563 21 is_stmt 1 view .LVU100
 442 00f2 1021     		movs	r1, #16
 443 00f4 08A8     		add	r0, sp, #32
 444 00f6 FFF7FEFF 		bl	CDC_Transmit_FS
 445              	.LVL23:
 565:Core/Src/main.c ****                 case REQUEST_ACTUAL_HEATER_STATE:
 446              		.loc 1 565 21 view .LVU101
 447 00fa 1AE0     		b	.L24
 448              	.L17:
 567:Core/Src/main.c ****                     char h_value[RX_BUFF_SIZE];
 449              		.loc 1 567 21 view .LVU102
 450 00fc 2648     		ldr	r0, .L28+52
 451 00fe FFF7FEFF 		bl	puts
 452              	.LVL24:
 568:Core/Src/main.c **** // Write
 453              		.loc 1 568 21 view .LVU103
 570:Core/Src/main.c ****                     * ((int *) (h_value + (sizeof(h_value) - sizeof(int)))) = ((TIM2->CCR2)/MAX_PWM
 454              		.loc 1 570 21 view .LVU104
 455 0102 4FF02033 		mov	r3, #538976288
 456 0106 0493     		str	r3, [sp, #16]
 457 0108 0593     		str	r3, [sp, #20]
 458 010a 0693     		str	r3, [sp, #24]
 459 010c 0793     		str	r3, [sp, #28]
 571:Core/Src/main.c **** 
 460              		.loc 1 571 21 view .LVU105
 571:Core/Src/main.c **** 
 461              		.loc 1 571 85 is_stmt 0 view .LVU106
 462 010e 4FF08043 		mov	r3, #1073741824
 463 0112 9B6B     		ldr	r3, [r3, #56]
 571:Core/Src/main.c **** 
 464              		.loc 1 571 92 view .LVU107
 465 0114 214A     		ldr	r2, .L28+56
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 23


 466 0116 A2FB0323 		umull	r2, r3, r2, r3
 467 011a DB0B     		lsrs	r3, r3, #15
 571:Core/Src/main.c **** 
 468              		.loc 1 571 107 view .LVU108
 469 011c 6422     		movs	r2, #100
 470 011e 02FB03F3 		mul	r3, r2, r3
 571:Core/Src/main.c **** 
 471              		.loc 1 571 77 view .LVU109
 472 0122 0793     		str	r3, [sp, #28]
 575:Core/Src/main.c ****                 default:
 473              		.loc 1 575 21 is_stmt 1 view .LVU110
 474 0124 1021     		movs	r1, #16
 475 0126 6846     		mov	r0, sp
 476 0128 FFF7FEFF 		bl	CDC_Transmit_FS
 477              	.LVL25:
 478              	.L14:
 577:Core/Src/main.c ****                     break;
 479              		.loc 1 577 21 view .LVU111
 480 012c 1148     		ldr	r0, .L28+16
 481 012e FFF7FEFF 		bl	puts
 482              	.LVL26:
 578:Core/Src/main.c ****             }
 483              		.loc 1 578 21 view .LVU112
 484              	.L24:
 485              	.LBE9:
 581:Core/Src/main.c ****             hUsbDeviceFS.dev_connection_status = 0x00;
 486              		.loc 1 581 13 view .LVU113
 487 0132 4FF02033 		mov	r3, #538976288
 488 0136 0893     		str	r3, [sp, #32]
 489 0138 0993     		str	r3, [sp, #36]
 490 013a 0A93     		str	r3, [sp, #40]
 491 013c 0B93     		str	r3, [sp, #44]
 582:Core/Src/main.c **** //        osDelay(100);
 492              		.loc 1 582 13 view .LVU114
 582:Core/Src/main.c **** //        osDelay(100);
 493              		.loc 1 582 48 is_stmt 0 view .LVU115
 494 013e 184B     		ldr	r3, .L28+60
 495 0140 0022     		movs	r2, #0
 496 0142 83F89F22 		strb	r2, [r3, #671]
 497              	.LVL27:
 498              	.L11:
 513:Core/Src/main.c **** 
 499              		.loc 1 513 5 is_stmt 1 view .LVU116
 516:Core/Src/main.c ****             HAL_Delay(1);
 500              		.loc 1 516 9 view .LVU117
 516:Core/Src/main.c ****             HAL_Delay(1);
 501              		.loc 1 516 25 is_stmt 0 view .LVU118
 502 0146 164B     		ldr	r3, .L28+60
 503 0148 93F89F32 		ldrb	r3, [r3, #671]	@ zero_extendqisi2
 516:Core/Src/main.c ****             HAL_Delay(1);
 504              		.loc 1 516 12 view .LVU119
 505 014c 012B     		cmp	r3, #1
 506 014e FAD1     		bne	.L11
 517:Core/Src/main.c **** 
 507              		.loc 1 517 13 is_stmt 1 view .LVU120
 508 0150 0120     		movs	r0, #1
 509 0152 FFF7FEFF 		bl	HAL_Delay
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 24


 510              	.LVL28:
 520:Core/Src/main.c ****             for (int i = 0; i < RX_BUFF_SIZE; i++) {
 511              		.loc 1 520 13 view .LVU121
 512 0156 054B     		ldr	r3, .L28+8
 513 0158 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 514 015a 1248     		ldr	r0, .L28+64
 515 015c FFF7FEFF 		bl	printf
 516              	.LVL29:
 521:Core/Src/main.c ****                 printf("%02X ", UserRxBufferFS[i]);
 517              		.loc 1 521 13 view .LVU122
 518              	.LBB10:
 521:Core/Src/main.c ****                 printf("%02X ", UserRxBufferFS[i]);
 519              		.loc 1 521 18 view .LVU123
 521:Core/Src/main.c ****                 printf("%02X ", UserRxBufferFS[i]);
 520              		.loc 1 521 22 is_stmt 0 view .LVU124
 521 0160 0024     		movs	r4, #0
 521:Core/Src/main.c ****                 printf("%02X ", UserRxBufferFS[i]);
 522              		.loc 1 521 13 view .LVU125
 523 0162 5CE7     		b	.L12
 524              	.L29:
 525              		.align	2
 526              	.L28:
 527 0164 00000000 		.word	.LC2
 528 0168 18000000 		.word	.LC3
 529 016c 00000000 		.word	UserRxBufferFS
 530 0170 4C000000 		.word	.LC5
 531 0174 6C000000 		.word	.LC8
 532 0178 00000000 		.word	.LANCHOR0
 533 017c 54000000 		.word	.LC6
 534 0180 00000000 		.word	.LANCHOR1
 535 0184 60000000 		.word	.LC7
 536 0188 80000000 		.word	.LC9
 537 018c 00000000 		.word	.LANCHOR2
 538 0190 A0000000 		.word	.LC10
 539 0194 00000000 		.word	.LANCHOR3
 540 0198 C0000000 		.word	.LC11
 541 019c 01800080 		.word	-2147450879
 542 01a0 00000000 		.word	hUsbDeviceFS
 543 01a4 30000000 		.word	.LC4
 544              	.LBE10:
 545              		.cfi_endproc
 546              	.LFE235:
 548              		.global	__aeabi_dsub
 549              		.global	__aeabi_dmul
 550              		.global	__aeabi_ddiv
 551              		.global	__aeabi_d2uiz
 552              		.section	.text.TEMP_manager,"ax",%progbits
 553              		.align	1
 554              		.global	TEMP_manager
 555              		.syntax unified
 556              		.thumb
 557              		.thumb_func
 559              	TEMP_manager:
 560              	.LVL30:
 561              	.LFB237:
 597:Core/Src/main.c ****     HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_3);
 562              		.loc 1 597 35 is_stmt 1 view -0
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 25


 563              		.cfi_startproc
 564              		@ args = 0, pretend = 0, frame = 0
 565              		@ frame_needed = 0, uses_anonymous_args = 0
 597:Core/Src/main.c ****     HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_3);
 566              		.loc 1 597 35 is_stmt 0 view .LVU127
 567 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 568              	.LCFI6:
 569              		.cfi_def_cfa_offset 24
 570              		.cfi_offset 3, -24
 571              		.cfi_offset 4, -20
 572              		.cfi_offset 5, -16
 573              		.cfi_offset 6, -12
 574              		.cfi_offset 7, -8
 575              		.cfi_offset 14, -4
 598:Core/Src/main.c ****     __HAL_TIM_SET_COMPARE(&htim2, TIM_CHANNEL_3, 100-0);
 576              		.loc 1 598 5 is_stmt 1 view .LVU128
 577 0002 2A4C     		ldr	r4, .L37
 578 0004 0821     		movs	r1, #8
 579 0006 2046     		mov	r0, r4
 580              	.LVL31:
 598:Core/Src/main.c ****     __HAL_TIM_SET_COMPARE(&htim2, TIM_CHANNEL_3, 100-0);
 581              		.loc 1 598 5 is_stmt 0 view .LVU129
 582 0008 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 583              	.LVL32:
 599:Core/Src/main.c **** 
 584              		.loc 1 599 5 is_stmt 1 view .LVU130
 585 000c 2368     		ldr	r3, [r4]
 586 000e 6422     		movs	r2, #100
 587 0010 DA63     		str	r2, [r3, #60]
 601:Core/Src/main.c ****     uint16_t dac_out;
 588              		.loc 1 601 5 view .LVU131
 589 0012 2748     		ldr	r0, .L37+4
 590 0014 FFF7FEFF 		bl	HAL_ADC_Start
 591              	.LVL33:
 602:Core/Src/main.c ****     float prev_error = 0;
 592              		.loc 1 602 5 view .LVU132
 603:Core/Src/main.c ****     float integral = 0;
 593              		.loc 1 603 5 view .LVU133
 604:Core/Src/main.c ****     float prev_integral = 0;
 594              		.loc 1 604 5 view .LVU134
 605:Core/Src/main.c ****     float error = 0;
 595              		.loc 1 605 5 view .LVU135
 606:Core/Src/main.c ****     uint32_t time_variable=HAL_GetTick();
 596              		.loc 1 606 5 view .LVU136
 607:Core/Src/main.c **** //    uint32_t time_diff;
 597              		.loc 1 607 5 view .LVU137
 607:Core/Src/main.c **** //    uint32_t time_diff;
 598              		.loc 1 607 28 is_stmt 0 view .LVU138
 599 0018 FFF7FEFF 		bl	HAL_GetTick
 600              	.LVL34:
 601 001c 0BE0     		b	.L31
 602              	.LVL35:
 603              	.L36:
 617:Core/Src/main.c **** 
 604              		.loc 1 617 17 is_stmt 1 view .LVU139
 617:Core/Src/main.c **** 
 605              		.loc 1 617 37 is_stmt 0 view .LVU140
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 26


 606 001e 2846     		mov	r0, r5
 607 0020 FFF7FEFF 		bl	HAL_ADC_GetValue
 608              	.LVL36:
 609 0024 FFF7FEFF 		bl	calc_temp
 610              	.LVL37:
 617:Core/Src/main.c **** 
 611              		.loc 1 617 35 view .LVU141
 612 0028 224B     		ldr	r3, .L37+8
 613 002a 83ED020B 		vstr.64	d0, [r3, #8]
 614 002e 1BE0     		b	.L32
 615              	.LVL38:
 616              	.L33:
 632:Core/Src/main.c **** 
 617              		.loc 1 632 13 discriminator 4 view .LVU142
 618 0030 1E4B     		ldr	r3, .L37
 619 0032 1B68     		ldr	r3, [r3]
 620 0034 DC63     		str	r4, [r3, #60]
 621              	.LVL39:
 622              	.L31:
 609:Core/Src/main.c **** 
 623              		.loc 1 609 5 is_stmt 1 view .LVU143
 612:Core/Src/main.c **** //            xSemaphoreTake(ACTUAL_TEMP.semaphore, portMAX_DELAY);
 624              		.loc 1 612 9 view .LVU144
 612:Core/Src/main.c **** //            xSemaphoreTake(ACTUAL_TEMP.semaphore, portMAX_DELAY);
 625              		.loc 1 612 12 is_stmt 0 view .LVU145
 626 0036 FFF7FEFF 		bl	HAL_GetTick
 627              	.LVL40:
 612:Core/Src/main.c **** //            xSemaphoreTake(ACTUAL_TEMP.semaphore, portMAX_DELAY);
 628              		.loc 1 612 25 view .LVU146
 629 003a 1F4C     		ldr	r4, .L37+12
 630 003c A4FB0034 		umull	r3, r4, r4, r0
 631 0040 A409     		lsrs	r4, r4, #6
 632 0042 C823     		movs	r3, #200
 633 0044 03FB1404 		mls	r4, r3, r4, r0
 612:Core/Src/main.c **** //            xSemaphoreTake(ACTUAL_TEMP.semaphore, portMAX_DELAY);
 634              		.loc 1 612 11 view .LVU147
 635 0048 002C     		cmp	r4, #0
 636 004a F4D1     		bne	.L31
 614:Core/Src/main.c ****             HAL_Delay(10);
 637              		.loc 1 614 13 is_stmt 1 view .LVU148
 638 004c 184D     		ldr	r5, .L37+4
 639 004e 2846     		mov	r0, r5
 640 0050 FFF7FEFF 		bl	HAL_ADC_Start
 641              	.LVL41:
 615:Core/Src/main.c ****             if (HAL_ADC_PollForConversion(&hadc1, HAL_MAX_DELAY) == HAL_OK) {
 642              		.loc 1 615 13 view .LVU149
 643 0054 0A20     		movs	r0, #10
 644 0056 FFF7FEFF 		bl	HAL_Delay
 645              	.LVL42:
 616:Core/Src/main.c ****                 ACTUAL_TEMP.value = calc_temp(HAL_ADC_GetValue(&hadc1));
 646              		.loc 1 616 13 view .LVU150
 616:Core/Src/main.c ****                 ACTUAL_TEMP.value = calc_temp(HAL_ADC_GetValue(&hadc1));
 647              		.loc 1 616 17 is_stmt 0 view .LVU151
 648 005a 4FF0FF31 		mov	r1, #-1
 649 005e 2846     		mov	r0, r5
 650 0060 FFF7FEFF 		bl	HAL_ADC_PollForConversion
 651              	.LVL43:
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 27


 616:Core/Src/main.c ****                 ACTUAL_TEMP.value = calc_temp(HAL_ADC_GetValue(&hadc1));
 652              		.loc 1 616 16 view .LVU152
 653 0064 0028     		cmp	r0, #0
 654 0066 DAD0     		beq	.L36
 655              	.L32:
 620:Core/Src/main.c **** 
 656              		.loc 1 620 13 is_stmt 1 view .LVU153
 657 0068 1148     		ldr	r0, .L37+4
 658 006a FFF7FEFF 		bl	HAL_ADC_Stop
 659              	.LVL44:
 622:Core/Src/main.c ****             error = TARGET_TEMP.value==0 ? 0.0 : (TARGET_TEMP.value - ACTUAL_TEMP.value);
 660              		.loc 1 622 13 view .LVU154
 622:Core/Src/main.c ****             error = TARGET_TEMP.value==0 ? 0.0 : (TARGET_TEMP.value - ACTUAL_TEMP.value);
 661              		.loc 1 622 29 is_stmt 0 view .LVU155
 662 006e FFF7FEFF 		bl	HAL_GetTick
 663              	.LVL45:
 623:Core/Src/main.c ****             integral = prev_integral + error * TEMP_CORRECTION_INTERVAL;
 664              		.loc 1 623 13 is_stmt 1 view .LVU156
 624:Core/Src/main.c **** 
 665              		.loc 1 624 13 view .LVU157
 627:Core/Src/main.c ****             prev_error = error;
 666              		.loc 1 627 13 view .LVU158
 627:Core/Src/main.c ****             prev_error = error;
 667              		.loc 1 627 58 is_stmt 0 view .LVU159
 668 0072 104B     		ldr	r3, .L37+8
 669 0074 D3E90267 		ldrd	r6, [r3, #8]
 627:Core/Src/main.c ****             prev_error = error;
 670              		.loc 1 627 45 view .LVU160
 671 0078 3246     		mov	r2, r6
 672 007a 3B46     		mov	r3, r7
 673 007c 0F49     		ldr	r1, .L37+16
 674 007e D1E90201 		ldrd	r0, [r1, #8]
 675 0082 FFF7FEFF 		bl	__aeabi_dsub
 676              	.LVL46:
 627:Core/Src/main.c ****             prev_error = error;
 677              		.loc 1 627 65 view .LVU161
 678 0086 0022     		movs	r2, #0
 679 0088 0D4B     		ldr	r3, .L37+20
 680 008a FFF7FEFF 		bl	__aeabi_dmul
 681              	.LVL47:
 627:Core/Src/main.c ****             prev_error = error;
 682              		.loc 1 627 69 view .LVU162
 683 008e 3246     		mov	r2, r6
 684 0090 3B46     		mov	r3, r7
 685 0092 FFF7FEFF 		bl	__aeabi_ddiv
 686              	.LVL48:
 627:Core/Src/main.c ****             prev_error = error;
 687              		.loc 1 627 21 view .LVU163
 688 0096 FFF7FEFF 		bl	__aeabi_d2uiz
 689              	.LVL49:
 690 009a 85B2     		uxth	r5, r0
 691              	.LVL50:
 628:Core/Src/main.c ****             prev_integral = integral;
 692              		.loc 1 628 13 is_stmt 1 view .LVU164
 629:Core/Src/main.c ****             time_variable = HAL_GetTick();
 693              		.loc 1 629 13 view .LVU165
 630:Core/Src/main.c **** 
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 28


 694              		.loc 1 630 13 view .LVU166
 630:Core/Src/main.c **** 
 695              		.loc 1 630 29 is_stmt 0 view .LVU167
 696 009c FFF7FEFF 		bl	HAL_GetTick
 697              	.LVL51:
 632:Core/Src/main.c **** 
 698              		.loc 1 632 13 is_stmt 1 view .LVU168
 699 00a0 642D     		cmp	r5, #100
 700 00a2 C5D8     		bhi	.L33
 632:Core/Src/main.c **** 
 701              		.loc 1 632 13 is_stmt 0 discriminator 1 view .LVU169
 702 00a4 C5F16404 		rsb	r4, r5, #100
 703 00a8 C2E7     		b	.L33
 704              	.L38:
 705 00aa 00BF     		.align	2
 706              	.L37:
 707 00ac 00000000 		.word	.LANCHOR4
 708 00b0 00000000 		.word	.LANCHOR5
 709 00b4 00000000 		.word	.LANCHOR2
 710 00b8 1F85EB51 		.word	1374389535
 711 00bc 00000000 		.word	.LANCHOR3
 712 00c0 00005940 		.word	1079574528
 713              		.cfi_endproc
 714              	.LFE237:
 716              		.section	.text.StartBlink,"ax",%progbits
 717              		.align	1
 718              		.global	StartBlink
 719              		.syntax unified
 720              		.thumb
 721              		.thumb_func
 723              	StartBlink:
 724              	.LVL52:
 725              	.LFB239:
 693:Core/Src/main.c **** }
 694:Core/Src/main.c **** #endif
 695:Core/Src/main.c **** 
 696:Core/Src/main.c **** #if LED1_HEATER_INFO==0x01
 697:Core/Src/main.c **** void LED_manager(void *argument) {
 698:Core/Src/main.c ****     while (1) {
 699:Core/Src/main.c **** 
 700:Core/Src/main.c ****     }
 701:Core/Src/main.c **** }
 702:Core/Src/main.c **** 
 703:Core/Src/main.c **** #endif
 704:Core/Src/main.c **** 
 705:Core/Src/main.c **** #if LED2_CONNECTION_INFO==0x01
 706:Core/Src/main.c **** 
 707:Core/Src/main.c **** 
 708:Core/Src/main.c **** #endif
 709:Core/Src/main.c **** 
 710:Core/Src/main.c **** 
 711:Core/Src/main.c **** 
 712:Core/Src/main.c **** 
 713:Core/Src/main.c **** 
 714:Core/Src/main.c **** 
 715:Core/Src/main.c **** /* USER CODE END 4 */
 716:Core/Src/main.c **** 
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 29


 717:Core/Src/main.c **** /* USER CODE BEGIN Header_StartBlink */
 718:Core/Src/main.c **** /**
 719:Core/Src/main.c ****   * @brief  Function implementing the Blink thread.
 720:Core/Src/main.c ****   * @param  argument: Not used
 721:Core/Src/main.c ****   * @retval None
 722:Core/Src/main.c ****   */
 723:Core/Src/main.c **** /* USER CODE END Header_StartBlink */
 724:Core/Src/main.c **** void StartBlink(void *argument)
 725:Core/Src/main.c **** {
 726              		.loc 1 725 1 is_stmt 1 view -0
 727              		.cfi_startproc
 728              		@ Volatile: function does not return.
 729              		@ args = 0, pretend = 0, frame = 0
 730              		@ frame_needed = 0, uses_anonymous_args = 0
 731              		.loc 1 725 1 is_stmt 0 view .LVU171
 732 0000 08B5     		push	{r3, lr}
 733              	.LCFI7:
 734              		.cfi_def_cfa_offset 8
 735              		.cfi_offset 3, -8
 736              		.cfi_offset 14, -4
 726:Core/Src/main.c ****   /* init code for USB_DEVICE */
 727:Core/Src/main.c ****   MX_USB_DEVICE_Init();
 737              		.loc 1 727 3 is_stmt 1 view .LVU172
 738 0002 FFF7FEFF 		bl	MX_USB_DEVICE_Init
 739              	.LVL53:
 740              	.L40:
 728:Core/Src/main.c ****   /* USER CODE BEGIN 5 */
 729:Core/Src/main.c ****   /* Infinite loop */
 730:Core/Src/main.c ****   for(;;)
 741              		.loc 1 730 3 discriminator 1 view .LVU173
 731:Core/Src/main.c ****   {
 732:Core/Src/main.c ****     osDelay(1);
 742              		.loc 1 732 5 discriminator 1 view .LVU174
 743 0006 0120     		movs	r0, #1
 744 0008 FFF7FEFF 		bl	osDelay
 745              	.LVL54:
 730:Core/Src/main.c ****   {
 746              		.loc 1 730 8 discriminator 1 view .LVU175
 747 000c FBE7     		b	.L40
 748              		.cfi_endproc
 749              	.LFE239:
 751              		.section	.text._write,"ax",%progbits
 752              		.align	1
 753              		.global	_write
 754              		.syntax unified
 755              		.thumb
 756              		.thumb_func
 758              	_write:
 759              	.LVL55:
 760              	.LFB228:
  42:Core/Src/main.c ****     int DataIdx;
 761              		.loc 1 42 1 view -0
 762              		.cfi_startproc
 763              		@ args = 0, pretend = 0, frame = 0
 764              		@ frame_needed = 0, uses_anonymous_args = 0
 765              		@ link register save eliminated.
  42:Core/Src/main.c ****     int DataIdx;
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 30


 766              		.loc 1 42 1 is_stmt 0 view .LVU177
 767 0000 1046     		mov	r0, r2
 768              	.LVL56:
  43:Core/Src/main.c ****     for(DataIdx = 0; DataIdx < len; DataIdx++)
 769              		.loc 1 43 5 is_stmt 1 view .LVU178
  44:Core/Src/main.c ****     {
 770              		.loc 1 44 5 view .LVU179
  44:Core/Src/main.c ****     {
 771              		.loc 1 44 17 is_stmt 0 view .LVU180
 772 0002 4FF0000C 		mov	ip, #0
  44:Core/Src/main.c ****     {
 773              		.loc 1 44 5 view .LVU181
 774 0006 0AE0     		b	.L43
 775              	.LVL57:
 776              	.L46:
 777              	.LBB13:
 778              	.LBB14:
 779              		.file 2 "Drivers/CMSIS/Include/core_cm4.h"
   1:Drivers/CMSIS/Include/core_cm4.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/core_cm4.h ****  * @file     core_cm4.h
   3:Drivers/CMSIS/Include/core_cm4.h ****  * @brief    CMSIS Cortex-M4 Core Peripheral Access Layer Header File
   4:Drivers/CMSIS/Include/core_cm4.h ****  * @version  V5.1.2
   5:Drivers/CMSIS/Include/core_cm4.h ****  * @date     04. June 2021
   6:Drivers/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/core_cm4.h **** /*
   8:Drivers/CMSIS/Include/core_cm4.h ****  * Copyright (c) 2009-2020 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/core_cm4.h ****  *
  10:Drivers/CMSIS/Include/core_cm4.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/core_cm4.h ****  *
  12:Drivers/CMSIS/Include/core_cm4.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/core_cm4.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/core_cm4.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/core_cm4.h ****  *
  16:Drivers/CMSIS/Include/core_cm4.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/core_cm4.h ****  *
  18:Drivers/CMSIS/Include/core_cm4.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/core_cm4.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/core_cm4.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/core_cm4.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/core_cm4.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/core_cm4.h ****  */
  24:Drivers/CMSIS/Include/core_cm4.h **** 
  25:Drivers/CMSIS/Include/core_cm4.h **** #if   defined ( __ICCARM__ )
  26:Drivers/CMSIS/Include/core_cm4.h ****   #pragma system_include         /* treat file as system include file for MISRA check */
  27:Drivers/CMSIS/Include/core_cm4.h **** #elif defined (__clang__)
  28:Drivers/CMSIS/Include/core_cm4.h ****   #pragma clang system_header   /* treat file as system include file */
  29:Drivers/CMSIS/Include/core_cm4.h **** #endif
  30:Drivers/CMSIS/Include/core_cm4.h **** 
  31:Drivers/CMSIS/Include/core_cm4.h **** #ifndef __CORE_CM4_H_GENERIC
  32:Drivers/CMSIS/Include/core_cm4.h **** #define __CORE_CM4_H_GENERIC
  33:Drivers/CMSIS/Include/core_cm4.h **** 
  34:Drivers/CMSIS/Include/core_cm4.h **** #include <stdint.h>
  35:Drivers/CMSIS/Include/core_cm4.h **** 
  36:Drivers/CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
  37:Drivers/CMSIS/Include/core_cm4.h ****  extern "C" {
  38:Drivers/CMSIS/Include/core_cm4.h **** #endif
  39:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 31


  40:Drivers/CMSIS/Include/core_cm4.h **** /**
  41:Drivers/CMSIS/Include/core_cm4.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  42:Drivers/CMSIS/Include/core_cm4.h ****   CMSIS violates the following MISRA-C:2004 rules:
  43:Drivers/CMSIS/Include/core_cm4.h **** 
  44:Drivers/CMSIS/Include/core_cm4.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  45:Drivers/CMSIS/Include/core_cm4.h ****      Function definitions in header files are used to allow 'inlining'.
  46:Drivers/CMSIS/Include/core_cm4.h **** 
  47:Drivers/CMSIS/Include/core_cm4.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  48:Drivers/CMSIS/Include/core_cm4.h ****      Unions are used for effective representation of core registers.
  49:Drivers/CMSIS/Include/core_cm4.h **** 
  50:Drivers/CMSIS/Include/core_cm4.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  51:Drivers/CMSIS/Include/core_cm4.h ****      Function-like macros are used to allow more efficient code.
  52:Drivers/CMSIS/Include/core_cm4.h ****  */
  53:Drivers/CMSIS/Include/core_cm4.h **** 
  54:Drivers/CMSIS/Include/core_cm4.h **** 
  55:Drivers/CMSIS/Include/core_cm4.h **** /*******************************************************************************
  56:Drivers/CMSIS/Include/core_cm4.h ****  *                 CMSIS definitions
  57:Drivers/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
  58:Drivers/CMSIS/Include/core_cm4.h **** /**
  59:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup Cortex_M4
  60:Drivers/CMSIS/Include/core_cm4.h ****   @{
  61:Drivers/CMSIS/Include/core_cm4.h ****  */
  62:Drivers/CMSIS/Include/core_cm4.h **** 
  63:Drivers/CMSIS/Include/core_cm4.h **** #include "cmsis_version.h"
  64:Drivers/CMSIS/Include/core_cm4.h **** 
  65:Drivers/CMSIS/Include/core_cm4.h **** /* CMSIS CM4 definitions */
  66:Drivers/CMSIS/Include/core_cm4.h **** #define __CM4_CMSIS_VERSION_MAIN  (__CM_CMSIS_VERSION_MAIN)              /*!< \deprecated [31:16] C
  67:Drivers/CMSIS/Include/core_cm4.h **** #define __CM4_CMSIS_VERSION_SUB   (__CM_CMSIS_VERSION_SUB)               /*!< \deprecated [15:0]  C
  68:Drivers/CMSIS/Include/core_cm4.h **** #define __CM4_CMSIS_VERSION       ((__CM4_CMSIS_VERSION_MAIN << 16U) | \
  69:Drivers/CMSIS/Include/core_cm4.h ****                                     __CM4_CMSIS_VERSION_SUB           )  /*!< \deprecated CMSIS HAL
  70:Drivers/CMSIS/Include/core_cm4.h **** 
  71:Drivers/CMSIS/Include/core_cm4.h **** #define __CORTEX_M                (4U)                                   /*!< Cortex-M Core */
  72:Drivers/CMSIS/Include/core_cm4.h **** 
  73:Drivers/CMSIS/Include/core_cm4.h **** /** __FPU_USED indicates whether an FPU is used or not.
  74:Drivers/CMSIS/Include/core_cm4.h ****     For this, __FPU_PRESENT has to be checked prior to making use of FPU specific registers and fun
  75:Drivers/CMSIS/Include/core_cm4.h **** */
  76:Drivers/CMSIS/Include/core_cm4.h **** #if defined ( __CC_ARM )
  77:Drivers/CMSIS/Include/core_cm4.h ****   #if defined __TARGET_FPU_VFP
  78:Drivers/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  79:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
  80:Drivers/CMSIS/Include/core_cm4.h ****     #else
  81:Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
  82:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
  83:Drivers/CMSIS/Include/core_cm4.h ****     #endif
  84:Drivers/CMSIS/Include/core_cm4.h ****   #else
  85:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
  86:Drivers/CMSIS/Include/core_cm4.h ****   #endif
  87:Drivers/CMSIS/Include/core_cm4.h **** 
  88:Drivers/CMSIS/Include/core_cm4.h **** #elif defined (__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  89:Drivers/CMSIS/Include/core_cm4.h ****   #if defined __ARM_FP
  90:Drivers/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  91:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
  92:Drivers/CMSIS/Include/core_cm4.h ****     #else
  93:Drivers/CMSIS/Include/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
  94:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
  95:Drivers/CMSIS/Include/core_cm4.h ****     #endif
  96:Drivers/CMSIS/Include/core_cm4.h ****   #else
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 32


  97:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
  98:Drivers/CMSIS/Include/core_cm4.h ****   #endif
  99:Drivers/CMSIS/Include/core_cm4.h **** 
 100:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __GNUC__ )
 101:Drivers/CMSIS/Include/core_cm4.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 102:Drivers/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 103:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 104:Drivers/CMSIS/Include/core_cm4.h ****     #else
 105:Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 106:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 107:Drivers/CMSIS/Include/core_cm4.h ****     #endif
 108:Drivers/CMSIS/Include/core_cm4.h ****   #else
 109:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 110:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 111:Drivers/CMSIS/Include/core_cm4.h **** 
 112:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __ICCARM__ )
 113:Drivers/CMSIS/Include/core_cm4.h ****   #if defined __ARMVFP__
 114:Drivers/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 115:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 116:Drivers/CMSIS/Include/core_cm4.h ****     #else
 117:Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 118:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 119:Drivers/CMSIS/Include/core_cm4.h ****     #endif
 120:Drivers/CMSIS/Include/core_cm4.h ****   #else
 121:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 122:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 123:Drivers/CMSIS/Include/core_cm4.h **** 
 124:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __TI_ARM__ )
 125:Drivers/CMSIS/Include/core_cm4.h ****   #if defined __TI_VFP_SUPPORT__
 126:Drivers/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 127:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 128:Drivers/CMSIS/Include/core_cm4.h ****     #else
 129:Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 130:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 131:Drivers/CMSIS/Include/core_cm4.h ****     #endif
 132:Drivers/CMSIS/Include/core_cm4.h ****   #else
 133:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 134:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 135:Drivers/CMSIS/Include/core_cm4.h **** 
 136:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __TASKING__ )
 137:Drivers/CMSIS/Include/core_cm4.h ****   #if defined __FPU_VFP__
 138:Drivers/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 139:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 140:Drivers/CMSIS/Include/core_cm4.h ****     #else
 141:Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 142:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 143:Drivers/CMSIS/Include/core_cm4.h ****     #endif
 144:Drivers/CMSIS/Include/core_cm4.h ****   #else
 145:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 146:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 147:Drivers/CMSIS/Include/core_cm4.h **** 
 148:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __CSMC__ )
 149:Drivers/CMSIS/Include/core_cm4.h ****   #if ( __CSMC__ & 0x400U)
 150:Drivers/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 151:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 152:Drivers/CMSIS/Include/core_cm4.h ****     #else
 153:Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 33


 154:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 155:Drivers/CMSIS/Include/core_cm4.h ****     #endif
 156:Drivers/CMSIS/Include/core_cm4.h ****   #else
 157:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 158:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 159:Drivers/CMSIS/Include/core_cm4.h **** 
 160:Drivers/CMSIS/Include/core_cm4.h **** #endif
 161:Drivers/CMSIS/Include/core_cm4.h **** 
 162:Drivers/CMSIS/Include/core_cm4.h **** #include "cmsis_compiler.h"               /* CMSIS compiler specific defines */
 163:Drivers/CMSIS/Include/core_cm4.h **** 
 164:Drivers/CMSIS/Include/core_cm4.h **** 
 165:Drivers/CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
 166:Drivers/CMSIS/Include/core_cm4.h **** }
 167:Drivers/CMSIS/Include/core_cm4.h **** #endif
 168:Drivers/CMSIS/Include/core_cm4.h **** 
 169:Drivers/CMSIS/Include/core_cm4.h **** #endif /* __CORE_CM4_H_GENERIC */
 170:Drivers/CMSIS/Include/core_cm4.h **** 
 171:Drivers/CMSIS/Include/core_cm4.h **** #ifndef __CMSIS_GENERIC
 172:Drivers/CMSIS/Include/core_cm4.h **** 
 173:Drivers/CMSIS/Include/core_cm4.h **** #ifndef __CORE_CM4_H_DEPENDANT
 174:Drivers/CMSIS/Include/core_cm4.h **** #define __CORE_CM4_H_DEPENDANT
 175:Drivers/CMSIS/Include/core_cm4.h **** 
 176:Drivers/CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
 177:Drivers/CMSIS/Include/core_cm4.h ****  extern "C" {
 178:Drivers/CMSIS/Include/core_cm4.h **** #endif
 179:Drivers/CMSIS/Include/core_cm4.h **** 
 180:Drivers/CMSIS/Include/core_cm4.h **** /* check device defines and use defaults */
 181:Drivers/CMSIS/Include/core_cm4.h **** #if defined __CHECK_DEVICE_DEFINES
 182:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __CM4_REV
 183:Drivers/CMSIS/Include/core_cm4.h ****     #define __CM4_REV               0x0000U
 184:Drivers/CMSIS/Include/core_cm4.h ****     #warning "__CM4_REV not defined in device header file; using default!"
 185:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 186:Drivers/CMSIS/Include/core_cm4.h **** 
 187:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __FPU_PRESENT
 188:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_PRESENT             0U
 189:Drivers/CMSIS/Include/core_cm4.h ****     #warning "__FPU_PRESENT not defined in device header file; using default!"
 190:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 191:Drivers/CMSIS/Include/core_cm4.h **** 
 192:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __MPU_PRESENT
 193:Drivers/CMSIS/Include/core_cm4.h ****     #define __MPU_PRESENT             0U
 194:Drivers/CMSIS/Include/core_cm4.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 195:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 196:Drivers/CMSIS/Include/core_cm4.h **** 
 197:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __VTOR_PRESENT
 198:Drivers/CMSIS/Include/core_cm4.h ****     #define __VTOR_PRESENT             1U
 199:Drivers/CMSIS/Include/core_cm4.h ****     #warning "__VTOR_PRESENT not defined in device header file; using default!"
 200:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 201:Drivers/CMSIS/Include/core_cm4.h **** 
 202:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __NVIC_PRIO_BITS
 203:Drivers/CMSIS/Include/core_cm4.h ****     #define __NVIC_PRIO_BITS          3U
 204:Drivers/CMSIS/Include/core_cm4.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 205:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 206:Drivers/CMSIS/Include/core_cm4.h **** 
 207:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __Vendor_SysTickConfig
 208:Drivers/CMSIS/Include/core_cm4.h ****     #define __Vendor_SysTickConfig    0U
 209:Drivers/CMSIS/Include/core_cm4.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 210:Drivers/CMSIS/Include/core_cm4.h ****   #endif
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 34


 211:Drivers/CMSIS/Include/core_cm4.h **** #endif
 212:Drivers/CMSIS/Include/core_cm4.h **** 
 213:Drivers/CMSIS/Include/core_cm4.h **** /* IO definitions (access restrictions to peripheral registers) */
 214:Drivers/CMSIS/Include/core_cm4.h **** /**
 215:Drivers/CMSIS/Include/core_cm4.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 216:Drivers/CMSIS/Include/core_cm4.h **** 
 217:Drivers/CMSIS/Include/core_cm4.h ****     <strong>IO Type Qualifiers</strong> are used
 218:Drivers/CMSIS/Include/core_cm4.h ****     \li to specify the access to peripheral variables.
 219:Drivers/CMSIS/Include/core_cm4.h ****     \li for automatic generation of peripheral register debug information.
 220:Drivers/CMSIS/Include/core_cm4.h **** */
 221:Drivers/CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
 222:Drivers/CMSIS/Include/core_cm4.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 223:Drivers/CMSIS/Include/core_cm4.h **** #else
 224:Drivers/CMSIS/Include/core_cm4.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 225:Drivers/CMSIS/Include/core_cm4.h **** #endif
 226:Drivers/CMSIS/Include/core_cm4.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 227:Drivers/CMSIS/Include/core_cm4.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 228:Drivers/CMSIS/Include/core_cm4.h **** 
 229:Drivers/CMSIS/Include/core_cm4.h **** /* following defines should be used for structure members */
 230:Drivers/CMSIS/Include/core_cm4.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 231:Drivers/CMSIS/Include/core_cm4.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 232:Drivers/CMSIS/Include/core_cm4.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 233:Drivers/CMSIS/Include/core_cm4.h **** 
 234:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group Cortex_M4 */
 235:Drivers/CMSIS/Include/core_cm4.h **** 
 236:Drivers/CMSIS/Include/core_cm4.h **** 
 237:Drivers/CMSIS/Include/core_cm4.h **** 
 238:Drivers/CMSIS/Include/core_cm4.h **** /*******************************************************************************
 239:Drivers/CMSIS/Include/core_cm4.h ****  *                 Register Abstraction
 240:Drivers/CMSIS/Include/core_cm4.h ****   Core Register contain:
 241:Drivers/CMSIS/Include/core_cm4.h ****   - Core Register
 242:Drivers/CMSIS/Include/core_cm4.h ****   - Core NVIC Register
 243:Drivers/CMSIS/Include/core_cm4.h ****   - Core SCB Register
 244:Drivers/CMSIS/Include/core_cm4.h ****   - Core SysTick Register
 245:Drivers/CMSIS/Include/core_cm4.h ****   - Core Debug Register
 246:Drivers/CMSIS/Include/core_cm4.h ****   - Core MPU Register
 247:Drivers/CMSIS/Include/core_cm4.h ****   - Core FPU Register
 248:Drivers/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
 249:Drivers/CMSIS/Include/core_cm4.h **** /**
 250:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 251:Drivers/CMSIS/Include/core_cm4.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 252:Drivers/CMSIS/Include/core_cm4.h **** */
 253:Drivers/CMSIS/Include/core_cm4.h **** 
 254:Drivers/CMSIS/Include/core_cm4.h **** /**
 255:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
 256:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 257:Drivers/CMSIS/Include/core_cm4.h ****   \brief      Core Register type definitions.
 258:Drivers/CMSIS/Include/core_cm4.h ****   @{
 259:Drivers/CMSIS/Include/core_cm4.h ****  */
 260:Drivers/CMSIS/Include/core_cm4.h **** 
 261:Drivers/CMSIS/Include/core_cm4.h **** /**
 262:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 263:Drivers/CMSIS/Include/core_cm4.h ****  */
 264:Drivers/CMSIS/Include/core_cm4.h **** typedef union
 265:Drivers/CMSIS/Include/core_cm4.h **** {
 266:Drivers/CMSIS/Include/core_cm4.h ****   struct
 267:Drivers/CMSIS/Include/core_cm4.h ****   {
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 35


 268:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:16;              /*!< bit:  0..15  Reserved */
 269:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 270:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved1:7;               /*!< bit: 20..26  Reserved */
 271:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 272:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 273:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 274:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 275:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 276:Drivers/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 277:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 278:Drivers/CMSIS/Include/core_cm4.h **** } APSR_Type;
 279:Drivers/CMSIS/Include/core_cm4.h **** 
 280:Drivers/CMSIS/Include/core_cm4.h **** /* APSR Register Definitions */
 281:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 282:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 283:Drivers/CMSIS/Include/core_cm4.h **** 
 284:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 285:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 286:Drivers/CMSIS/Include/core_cm4.h **** 
 287:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 288:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 289:Drivers/CMSIS/Include/core_cm4.h **** 
 290:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 291:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 292:Drivers/CMSIS/Include/core_cm4.h **** 
 293:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_Q_Pos                         27U                                            /*!< APSR
 294:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
 295:Drivers/CMSIS/Include/core_cm4.h **** 
 296:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_GE_Pos                        16U                                            /*!< APSR
 297:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_GE_Msk                        (0xFUL << APSR_GE_Pos)                         /*!< APSR
 298:Drivers/CMSIS/Include/core_cm4.h **** 
 299:Drivers/CMSIS/Include/core_cm4.h **** 
 300:Drivers/CMSIS/Include/core_cm4.h **** /**
 301:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 302:Drivers/CMSIS/Include/core_cm4.h ****  */
 303:Drivers/CMSIS/Include/core_cm4.h **** typedef union
 304:Drivers/CMSIS/Include/core_cm4.h **** {
 305:Drivers/CMSIS/Include/core_cm4.h ****   struct
 306:Drivers/CMSIS/Include/core_cm4.h ****   {
 307:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 308:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 309:Drivers/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 310:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 311:Drivers/CMSIS/Include/core_cm4.h **** } IPSR_Type;
 312:Drivers/CMSIS/Include/core_cm4.h **** 
 313:Drivers/CMSIS/Include/core_cm4.h **** /* IPSR Register Definitions */
 314:Drivers/CMSIS/Include/core_cm4.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 315:Drivers/CMSIS/Include/core_cm4.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 316:Drivers/CMSIS/Include/core_cm4.h **** 
 317:Drivers/CMSIS/Include/core_cm4.h **** 
 318:Drivers/CMSIS/Include/core_cm4.h **** /**
 319:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 320:Drivers/CMSIS/Include/core_cm4.h ****  */
 321:Drivers/CMSIS/Include/core_cm4.h **** typedef union
 322:Drivers/CMSIS/Include/core_cm4.h **** {
 323:Drivers/CMSIS/Include/core_cm4.h ****   struct
 324:Drivers/CMSIS/Include/core_cm4.h ****   {
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 36


 325:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 326:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:1;               /*!< bit:      9  Reserved */
 327:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t ICI_IT_1:6;                 /*!< bit: 10..15  ICI/IT part 1 */
 328:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 329:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved1:4;               /*!< bit: 20..23  Reserved */
 330:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit */
 331:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t ICI_IT_2:2;                 /*!< bit: 25..26  ICI/IT part 2 */
 332:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 333:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 334:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 335:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 336:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 337:Drivers/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 338:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 339:Drivers/CMSIS/Include/core_cm4.h **** } xPSR_Type;
 340:Drivers/CMSIS/Include/core_cm4.h **** 
 341:Drivers/CMSIS/Include/core_cm4.h **** /* xPSR Register Definitions */
 342:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 343:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 344:Drivers/CMSIS/Include/core_cm4.h **** 
 345:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 346:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 347:Drivers/CMSIS/Include/core_cm4.h **** 
 348:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 349:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 350:Drivers/CMSIS/Include/core_cm4.h **** 
 351:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 352:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 353:Drivers/CMSIS/Include/core_cm4.h **** 
 354:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_Q_Pos                         27U                                            /*!< xPSR
 355:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
 356:Drivers/CMSIS/Include/core_cm4.h **** 
 357:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_ICI_IT_2_Pos                  25U                                            /*!< xPSR
 358:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_ICI_IT_2_Msk                  (3UL << xPSR_ICI_IT_2_Pos)                     /*!< xPSR
 359:Drivers/CMSIS/Include/core_cm4.h **** 
 360:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 361:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 362:Drivers/CMSIS/Include/core_cm4.h **** 
 363:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_GE_Pos                        16U                                            /*!< xPSR
 364:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_GE_Msk                        (0xFUL << xPSR_GE_Pos)                         /*!< xPSR
 365:Drivers/CMSIS/Include/core_cm4.h **** 
 366:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_ICI_IT_1_Pos                  10U                                            /*!< xPSR
 367:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_ICI_IT_1_Msk                  (0x3FUL << xPSR_ICI_IT_1_Pos)                  /*!< xPSR
 368:Drivers/CMSIS/Include/core_cm4.h **** 
 369:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 370:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 371:Drivers/CMSIS/Include/core_cm4.h **** 
 372:Drivers/CMSIS/Include/core_cm4.h **** 
 373:Drivers/CMSIS/Include/core_cm4.h **** /**
 374:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Union type to access the Control Registers (CONTROL).
 375:Drivers/CMSIS/Include/core_cm4.h ****  */
 376:Drivers/CMSIS/Include/core_cm4.h **** typedef union
 377:Drivers/CMSIS/Include/core_cm4.h **** {
 378:Drivers/CMSIS/Include/core_cm4.h ****   struct
 379:Drivers/CMSIS/Include/core_cm4.h ****   {
 380:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 381:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 37


 382:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t FPCA:1;                     /*!< bit:      2  FP extension active flag */
 383:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:29;              /*!< bit:  3..31  Reserved */
 384:Drivers/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 385:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 386:Drivers/CMSIS/Include/core_cm4.h **** } CONTROL_Type;
 387:Drivers/CMSIS/Include/core_cm4.h **** 
 388:Drivers/CMSIS/Include/core_cm4.h **** /* CONTROL Register Definitions */
 389:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_FPCA_Pos                    2U                                            /*!< CONT
 390:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_FPCA_Msk                   (1UL << CONTROL_FPCA_Pos)                      /*!< CONT
 391:Drivers/CMSIS/Include/core_cm4.h **** 
 392:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 393:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 394:Drivers/CMSIS/Include/core_cm4.h **** 
 395:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 396:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 397:Drivers/CMSIS/Include/core_cm4.h **** 
 398:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_CORE */
 399:Drivers/CMSIS/Include/core_cm4.h **** 
 400:Drivers/CMSIS/Include/core_cm4.h **** 
 401:Drivers/CMSIS/Include/core_cm4.h **** /**
 402:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
 403:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 404:Drivers/CMSIS/Include/core_cm4.h ****   \brief      Type definitions for the NVIC Registers
 405:Drivers/CMSIS/Include/core_cm4.h ****   @{
 406:Drivers/CMSIS/Include/core_cm4.h ****  */
 407:Drivers/CMSIS/Include/core_cm4.h **** 
 408:Drivers/CMSIS/Include/core_cm4.h **** /**
 409:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 410:Drivers/CMSIS/Include/core_cm4.h ****  */
 411:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 412:Drivers/CMSIS/Include/core_cm4.h **** {
 413:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ISER[8U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 414:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[24U];
 415:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ICER[8U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 416:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED1[24U];
 417:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ISPR[8U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 418:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED2[24U];
 419:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ICPR[8U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 420:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED3[24U];
 421:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t IABR[8U];               /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register */
 422:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED4[56U];
 423:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint8_t  IP[240U];               /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 424:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED5[644U];
 425:Drivers/CMSIS/Include/core_cm4.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 426:Drivers/CMSIS/Include/core_cm4.h **** }  NVIC_Type;
 427:Drivers/CMSIS/Include/core_cm4.h **** 
 428:Drivers/CMSIS/Include/core_cm4.h **** /* Software Triggered Interrupt Register Definitions */
 429:Drivers/CMSIS/Include/core_cm4.h **** #define NVIC_STIR_INTID_Pos                 0U                                         /*!< STIR: I
 430:Drivers/CMSIS/Include/core_cm4.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
 431:Drivers/CMSIS/Include/core_cm4.h **** 
 432:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_NVIC */
 433:Drivers/CMSIS/Include/core_cm4.h **** 
 434:Drivers/CMSIS/Include/core_cm4.h **** 
 435:Drivers/CMSIS/Include/core_cm4.h **** /**
 436:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 437:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 438:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the System Control Block Registers
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 38


 439:Drivers/CMSIS/Include/core_cm4.h ****   @{
 440:Drivers/CMSIS/Include/core_cm4.h ****  */
 441:Drivers/CMSIS/Include/core_cm4.h **** 
 442:Drivers/CMSIS/Include/core_cm4.h **** /**
 443:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the System Control Block (SCB).
 444:Drivers/CMSIS/Include/core_cm4.h ****  */
 445:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 446:Drivers/CMSIS/Include/core_cm4.h **** {
 447:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 448:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 449:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 450:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 451:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 452:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 453:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint8_t  SHP[12U];               /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 454:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 455:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CFSR;                   /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 456:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t HFSR;                   /*!< Offset: 0x02C (R/W)  HardFault Status Register */
 457:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t DFSR;                   /*!< Offset: 0x030 (R/W)  Debug Fault Status Register */
 458:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MMFAR;                  /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 459:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t BFAR;                   /*!< Offset: 0x038 (R/W)  BusFault Address Register */
 460:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t AFSR;                   /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 461:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PFR[2U];                /*!< Offset: 0x040 (R/ )  Processor Feature Register */
 462:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t DFR;                    /*!< Offset: 0x048 (R/ )  Debug Feature Register */
 463:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ADR;                    /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register */
 464:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t MMFR[4U];               /*!< Offset: 0x050 (R/ )  Memory Model Feature Register */
 465:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ISAR[5U];               /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 466:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[5U];
 467:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CPACR;                  /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 468:Drivers/CMSIS/Include/core_cm4.h **** } SCB_Type;
 469:Drivers/CMSIS/Include/core_cm4.h **** 
 470:Drivers/CMSIS/Include/core_cm4.h **** /* SCB CPUID Register Definitions */
 471:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 472:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 473:Drivers/CMSIS/Include/core_cm4.h **** 
 474:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 475:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 476:Drivers/CMSIS/Include/core_cm4.h **** 
 477:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 478:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 479:Drivers/CMSIS/Include/core_cm4.h **** 
 480:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 481:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 482:Drivers/CMSIS/Include/core_cm4.h **** 
 483:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 484:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 485:Drivers/CMSIS/Include/core_cm4.h **** 
 486:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Interrupt Control State Register Definitions */
 487:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 488:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 489:Drivers/CMSIS/Include/core_cm4.h **** 
 490:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 491:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 492:Drivers/CMSIS/Include/core_cm4.h **** 
 493:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 494:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 495:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 39


 496:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 497:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 498:Drivers/CMSIS/Include/core_cm4.h **** 
 499:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 500:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 501:Drivers/CMSIS/Include/core_cm4.h **** 
 502:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 503:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 504:Drivers/CMSIS/Include/core_cm4.h **** 
 505:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 506:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 507:Drivers/CMSIS/Include/core_cm4.h **** 
 508:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 509:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 510:Drivers/CMSIS/Include/core_cm4.h **** 
 511:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Pos             11U                                            /*!< SCB 
 512:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 513:Drivers/CMSIS/Include/core_cm4.h **** 
 514:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 515:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 516:Drivers/CMSIS/Include/core_cm4.h **** 
 517:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Vector Table Offset Register Definitions */
 518:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 519:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 520:Drivers/CMSIS/Include/core_cm4.h **** 
 521:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 522:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 523:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 524:Drivers/CMSIS/Include/core_cm4.h **** 
 525:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 526:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 527:Drivers/CMSIS/Include/core_cm4.h **** 
 528:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 529:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 530:Drivers/CMSIS/Include/core_cm4.h **** 
 531:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Pos              8U                                            /*!< SCB 
 532:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 533:Drivers/CMSIS/Include/core_cm4.h **** 
 534:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 535:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 536:Drivers/CMSIS/Include/core_cm4.h **** 
 537:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 538:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 539:Drivers/CMSIS/Include/core_cm4.h **** 
 540:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Pos             0U                                            /*!< SCB 
 541:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/)           /*!< SCB 
 542:Drivers/CMSIS/Include/core_cm4.h **** 
 543:Drivers/CMSIS/Include/core_cm4.h **** /* SCB System Control Register Definitions */
 544:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 545:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 546:Drivers/CMSIS/Include/core_cm4.h **** 
 547:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 548:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 549:Drivers/CMSIS/Include/core_cm4.h **** 
 550:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 551:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 552:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 40


 553:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Configuration Control Register Definitions */
 554:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 555:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 556:Drivers/CMSIS/Include/core_cm4.h **** 
 557:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Pos               8U                                            /*!< SCB 
 558:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 559:Drivers/CMSIS/Include/core_cm4.h **** 
 560:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Pos               4U                                            /*!< SCB 
 561:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 562:Drivers/CMSIS/Include/core_cm4.h **** 
 563:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 564:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 565:Drivers/CMSIS/Include/core_cm4.h **** 
 566:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Pos            1U                                            /*!< SCB 
 567:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 568:Drivers/CMSIS/Include/core_cm4.h **** 
 569:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0U                                            /*!< SCB 
 570:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/)        /*!< SCB 
 571:Drivers/CMSIS/Include/core_cm4.h **** 
 572:Drivers/CMSIS/Include/core_cm4.h **** /* SCB System Handler Control and State Register Definitions */
 573:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18U                                            /*!< SCB 
 574:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 575:Drivers/CMSIS/Include/core_cm4.h **** 
 576:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17U                                            /*!< SCB 
 577:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 578:Drivers/CMSIS/Include/core_cm4.h **** 
 579:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16U                                            /*!< SCB 
 580:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 581:Drivers/CMSIS/Include/core_cm4.h **** 
 582:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 583:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 584:Drivers/CMSIS/Include/core_cm4.h **** 
 585:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14U                                            /*!< SCB 
 586:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 587:Drivers/CMSIS/Include/core_cm4.h **** 
 588:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13U                                            /*!< SCB 
 589:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 590:Drivers/CMSIS/Include/core_cm4.h **** 
 591:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12U                                            /*!< SCB 
 592:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 593:Drivers/CMSIS/Include/core_cm4.h **** 
 594:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11U                                            /*!< SCB 
 595:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 596:Drivers/CMSIS/Include/core_cm4.h **** 
 597:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Pos            10U                                            /*!< SCB 
 598:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 599:Drivers/CMSIS/Include/core_cm4.h **** 
 600:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Pos            8U                                            /*!< SCB 
 601:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 602:Drivers/CMSIS/Include/core_cm4.h **** 
 603:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Pos             7U                                            /*!< SCB 
 604:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 605:Drivers/CMSIS/Include/core_cm4.h **** 
 606:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3U                                            /*!< SCB 
 607:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 608:Drivers/CMSIS/Include/core_cm4.h **** 
 609:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1U                                            /*!< SCB 
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 41


 610:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 611:Drivers/CMSIS/Include/core_cm4.h **** 
 612:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0U                                            /*!< SCB 
 613:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
 614:Drivers/CMSIS/Include/core_cm4.h **** 
 615:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Configurable Fault Status Register Definitions */
 616:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Pos            16U                                            /*!< SCB 
 617:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 618:Drivers/CMSIS/Include/core_cm4.h **** 
 619:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8U                                            /*!< SCB 
 620:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 621:Drivers/CMSIS/Include/core_cm4.h **** 
 622:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0U                                            /*!< SCB 
 623:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 624:Drivers/CMSIS/Include/core_cm4.h **** 
 625:Drivers/CMSIS/Include/core_cm4.h **** /* MemManage Fault Status Register (part of SCB Configurable Fault Status Register) */
 626:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MMARVALID_Pos             (SCB_CFSR_MEMFAULTSR_Pos + 7U)                 /*!< SCB 
 627:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MMARVALID_Msk             (1UL << SCB_CFSR_MMARVALID_Pos)                /*!< SCB 
 628:Drivers/CMSIS/Include/core_cm4.h **** 
 629:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MLSPERR_Pos               (SCB_CFSR_MEMFAULTSR_Pos + 5U)                 /*!< SCB 
 630:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MLSPERR_Msk               (1UL << SCB_CFSR_MLSPERR_Pos)                  /*!< SCB 
 631:Drivers/CMSIS/Include/core_cm4.h **** 
 632:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MSTKERR_Pos               (SCB_CFSR_MEMFAULTSR_Pos + 4U)                 /*!< SCB 
 633:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MSTKERR_Msk               (1UL << SCB_CFSR_MSTKERR_Pos)                  /*!< SCB 
 634:Drivers/CMSIS/Include/core_cm4.h **** 
 635:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MUNSTKERR_Pos             (SCB_CFSR_MEMFAULTSR_Pos + 3U)                 /*!< SCB 
 636:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MUNSTKERR_Msk             (1UL << SCB_CFSR_MUNSTKERR_Pos)                /*!< SCB 
 637:Drivers/CMSIS/Include/core_cm4.h **** 
 638:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_DACCVIOL_Pos              (SCB_CFSR_MEMFAULTSR_Pos + 1U)                 /*!< SCB 
 639:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_DACCVIOL_Msk              (1UL << SCB_CFSR_DACCVIOL_Pos)                 /*!< SCB 
 640:Drivers/CMSIS/Include/core_cm4.h **** 
 641:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IACCVIOL_Pos              (SCB_CFSR_MEMFAULTSR_Pos + 0U)                 /*!< SCB 
 642:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IACCVIOL_Msk              (1UL /*<< SCB_CFSR_IACCVIOL_Pos*/)             /*!< SCB 
 643:Drivers/CMSIS/Include/core_cm4.h **** 
 644:Drivers/CMSIS/Include/core_cm4.h **** /* BusFault Status Register (part of SCB Configurable Fault Status Register) */
 645:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_BFARVALID_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 7U)                  /*!< SCB 
 646:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_BFARVALID_Msk            (1UL << SCB_CFSR_BFARVALID_Pos)                 /*!< SCB 
 647:Drivers/CMSIS/Include/core_cm4.h **** 
 648:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_LSPERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 5U)                  /*!< SCB 
 649:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_LSPERR_Msk               (1UL << SCB_CFSR_LSPERR_Pos)                    /*!< SCB 
 650:Drivers/CMSIS/Include/core_cm4.h **** 
 651:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_STKERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 4U)                  /*!< SCB 
 652:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_STKERR_Msk               (1UL << SCB_CFSR_STKERR_Pos)                    /*!< SCB 
 653:Drivers/CMSIS/Include/core_cm4.h **** 
 654:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNSTKERR_Pos             (SCB_CFSR_BUSFAULTSR_Pos + 3U)                  /*!< SCB 
 655:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNSTKERR_Msk             (1UL << SCB_CFSR_UNSTKERR_Pos)                  /*!< SCB 
 656:Drivers/CMSIS/Include/core_cm4.h **** 
 657:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IMPRECISERR_Pos          (SCB_CFSR_BUSFAULTSR_Pos + 2U)                  /*!< SCB 
 658:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IMPRECISERR_Msk          (1UL << SCB_CFSR_IMPRECISERR_Pos)               /*!< SCB 
 659:Drivers/CMSIS/Include/core_cm4.h **** 
 660:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_PRECISERR_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 1U)                  /*!< SCB 
 661:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_PRECISERR_Msk            (1UL << SCB_CFSR_PRECISERR_Pos)                 /*!< SCB 
 662:Drivers/CMSIS/Include/core_cm4.h **** 
 663:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IBUSERR_Pos              (SCB_CFSR_BUSFAULTSR_Pos + 0U)                  /*!< SCB 
 664:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IBUSERR_Msk              (1UL << SCB_CFSR_IBUSERR_Pos)                   /*!< SCB 
 665:Drivers/CMSIS/Include/core_cm4.h **** 
 666:Drivers/CMSIS/Include/core_cm4.h **** /* UsageFault Status Register (part of SCB Configurable Fault Status Register) */
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 42


 667:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_DIVBYZERO_Pos            (SCB_CFSR_USGFAULTSR_Pos + 9U)                  /*!< SCB 
 668:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_DIVBYZERO_Msk            (1UL << SCB_CFSR_DIVBYZERO_Pos)                 /*!< SCB 
 669:Drivers/CMSIS/Include/core_cm4.h **** 
 670:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNALIGNED_Pos            (SCB_CFSR_USGFAULTSR_Pos + 8U)                  /*!< SCB 
 671:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNALIGNED_Msk            (1UL << SCB_CFSR_UNALIGNED_Pos)                 /*!< SCB 
 672:Drivers/CMSIS/Include/core_cm4.h **** 
 673:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_NOCP_Pos                 (SCB_CFSR_USGFAULTSR_Pos + 3U)                  /*!< SCB 
 674:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_NOCP_Msk                 (1UL << SCB_CFSR_NOCP_Pos)                      /*!< SCB 
 675:Drivers/CMSIS/Include/core_cm4.h **** 
 676:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_INVPC_Pos                (SCB_CFSR_USGFAULTSR_Pos + 2U)                  /*!< SCB 
 677:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_INVPC_Msk                (1UL << SCB_CFSR_INVPC_Pos)                     /*!< SCB 
 678:Drivers/CMSIS/Include/core_cm4.h **** 
 679:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_INVSTATE_Pos             (SCB_CFSR_USGFAULTSR_Pos + 1U)                  /*!< SCB 
 680:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_INVSTATE_Msk             (1UL << SCB_CFSR_INVSTATE_Pos)                  /*!< SCB 
 681:Drivers/CMSIS/Include/core_cm4.h **** 
 682:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNDEFINSTR_Pos           (SCB_CFSR_USGFAULTSR_Pos + 0U)                  /*!< SCB 
 683:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNDEFINSTR_Msk           (1UL << SCB_CFSR_UNDEFINSTR_Pos)                /*!< SCB 
 684:Drivers/CMSIS/Include/core_cm4.h **** 
 685:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Hard Fault Status Register Definitions */
 686:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Pos              31U                                            /*!< SCB 
 687:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 688:Drivers/CMSIS/Include/core_cm4.h **** 
 689:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_FORCED_Pos                30U                                            /*!< SCB 
 690:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 691:Drivers/CMSIS/Include/core_cm4.h **** 
 692:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_VECTTBL_Pos                1U                                            /*!< SCB 
 693:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 694:Drivers/CMSIS/Include/core_cm4.h **** 
 695:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Debug Fault Status Register Definitions */
 696:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Pos               4U                                            /*!< SCB 
 697:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 698:Drivers/CMSIS/Include/core_cm4.h **** 
 699:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_VCATCH_Pos                 3U                                            /*!< SCB 
 700:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 701:Drivers/CMSIS/Include/core_cm4.h **** 
 702:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Pos                2U                                            /*!< SCB 
 703:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 704:Drivers/CMSIS/Include/core_cm4.h **** 
 705:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_BKPT_Pos                   1U                                            /*!< SCB 
 706:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 707:Drivers/CMSIS/Include/core_cm4.h **** 
 708:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_HALTED_Pos                 0U                                            /*!< SCB 
 709:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
 710:Drivers/CMSIS/Include/core_cm4.h **** 
 711:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_SCB */
 712:Drivers/CMSIS/Include/core_cm4.h **** 
 713:Drivers/CMSIS/Include/core_cm4.h **** 
 714:Drivers/CMSIS/Include/core_cm4.h **** /**
 715:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 716:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 717:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the System Control and ID Register not in the SCB
 718:Drivers/CMSIS/Include/core_cm4.h ****   @{
 719:Drivers/CMSIS/Include/core_cm4.h ****  */
 720:Drivers/CMSIS/Include/core_cm4.h **** 
 721:Drivers/CMSIS/Include/core_cm4.h **** /**
 722:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the System Control and ID Register not in the SCB.
 723:Drivers/CMSIS/Include/core_cm4.h ****  */
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 43


 724:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 725:Drivers/CMSIS/Include/core_cm4.h **** {
 726:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[1U];
 727:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ICTR;                   /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 728:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ACTLR;                  /*!< Offset: 0x008 (R/W)  Auxiliary Control Register */
 729:Drivers/CMSIS/Include/core_cm4.h **** } SCnSCB_Type;
 730:Drivers/CMSIS/Include/core_cm4.h **** 
 731:Drivers/CMSIS/Include/core_cm4.h **** /* Interrupt Controller Type Register Definitions */
 732:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0U                                         /*!< ICTR: I
 733:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 734:Drivers/CMSIS/Include/core_cm4.h **** 
 735:Drivers/CMSIS/Include/core_cm4.h **** /* Auxiliary Control Register Definitions */
 736:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Pos            9U                                         /*!< ACTLR: 
 737:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Msk           (1UL << SCnSCB_ACTLR_DISOOFP_Pos)           /*!< ACTLR: 
 738:Drivers/CMSIS/Include/core_cm4.h **** 
 739:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Pos            8U                                         /*!< ACTLR: 
 740:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Msk           (1UL << SCnSCB_ACTLR_DISFPCA_Pos)           /*!< ACTLR: 
 741:Drivers/CMSIS/Include/core_cm4.h **** 
 742:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2U                                         /*!< ACTLR: 
 743:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 744:Drivers/CMSIS/Include/core_cm4.h **** 
 745:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Pos         1U                                         /*!< ACTLR: 
 746:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Msk        (1UL << SCnSCB_ACTLR_DISDEFWBUF_Pos)        /*!< ACTLR: 
 747:Drivers/CMSIS/Include/core_cm4.h **** 
 748:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0U                                         /*!< ACTLR: 
 749:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/)    /*!< ACTLR: 
 750:Drivers/CMSIS/Include/core_cm4.h **** 
 751:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_SCnotSCB */
 752:Drivers/CMSIS/Include/core_cm4.h **** 
 753:Drivers/CMSIS/Include/core_cm4.h **** 
 754:Drivers/CMSIS/Include/core_cm4.h **** /**
 755:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 756:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 757:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the System Timer Registers.
 758:Drivers/CMSIS/Include/core_cm4.h ****   @{
 759:Drivers/CMSIS/Include/core_cm4.h ****  */
 760:Drivers/CMSIS/Include/core_cm4.h **** 
 761:Drivers/CMSIS/Include/core_cm4.h **** /**
 762:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the System Timer (SysTick).
 763:Drivers/CMSIS/Include/core_cm4.h ****  */
 764:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 765:Drivers/CMSIS/Include/core_cm4.h **** {
 766:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 767:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 768:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 769:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 770:Drivers/CMSIS/Include/core_cm4.h **** } SysTick_Type;
 771:Drivers/CMSIS/Include/core_cm4.h **** 
 772:Drivers/CMSIS/Include/core_cm4.h **** /* SysTick Control / Status Register Definitions */
 773:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 774:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 775:Drivers/CMSIS/Include/core_cm4.h **** 
 776:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 777:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 778:Drivers/CMSIS/Include/core_cm4.h **** 
 779:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 780:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 44


 781:Drivers/CMSIS/Include/core_cm4.h **** 
 782:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 783:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 784:Drivers/CMSIS/Include/core_cm4.h **** 
 785:Drivers/CMSIS/Include/core_cm4.h **** /* SysTick Reload Register Definitions */
 786:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 787:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 788:Drivers/CMSIS/Include/core_cm4.h **** 
 789:Drivers/CMSIS/Include/core_cm4.h **** /* SysTick Current Register Definitions */
 790:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 791:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 792:Drivers/CMSIS/Include/core_cm4.h **** 
 793:Drivers/CMSIS/Include/core_cm4.h **** /* SysTick Calibration Register Definitions */
 794:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 795:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 796:Drivers/CMSIS/Include/core_cm4.h **** 
 797:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 798:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 799:Drivers/CMSIS/Include/core_cm4.h **** 
 800:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 801:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 802:Drivers/CMSIS/Include/core_cm4.h **** 
 803:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_SysTick */
 804:Drivers/CMSIS/Include/core_cm4.h **** 
 805:Drivers/CMSIS/Include/core_cm4.h **** 
 806:Drivers/CMSIS/Include/core_cm4.h **** /**
 807:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 808:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
 809:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Instrumentation Trace Macrocell (ITM)
 810:Drivers/CMSIS/Include/core_cm4.h ****   @{
 811:Drivers/CMSIS/Include/core_cm4.h ****  */
 812:Drivers/CMSIS/Include/core_cm4.h **** 
 813:Drivers/CMSIS/Include/core_cm4.h **** /**
 814:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
 815:Drivers/CMSIS/Include/core_cm4.h ****  */
 816:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 817:Drivers/CMSIS/Include/core_cm4.h **** {
 818:Drivers/CMSIS/Include/core_cm4.h ****   __OM  union
 819:Drivers/CMSIS/Include/core_cm4.h ****   {
 820:Drivers/CMSIS/Include/core_cm4.h ****     __OM  uint8_t    u8;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit */
 821:Drivers/CMSIS/Include/core_cm4.h ****     __OM  uint16_t   u16;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit */
 822:Drivers/CMSIS/Include/core_cm4.h ****     __OM  uint32_t   u32;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit */
 823:Drivers/CMSIS/Include/core_cm4.h ****   }  PORT [32U];                         /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers */
 824:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[864U];
 825:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t TER;                    /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register */
 826:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED1[15U];
 827:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t TPR;                    /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register */
 828:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED2[15U];
 829:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t TCR;                    /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register */
 830:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED3[32U];
 831:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED4[43U];
 832:Drivers/CMSIS/Include/core_cm4.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register */
 833:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register */
 834:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED5[6U];
 835:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID4;                   /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
 836:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID5;                   /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
 837:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID6;                   /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 45


 838:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID7;                   /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
 839:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID0;                   /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
 840:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID1;                   /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
 841:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID2;                   /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
 842:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID3;                   /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
 843:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CID0;                   /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
 844:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CID1;                   /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
 845:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CID2;                   /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
 846:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CID3;                   /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
 847:Drivers/CMSIS/Include/core_cm4.h **** } ITM_Type;
 848:Drivers/CMSIS/Include/core_cm4.h **** 
 849:Drivers/CMSIS/Include/core_cm4.h **** /* ITM Trace Privilege Register Definitions */
 850:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TPR_PRIVMASK_Pos                0U                                            /*!< ITM 
 851:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFFFFFFFFUL /*<< ITM_TPR_PRIVMASK_Pos*/)     /*!< ITM 
 852:Drivers/CMSIS/Include/core_cm4.h **** 
 853:Drivers/CMSIS/Include/core_cm4.h **** /* ITM Trace Control Register Definitions */
 854:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_BUSY_Pos                   23U                                            /*!< ITM 
 855:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 856:Drivers/CMSIS/Include/core_cm4.h **** 
 857:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TraceBusID_Pos             16U                                            /*!< ITM 
 858:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
 859:Drivers/CMSIS/Include/core_cm4.h **** 
 860:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_GTSFREQ_Pos                10U                                            /*!< ITM 
 861:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
 862:Drivers/CMSIS/Include/core_cm4.h **** 
 863:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSPrescale_Pos              8U                                            /*!< ITM 
 864:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 865:Drivers/CMSIS/Include/core_cm4.h **** 
 866:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SWOENA_Pos                  4U                                            /*!< ITM 
 867:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 868:Drivers/CMSIS/Include/core_cm4.h **** 
 869:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_DWTENA_Pos                  3U                                            /*!< ITM 
 870:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 871:Drivers/CMSIS/Include/core_cm4.h **** 
 872:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SYNCENA_Pos                 2U                                            /*!< ITM 
 873:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 874:Drivers/CMSIS/Include/core_cm4.h **** 
 875:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSENA_Pos                   1U                                            /*!< ITM 
 876:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 877:Drivers/CMSIS/Include/core_cm4.h **** 
 878:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_ITMENA_Pos                  0U                                            /*!< ITM 
 879:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
 880:Drivers/CMSIS/Include/core_cm4.h **** 
 881:Drivers/CMSIS/Include/core_cm4.h **** /* ITM Lock Status Register Definitions */
 882:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_ByteAcc_Pos                 2U                                            /*!< ITM 
 883:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 884:Drivers/CMSIS/Include/core_cm4.h **** 
 885:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_Access_Pos                  1U                                            /*!< ITM 
 886:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
 887:Drivers/CMSIS/Include/core_cm4.h **** 
 888:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_Present_Pos                 0U                                            /*!< ITM 
 889:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_Present_Msk                (1UL /*<< ITM_LSR_Present_Pos*/)               /*!< ITM 
 890:Drivers/CMSIS/Include/core_cm4.h **** 
 891:Drivers/CMSIS/Include/core_cm4.h **** /*@}*/ /* end of group CMSIS_ITM */
 892:Drivers/CMSIS/Include/core_cm4.h **** 
 893:Drivers/CMSIS/Include/core_cm4.h **** 
 894:Drivers/CMSIS/Include/core_cm4.h **** /**
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 46


 895:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 896:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
 897:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Data Watchpoint and Trace (DWT)
 898:Drivers/CMSIS/Include/core_cm4.h ****   @{
 899:Drivers/CMSIS/Include/core_cm4.h ****  */
 900:Drivers/CMSIS/Include/core_cm4.h **** 
 901:Drivers/CMSIS/Include/core_cm4.h **** /**
 902:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
 903:Drivers/CMSIS/Include/core_cm4.h ****  */
 904:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 905:Drivers/CMSIS/Include/core_cm4.h **** {
 906:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  Control Register */
 907:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CYCCNT;                 /*!< Offset: 0x004 (R/W)  Cycle Count Register */
 908:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CPICNT;                 /*!< Offset: 0x008 (R/W)  CPI Count Register */
 909:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t EXCCNT;                 /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
 910:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t SLEEPCNT;               /*!< Offset: 0x010 (R/W)  Sleep Count Register */
 911:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t LSUCNT;                 /*!< Offset: 0x014 (R/W)  LSU Count Register */
 912:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FOLDCNT;                /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
 913:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PCSR;                   /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
 914:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t COMP0;                  /*!< Offset: 0x020 (R/W)  Comparator Register 0 */
 915:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MASK0;                  /*!< Offset: 0x024 (R/W)  Mask Register 0 */
 916:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FUNCTION0;              /*!< Offset: 0x028 (R/W)  Function Register 0 */
 917:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[1U];
 918:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t COMP1;                  /*!< Offset: 0x030 (R/W)  Comparator Register 1 */
 919:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MASK1;                  /*!< Offset: 0x034 (R/W)  Mask Register 1 */
 920:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FUNCTION1;              /*!< Offset: 0x038 (R/W)  Function Register 1 */
 921:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED1[1U];
 922:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t COMP2;                  /*!< Offset: 0x040 (R/W)  Comparator Register 2 */
 923:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MASK2;                  /*!< Offset: 0x044 (R/W)  Mask Register 2 */
 924:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FUNCTION2;              /*!< Offset: 0x048 (R/W)  Function Register 2 */
 925:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED2[1U];
 926:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t COMP3;                  /*!< Offset: 0x050 (R/W)  Comparator Register 3 */
 927:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MASK3;                  /*!< Offset: 0x054 (R/W)  Mask Register 3 */
 928:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FUNCTION3;              /*!< Offset: 0x058 (R/W)  Function Register 3 */
 929:Drivers/CMSIS/Include/core_cm4.h **** } DWT_Type;
 930:Drivers/CMSIS/Include/core_cm4.h **** 
 931:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Control Register Definitions */
 932:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Pos               28U                                         /*!< DWT CTR
 933:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
 934:Drivers/CMSIS/Include/core_cm4.h **** 
 935:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Pos              27U                                         /*!< DWT CTR
 936:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
 937:Drivers/CMSIS/Include/core_cm4.h **** 
 938:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26U                                         /*!< DWT CTR
 939:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
 940:Drivers/CMSIS/Include/core_cm4.h **** 
 941:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Pos              25U                                         /*!< DWT CTR
 942:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
 943:Drivers/CMSIS/Include/core_cm4.h **** 
 944:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Pos              24U                                         /*!< DWT CTR
 945:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
 946:Drivers/CMSIS/Include/core_cm4.h **** 
 947:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Pos             22U                                         /*!< DWT CTR
 948:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
 949:Drivers/CMSIS/Include/core_cm4.h **** 
 950:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21U                                         /*!< DWT CTR
 951:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 47


 952:Drivers/CMSIS/Include/core_cm4.h **** 
 953:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Pos             20U                                         /*!< DWT CTR
 954:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
 955:Drivers/CMSIS/Include/core_cm4.h **** 
 956:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19U                                         /*!< DWT CTR
 957:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
 958:Drivers/CMSIS/Include/core_cm4.h **** 
 959:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Pos             18U                                         /*!< DWT CTR
 960:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
 961:Drivers/CMSIS/Include/core_cm4.h **** 
 962:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Pos             17U                                         /*!< DWT CTR
 963:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
 964:Drivers/CMSIS/Include/core_cm4.h **** 
 965:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Pos             16U                                         /*!< DWT CTR
 966:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
 967:Drivers/CMSIS/Include/core_cm4.h **** 
 968:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12U                                         /*!< DWT CTR
 969:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
 970:Drivers/CMSIS/Include/core_cm4.h **** 
 971:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Pos               10U                                         /*!< DWT CTR
 972:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
 973:Drivers/CMSIS/Include/core_cm4.h **** 
 974:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCTAP_Pos                 9U                                         /*!< DWT CTR
 975:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
 976:Drivers/CMSIS/Include/core_cm4.h **** 
 977:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTINIT_Pos               5U                                         /*!< DWT CTR
 978:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
 979:Drivers/CMSIS/Include/core_cm4.h **** 
 980:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Pos             1U                                         /*!< DWT CTR
 981:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
 982:Drivers/CMSIS/Include/core_cm4.h **** 
 983:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Pos              0U                                         /*!< DWT CTR
 984:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
 985:Drivers/CMSIS/Include/core_cm4.h **** 
 986:Drivers/CMSIS/Include/core_cm4.h **** /* DWT CPI Count Register Definitions */
 987:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CPICNT_CPICNT_Pos               0U                                         /*!< DWT CPI
 988:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
 989:Drivers/CMSIS/Include/core_cm4.h **** 
 990:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Exception Overhead Count Register Definitions */
 991:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Pos               0U                                         /*!< DWT EXC
 992:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
 993:Drivers/CMSIS/Include/core_cm4.h **** 
 994:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Sleep Count Register Definitions */
 995:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0U                                         /*!< DWT SLE
 996:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
 997:Drivers/CMSIS/Include/core_cm4.h **** 
 998:Drivers/CMSIS/Include/core_cm4.h **** /* DWT LSU Count Register Definitions */
 999:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Pos               0U                                         /*!< DWT LSU
1000:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
1001:Drivers/CMSIS/Include/core_cm4.h **** 
1002:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Folded-instruction Count Register Definitions */
1003:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0U                                         /*!< DWT FOL
1004:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
1005:Drivers/CMSIS/Include/core_cm4.h **** 
1006:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Comparator Mask Register Definitions */
1007:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_MASK_MASK_Pos                   0U                                         /*!< DWT MAS
1008:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL /*<< DWT_MASK_MASK_Pos*/)           /*!< DWT MAS
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 48


1009:Drivers/CMSIS/Include/core_cm4.h **** 
1010:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Comparator Function Register Definitions */
1011:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Pos           24U                                         /*!< DWT FUN
1012:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
1013:Drivers/CMSIS/Include/core_cm4.h **** 
1014:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16U                                         /*!< DWT FUN
1015:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
1016:Drivers/CMSIS/Include/core_cm4.h **** 
1017:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12U                                         /*!< DWT FUN
1018:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
1019:Drivers/CMSIS/Include/core_cm4.h **** 
1020:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10U                                         /*!< DWT FUN
1021:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
1022:Drivers/CMSIS/Include/core_cm4.h **** 
1023:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9U                                         /*!< DWT FUN
1024:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
1025:Drivers/CMSIS/Include/core_cm4.h **** 
1026:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8U                                         /*!< DWT FUN
1027:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
1028:Drivers/CMSIS/Include/core_cm4.h **** 
1029:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7U                                         /*!< DWT FUN
1030:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
1031:Drivers/CMSIS/Include/core_cm4.h **** 
1032:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5U                                         /*!< DWT FUN
1033:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
1034:Drivers/CMSIS/Include/core_cm4.h **** 
1035:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Pos           0U                                         /*!< DWT FUN
1036:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/)    /*!< DWT FUN
1037:Drivers/CMSIS/Include/core_cm4.h **** 
1038:Drivers/CMSIS/Include/core_cm4.h **** /*@}*/ /* end of group CMSIS_DWT */
1039:Drivers/CMSIS/Include/core_cm4.h **** 
1040:Drivers/CMSIS/Include/core_cm4.h **** 
1041:Drivers/CMSIS/Include/core_cm4.h **** /**
1042:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1043:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_TPI     Trace Port Interface (TPI)
1044:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Trace Port Interface (TPI)
1045:Drivers/CMSIS/Include/core_cm4.h ****   @{
1046:Drivers/CMSIS/Include/core_cm4.h ****  */
1047:Drivers/CMSIS/Include/core_cm4.h **** 
1048:Drivers/CMSIS/Include/core_cm4.h **** /**
1049:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Trace Port Interface Register (TPI).
1050:Drivers/CMSIS/Include/core_cm4.h ****  */
1051:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
1052:Drivers/CMSIS/Include/core_cm4.h **** {
1053:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t SSPSR;                  /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
1054:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CSPSR;                  /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
1055:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[2U];
1056:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ACPR;                   /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
1057:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED1[55U];
1058:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t SPPR;                   /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
1059:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED2[131U];
1060:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t FFSR;                   /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
1061:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FFCR;                   /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
1062:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t FSCR;                   /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
1063:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED3[759U];
1064:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t TRIGGER;                /*!< Offset: 0xEE8 (R/ )  TRIGGER Register */
1065:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t FIFO0;                  /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 49


1066:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ITATBCTR2;              /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
1067:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED4[1U];
1068:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ITATBCTR0;              /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
1069:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t FIFO1;                  /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1070:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ITCTRL;                 /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1071:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED5[39U];
1072:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CLAIMSET;               /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1073:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CLAIMCLR;               /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
1074:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED7[8U];
1075:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t DEVID;                  /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1076:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t DEVTYPE;                /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1077:Drivers/CMSIS/Include/core_cm4.h **** } TPI_Type;
1078:Drivers/CMSIS/Include/core_cm4.h **** 
1079:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1080:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ACPR_PRESCALER_Pos              0U                                         /*!< TPI ACP
1081:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< TPI ACP
1082:Drivers/CMSIS/Include/core_cm4.h **** 
1083:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Selected Pin Protocol Register Definitions */
1084:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_SPPR_TXMODE_Pos                 0U                                         /*!< TPI SPP
1085:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
1086:Drivers/CMSIS/Include/core_cm4.h **** 
1087:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Formatter and Flush Status Register Definitions */
1088:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtNonStop_Pos              3U                                         /*!< TPI FFS
1089:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
1090:Drivers/CMSIS/Include/core_cm4.h **** 
1091:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_TCPresent_Pos              2U                                         /*!< TPI FFS
1092:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
1093:Drivers/CMSIS/Include/core_cm4.h **** 
1094:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtStopped_Pos              1U                                         /*!< TPI FFS
1095:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
1096:Drivers/CMSIS/Include/core_cm4.h **** 
1097:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FlInProg_Pos               0U                                         /*!< TPI FFS
1098:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
1099:Drivers/CMSIS/Include/core_cm4.h **** 
1100:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Formatter and Flush Control Register Definitions */
1101:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFCR_TrigIn_Pos                 8U                                         /*!< TPI FFC
1102:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
1103:Drivers/CMSIS/Include/core_cm4.h **** 
1104:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFCR_EnFCont_Pos                1U                                         /*!< TPI FFC
1105:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1106:Drivers/CMSIS/Include/core_cm4.h **** 
1107:Drivers/CMSIS/Include/core_cm4.h **** /* TPI TRIGGER Register Definitions */
1108:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Pos             0U                                         /*!< TPI TRI
1109:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
1110:Drivers/CMSIS/Include/core_cm4.h **** 
1111:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1112:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1113:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x1UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
1114:Drivers/CMSIS/Include/core_cm4.h **** 
1115:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1116:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1117:Drivers/CMSIS/Include/core_cm4.h **** 
1118:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1119:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x1UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1120:Drivers/CMSIS/Include/core_cm4.h **** 
1121:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1122:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 50


1123:Drivers/CMSIS/Include/core_cm4.h **** 
1124:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM2_Pos                 16U                                         /*!< TPI FIF
1125:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
1126:Drivers/CMSIS/Include/core_cm4.h **** 
1127:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM1_Pos                  8U                                         /*!< TPI FIF
1128:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
1129:Drivers/CMSIS/Include/core_cm4.h **** 
1130:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM0_Pos                  0U                                         /*!< TPI FIF
1131:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
1132:Drivers/CMSIS/Include/core_cm4.h **** 
1133:Drivers/CMSIS/Include/core_cm4.h **** /* TPI ITATBCTR2 Register Definitions */
1134:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY2_Pos          0U                                         /*!< TPI ITA
1135:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY2_Pos*/)   /*!< TPI ITA
1136:Drivers/CMSIS/Include/core_cm4.h **** 
1137:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY1_Pos          0U                                         /*!< TPI ITA
1138:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY1_Pos*/)   /*!< TPI ITA
1139:Drivers/CMSIS/Include/core_cm4.h **** 
1140:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1141:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1142:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x1UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1143:Drivers/CMSIS/Include/core_cm4.h **** 
1144:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1145:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1146:Drivers/CMSIS/Include/core_cm4.h **** 
1147:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1148:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x1UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1149:Drivers/CMSIS/Include/core_cm4.h **** 
1150:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1151:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1152:Drivers/CMSIS/Include/core_cm4.h **** 
1153:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM2_Pos                 16U                                         /*!< TPI FIF
1154:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1155:Drivers/CMSIS/Include/core_cm4.h **** 
1156:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM1_Pos                  8U                                         /*!< TPI FIF
1157:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1158:Drivers/CMSIS/Include/core_cm4.h **** 
1159:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM0_Pos                  0U                                         /*!< TPI FIF
1160:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
1161:Drivers/CMSIS/Include/core_cm4.h **** 
1162:Drivers/CMSIS/Include/core_cm4.h **** /* TPI ITATBCTR0 Register Definitions */
1163:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY2_Pos          0U                                         /*!< TPI ITA
1164:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY2_Pos*/)   /*!< TPI ITA
1165:Drivers/CMSIS/Include/core_cm4.h **** 
1166:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY1_Pos          0U                                         /*!< TPI ITA
1167:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY1_Pos*/)   /*!< TPI ITA
1168:Drivers/CMSIS/Include/core_cm4.h **** 
1169:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Integration Mode Control Register Definitions */
1170:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITCTRL_Mode_Pos                 0U                                         /*!< TPI ITC
1171:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITCTRL_Mode_Msk                (0x3UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
1172:Drivers/CMSIS/Include/core_cm4.h **** 
1173:Drivers/CMSIS/Include/core_cm4.h **** /* TPI DEVID Register Definitions */
1174:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NRZVALID_Pos             11U                                         /*!< TPI DEV
1175:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1176:Drivers/CMSIS/Include/core_cm4.h **** 
1177:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MANCVALID_Pos            10U                                         /*!< TPI DEV
1178:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1179:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 51


1180:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_PTINVALID_Pos             9U                                         /*!< TPI DEV
1181:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1182:Drivers/CMSIS/Include/core_cm4.h **** 
1183:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MinBufSz_Pos              6U                                         /*!< TPI DEV
1184:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1185:Drivers/CMSIS/Include/core_cm4.h **** 
1186:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Pos             5U                                         /*!< TPI DEV
1187:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1188:Drivers/CMSIS/Include/core_cm4.h **** 
1189:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Pos          0U                                         /*!< TPI DEV
1190:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1191:Drivers/CMSIS/Include/core_cm4.h **** 
1192:Drivers/CMSIS/Include/core_cm4.h **** /* TPI DEVTYPE Register Definitions */
1193:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_SubType_Pos             4U                                         /*!< TPI DEV
1194:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1195:Drivers/CMSIS/Include/core_cm4.h **** 
1196:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Pos           0U                                         /*!< TPI DEV
1197:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1198:Drivers/CMSIS/Include/core_cm4.h **** 
1199:Drivers/CMSIS/Include/core_cm4.h **** /*@}*/ /* end of group CMSIS_TPI */
1200:Drivers/CMSIS/Include/core_cm4.h **** 
1201:Drivers/CMSIS/Include/core_cm4.h **** 
1202:Drivers/CMSIS/Include/core_cm4.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1203:Drivers/CMSIS/Include/core_cm4.h **** /**
1204:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1205:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1206:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
1207:Drivers/CMSIS/Include/core_cm4.h ****   @{
1208:Drivers/CMSIS/Include/core_cm4.h ****  */
1209:Drivers/CMSIS/Include/core_cm4.h **** 
1210:Drivers/CMSIS/Include/core_cm4.h **** /**
1211:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
1212:Drivers/CMSIS/Include/core_cm4.h ****  */
1213:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
1214:Drivers/CMSIS/Include/core_cm4.h **** {
1215:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
1216:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
1217:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
1218:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1219:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RASR;                   /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1220:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RBAR_A1;                /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1221:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RASR_A1;                /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1222:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RBAR_A2;                /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1223:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RASR_A2;                /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1224:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RBAR_A3;                /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1225:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RASR_A3;                /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1226:Drivers/CMSIS/Include/core_cm4.h **** } MPU_Type;
1227:Drivers/CMSIS/Include/core_cm4.h **** 
1228:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_RALIASES                  4U
1229:Drivers/CMSIS/Include/core_cm4.h **** 
1230:Drivers/CMSIS/Include/core_cm4.h **** /* MPU Type Register Definitions */
1231:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
1232:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1233:Drivers/CMSIS/Include/core_cm4.h **** 
1234:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
1235:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1236:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 52


1237:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
1238:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
1239:Drivers/CMSIS/Include/core_cm4.h **** 
1240:Drivers/CMSIS/Include/core_cm4.h **** /* MPU Control Register Definitions */
1241:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
1242:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1243:Drivers/CMSIS/Include/core_cm4.h **** 
1244:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
1245:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1246:Drivers/CMSIS/Include/core_cm4.h **** 
1247:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
1248:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
1249:Drivers/CMSIS/Include/core_cm4.h **** 
1250:Drivers/CMSIS/Include/core_cm4.h **** /* MPU Region Number Register Definitions */
1251:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
1252:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
1253:Drivers/CMSIS/Include/core_cm4.h **** 
1254:Drivers/CMSIS/Include/core_cm4.h **** /* MPU Region Base Address Register Definitions */
1255:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_ADDR_Pos                   5U                                            /*!< MPU 
1256:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1257:Drivers/CMSIS/Include/core_cm4.h **** 
1258:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
1259:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1260:Drivers/CMSIS/Include/core_cm4.h **** 
1261:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
1262:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
1263:Drivers/CMSIS/Include/core_cm4.h **** 
1264:Drivers/CMSIS/Include/core_cm4.h **** /* MPU Region Attribute and Size Register Definitions */
1265:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
1266:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1267:Drivers/CMSIS/Include/core_cm4.h **** 
1268:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
1269:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1270:Drivers/CMSIS/Include/core_cm4.h **** 
1271:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
1272:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1273:Drivers/CMSIS/Include/core_cm4.h **** 
1274:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
1275:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1276:Drivers/CMSIS/Include/core_cm4.h **** 
1277:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
1278:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1279:Drivers/CMSIS/Include/core_cm4.h **** 
1280:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
1281:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1282:Drivers/CMSIS/Include/core_cm4.h **** 
1283:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
1284:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1285:Drivers/CMSIS/Include/core_cm4.h **** 
1286:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
1287:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1288:Drivers/CMSIS/Include/core_cm4.h **** 
1289:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
1290:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1291:Drivers/CMSIS/Include/core_cm4.h **** 
1292:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
1293:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 53


1294:Drivers/CMSIS/Include/core_cm4.h **** 
1295:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_MPU */
1296:Drivers/CMSIS/Include/core_cm4.h **** #endif /* defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U) */
1297:Drivers/CMSIS/Include/core_cm4.h **** 
1298:Drivers/CMSIS/Include/core_cm4.h **** 
1299:Drivers/CMSIS/Include/core_cm4.h **** /**
1300:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1301:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_FPU     Floating Point Unit (FPU)
1302:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Floating Point Unit (FPU)
1303:Drivers/CMSIS/Include/core_cm4.h ****   @{
1304:Drivers/CMSIS/Include/core_cm4.h ****  */
1305:Drivers/CMSIS/Include/core_cm4.h **** 
1306:Drivers/CMSIS/Include/core_cm4.h **** /**
1307:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Floating Point Unit (FPU).
1308:Drivers/CMSIS/Include/core_cm4.h ****  */
1309:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
1310:Drivers/CMSIS/Include/core_cm4.h **** {
1311:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[1U];
1312:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FPCCR;                  /*!< Offset: 0x004 (R/W)  Floating-Point Context Control R
1313:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FPCAR;                  /*!< Offset: 0x008 (R/W)  Floating-Point Context Address R
1314:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FPDSCR;                 /*!< Offset: 0x00C (R/W)  Floating-Point Default Status Co
1315:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t MVFR0;                  /*!< Offset: 0x010 (R/ )  Media and FP Feature Register 0 
1316:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t MVFR1;                  /*!< Offset: 0x014 (R/ )  Media and FP Feature Register 1 
1317:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t MVFR2;                  /*!< Offset: 0x018 (R/ )  Media and FP Feature Register 2 
1318:Drivers/CMSIS/Include/core_cm4.h **** } FPU_Type;
1319:Drivers/CMSIS/Include/core_cm4.h **** 
1320:Drivers/CMSIS/Include/core_cm4.h **** /* Floating-Point Context Control Register Definitions */
1321:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_ASPEN_Pos                31U                                            /*!< FPCC
1322:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_ASPEN_Msk                (1UL << FPU_FPCCR_ASPEN_Pos)                   /*!< FPCC
1323:Drivers/CMSIS/Include/core_cm4.h **** 
1324:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPEN_Pos                30U                                            /*!< FPCC
1325:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPEN_Msk                (1UL << FPU_FPCCR_LSPEN_Pos)                   /*!< FPCC
1326:Drivers/CMSIS/Include/core_cm4.h **** 
1327:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MONRDY_Pos                8U                                            /*!< FPCC
1328:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MONRDY_Msk               (1UL << FPU_FPCCR_MONRDY_Pos)                  /*!< FPCC
1329:Drivers/CMSIS/Include/core_cm4.h **** 
1330:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_BFRDY_Pos                 6U                                            /*!< FPCC
1331:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_BFRDY_Msk                (1UL << FPU_FPCCR_BFRDY_Pos)                   /*!< FPCC
1332:Drivers/CMSIS/Include/core_cm4.h **** 
1333:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MMRDY_Pos                 5U                                            /*!< FPCC
1334:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MMRDY_Msk                (1UL << FPU_FPCCR_MMRDY_Pos)                   /*!< FPCC
1335:Drivers/CMSIS/Include/core_cm4.h **** 
1336:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_HFRDY_Pos                 4U                                            /*!< FPCC
1337:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_HFRDY_Msk                (1UL << FPU_FPCCR_HFRDY_Pos)                   /*!< FPCC
1338:Drivers/CMSIS/Include/core_cm4.h **** 
1339:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_THREAD_Pos                3U                                            /*!< FPCC
1340:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_THREAD_Msk               (1UL << FPU_FPCCR_THREAD_Pos)                  /*!< FPCC
1341:Drivers/CMSIS/Include/core_cm4.h **** 
1342:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_USER_Pos                  1U                                            /*!< FPCC
1343:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_USER_Msk                 (1UL << FPU_FPCCR_USER_Pos)                    /*!< FPCC
1344:Drivers/CMSIS/Include/core_cm4.h **** 
1345:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPACT_Pos                0U                                            /*!< FPCC
1346:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPACT_Msk               (1UL /*<< FPU_FPCCR_LSPACT_Pos*/)              /*!< FPCC
1347:Drivers/CMSIS/Include/core_cm4.h **** 
1348:Drivers/CMSIS/Include/core_cm4.h **** /* Floating-Point Context Address Register Definitions */
1349:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Pos               3U                                            /*!< FPCA
1350:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Msk              (0x1FFFFFFFUL << FPU_FPCAR_ADDRESS_Pos)        /*!< FPCA
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 54


1351:Drivers/CMSIS/Include/core_cm4.h **** 
1352:Drivers/CMSIS/Include/core_cm4.h **** /* Floating-Point Default Status Control Register Definitions */
1353:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_AHP_Pos                 26U                                            /*!< FPDS
1354:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_AHP_Msk                 (1UL << FPU_FPDSCR_AHP_Pos)                    /*!< FPDS
1355:Drivers/CMSIS/Include/core_cm4.h **** 
1356:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_DN_Pos                  25U                                            /*!< FPDS
1357:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_DN_Msk                  (1UL << FPU_FPDSCR_DN_Pos)                     /*!< FPDS
1358:Drivers/CMSIS/Include/core_cm4.h **** 
1359:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_FZ_Pos                  24U                                            /*!< FPDS
1360:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_FZ_Msk                  (1UL << FPU_FPDSCR_FZ_Pos)                     /*!< FPDS
1361:Drivers/CMSIS/Include/core_cm4.h **** 
1362:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_RMode_Pos               22U                                            /*!< FPDS
1363:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_RMode_Msk               (3UL << FPU_FPDSCR_RMode_Pos)                  /*!< FPDS
1364:Drivers/CMSIS/Include/core_cm4.h **** 
1365:Drivers/CMSIS/Include/core_cm4.h **** /* Media and FP Feature Register 0 Definitions */
1366:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Pos    28U                                            /*!< MVFR
1367:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Msk    (0xFUL << FPU_MVFR0_FP_rounding_modes_Pos)     /*!< MVFR
1368:Drivers/CMSIS/Include/core_cm4.h **** 
1369:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Pos        24U                                            /*!< MVFR
1370:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Msk        (0xFUL << FPU_MVFR0_Short_vectors_Pos)         /*!< MVFR
1371:Drivers/CMSIS/Include/core_cm4.h **** 
1372:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Square_root_Pos          20U                                            /*!< MVFR
1373:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Square_root_Msk          (0xFUL << FPU_MVFR0_Square_root_Pos)           /*!< MVFR
1374:Drivers/CMSIS/Include/core_cm4.h **** 
1375:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Divide_Pos               16U                                            /*!< MVFR
1376:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Divide_Msk               (0xFUL << FPU_MVFR0_Divide_Pos)                /*!< MVFR
1377:Drivers/CMSIS/Include/core_cm4.h **** 
1378:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Pos    12U                                            /*!< MVFR
1379:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Msk    (0xFUL << FPU_MVFR0_FP_excep_trapping_Pos)     /*!< MVFR
1380:Drivers/CMSIS/Include/core_cm4.h **** 
1381:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Double_precision_Pos      8U                                            /*!< MVFR
1382:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Double_precision_Msk     (0xFUL << FPU_MVFR0_Double_precision_Pos)      /*!< MVFR
1383:Drivers/CMSIS/Include/core_cm4.h **** 
1384:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Single_precision_Pos      4U                                            /*!< MVFR
1385:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Single_precision_Msk     (0xFUL << FPU_MVFR0_Single_precision_Pos)      /*!< MVFR
1386:Drivers/CMSIS/Include/core_cm4.h **** 
1387:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Pos      0U                                            /*!< MVFR
1388:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Msk     (0xFUL /*<< FPU_MVFR0_A_SIMD_registers_Pos*/)  /*!< MVFR
1389:Drivers/CMSIS/Include/core_cm4.h **** 
1390:Drivers/CMSIS/Include/core_cm4.h **** /* Media and FP Feature Register 1 Definitions */
1391:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Pos         28U                                            /*!< MVFR
1392:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Msk         (0xFUL << FPU_MVFR1_FP_fused_MAC_Pos)          /*!< MVFR
1393:Drivers/CMSIS/Include/core_cm4.h **** 
1394:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Pos              24U                                            /*!< MVFR
1395:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Msk              (0xFUL << FPU_MVFR1_FP_HPFP_Pos)               /*!< MVFR
1396:Drivers/CMSIS/Include/core_cm4.h **** 
1397:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Pos            4U                                            /*!< MVFR
1398:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Msk           (0xFUL << FPU_MVFR1_D_NaN_mode_Pos)            /*!< MVFR
1399:Drivers/CMSIS/Include/core_cm4.h **** 
1400:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Pos              0U                                            /*!< MVFR
1401:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Msk             (0xFUL /*<< FPU_MVFR1_FtZ_mode_Pos*/)          /*!< MVFR
1402:Drivers/CMSIS/Include/core_cm4.h **** 
1403:Drivers/CMSIS/Include/core_cm4.h **** /* Media and FP Feature Register 2 Definitions */
1404:Drivers/CMSIS/Include/core_cm4.h **** 
1405:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR2_VFP_Misc_Pos              4U                                            /*!< MVFR
1406:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR2_VFP_Misc_Msk             (0xFUL << FPU_MVFR2_VFP_Misc_Pos)              /*!< MVFR
1407:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 55


1408:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_FPU */
1409:Drivers/CMSIS/Include/core_cm4.h **** 
1410:Drivers/CMSIS/Include/core_cm4.h **** 
1411:Drivers/CMSIS/Include/core_cm4.h **** /**
1412:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1413:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1414:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Core Debug Registers
1415:Drivers/CMSIS/Include/core_cm4.h ****   @{
1416:Drivers/CMSIS/Include/core_cm4.h ****  */
1417:Drivers/CMSIS/Include/core_cm4.h **** 
1418:Drivers/CMSIS/Include/core_cm4.h **** /**
1419:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Core Debug Register (CoreDebug).
1420:Drivers/CMSIS/Include/core_cm4.h ****  */
1421:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
1422:Drivers/CMSIS/Include/core_cm4.h **** {
1423:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t DHCSR;                  /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1424:Drivers/CMSIS/Include/core_cm4.h ****   __OM  uint32_t DCRSR;                  /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1425:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t DCRDR;                  /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1426:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t DEMCR;                  /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1427:Drivers/CMSIS/Include/core_cm4.h **** } CoreDebug_Type;
1428:Drivers/CMSIS/Include/core_cm4.h **** 
1429:Drivers/CMSIS/Include/core_cm4.h **** /* Debug Halting Control and Status Register Definitions */
1430:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16U                                            /*!< Core
1431:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1432:Drivers/CMSIS/Include/core_cm4.h **** 
1433:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25U                                            /*!< Core
1434:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1435:Drivers/CMSIS/Include/core_cm4.h **** 
1436:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24U                                            /*!< Core
1437:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1438:Drivers/CMSIS/Include/core_cm4.h **** 
1439:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19U                                            /*!< Core
1440:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1441:Drivers/CMSIS/Include/core_cm4.h **** 
1442:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18U                                            /*!< Core
1443:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1444:Drivers/CMSIS/Include/core_cm4.h **** 
1445:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17U                                            /*!< Core
1446:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1447:Drivers/CMSIS/Include/core_cm4.h **** 
1448:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16U                                            /*!< Core
1449:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1450:Drivers/CMSIS/Include/core_cm4.h **** 
1451:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5U                                            /*!< Core
1452:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1453:Drivers/CMSIS/Include/core_cm4.h **** 
1454:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3U                                            /*!< Core
1455:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1456:Drivers/CMSIS/Include/core_cm4.h **** 
1457:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2U                                            /*!< Core
1458:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1459:Drivers/CMSIS/Include/core_cm4.h **** 
1460:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1U                                            /*!< Core
1461:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1462:Drivers/CMSIS/Include/core_cm4.h **** 
1463:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0U                                            /*!< Core
1464:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 56


1465:Drivers/CMSIS/Include/core_cm4.h **** 
1466:Drivers/CMSIS/Include/core_cm4.h **** /* Debug Core Register Selector Register Definitions */
1467:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16U                                            /*!< Core
1468:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1469:Drivers/CMSIS/Include/core_cm4.h **** 
1470:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0U                                            /*!< Core
1471:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1472:Drivers/CMSIS/Include/core_cm4.h **** 
1473:Drivers/CMSIS/Include/core_cm4.h **** /* Debug Exception and Monitor Control Register Definitions */
1474:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24U                                            /*!< Core
1475:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1476:Drivers/CMSIS/Include/core_cm4.h **** 
1477:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19U                                            /*!< Core
1478:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1479:Drivers/CMSIS/Include/core_cm4.h **** 
1480:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18U                                            /*!< Core
1481:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1482:Drivers/CMSIS/Include/core_cm4.h **** 
1483:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17U                                            /*!< Core
1484:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1485:Drivers/CMSIS/Include/core_cm4.h **** 
1486:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16U                                            /*!< Core
1487:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1488:Drivers/CMSIS/Include/core_cm4.h **** 
1489:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10U                                            /*!< Core
1490:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1491:Drivers/CMSIS/Include/core_cm4.h **** 
1492:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9U                                            /*!< Core
1493:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1494:Drivers/CMSIS/Include/core_cm4.h **** 
1495:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8U                                            /*!< Core
1496:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1497:Drivers/CMSIS/Include/core_cm4.h **** 
1498:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7U                                            /*!< Core
1499:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1500:Drivers/CMSIS/Include/core_cm4.h **** 
1501:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6U                                            /*!< Core
1502:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1503:Drivers/CMSIS/Include/core_cm4.h **** 
1504:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5U                                            /*!< Core
1505:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1506:Drivers/CMSIS/Include/core_cm4.h **** 
1507:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4U                                            /*!< Core
1508:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1509:Drivers/CMSIS/Include/core_cm4.h **** 
1510:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0U                                            /*!< Core
1511:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
1512:Drivers/CMSIS/Include/core_cm4.h **** 
1513:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_CoreDebug */
1514:Drivers/CMSIS/Include/core_cm4.h **** 
1515:Drivers/CMSIS/Include/core_cm4.h **** 
1516:Drivers/CMSIS/Include/core_cm4.h **** /**
1517:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
1518:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
1519:Drivers/CMSIS/Include/core_cm4.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
1520:Drivers/CMSIS/Include/core_cm4.h ****   @{
1521:Drivers/CMSIS/Include/core_cm4.h ****  */
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 57


1522:Drivers/CMSIS/Include/core_cm4.h **** 
1523:Drivers/CMSIS/Include/core_cm4.h **** /**
1524:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
1525:Drivers/CMSIS/Include/core_cm4.h ****   \param[in] field  Name of the register bit field.
1526:Drivers/CMSIS/Include/core_cm4.h ****   \param[in] value  Value of the bit field. This parameter is interpreted as an uint32_t type.
1527:Drivers/CMSIS/Include/core_cm4.h ****   \return           Masked and shifted value.
1528:Drivers/CMSIS/Include/core_cm4.h **** */
1529:Drivers/CMSIS/Include/core_cm4.h **** #define _VAL2FLD(field, value)    (((uint32_t)(value) << field ## _Pos) & field ## _Msk)
1530:Drivers/CMSIS/Include/core_cm4.h **** 
1531:Drivers/CMSIS/Include/core_cm4.h **** /**
1532:Drivers/CMSIS/Include/core_cm4.h ****   \brief     Mask and shift a register value to extract a bit filed value.
1533:Drivers/CMSIS/Include/core_cm4.h ****   \param[in] field  Name of the register bit field.
1534:Drivers/CMSIS/Include/core_cm4.h ****   \param[in] value  Value of register. This parameter is interpreted as an uint32_t type.
1535:Drivers/CMSIS/Include/core_cm4.h ****   \return           Masked and shifted bit field value.
1536:Drivers/CMSIS/Include/core_cm4.h **** */
1537:Drivers/CMSIS/Include/core_cm4.h **** #define _FLD2VAL(field, value)    (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)
1538:Drivers/CMSIS/Include/core_cm4.h **** 
1539:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_core_bitfield */
1540:Drivers/CMSIS/Include/core_cm4.h **** 
1541:Drivers/CMSIS/Include/core_cm4.h **** 
1542:Drivers/CMSIS/Include/core_cm4.h **** /**
1543:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
1544:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup   CMSIS_core_base     Core Definitions
1545:Drivers/CMSIS/Include/core_cm4.h ****   \brief      Definitions for base addresses, unions, and structures.
1546:Drivers/CMSIS/Include/core_cm4.h ****   @{
1547:Drivers/CMSIS/Include/core_cm4.h ****  */
1548:Drivers/CMSIS/Include/core_cm4.h **** 
1549:Drivers/CMSIS/Include/core_cm4.h **** /* Memory mapping of Core Hardware */
1550:Drivers/CMSIS/Include/core_cm4.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1551:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address */
1552:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address */
1553:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address */
1554:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1555:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
1556:Drivers/CMSIS/Include/core_cm4.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
1557:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1558:Drivers/CMSIS/Include/core_cm4.h **** 
1559:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1560:Drivers/CMSIS/Include/core_cm4.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1561:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1562:Drivers/CMSIS/Include/core_cm4.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1563:Drivers/CMSIS/Include/core_cm4.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1564:Drivers/CMSIS/Include/core_cm4.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1565:Drivers/CMSIS/Include/core_cm4.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1566:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1567:Drivers/CMSIS/Include/core_cm4.h **** 
1568:Drivers/CMSIS/Include/core_cm4.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1569:Drivers/CMSIS/Include/core_cm4.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit *
1570:Drivers/CMSIS/Include/core_cm4.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit *
1571:Drivers/CMSIS/Include/core_cm4.h **** #endif
1572:Drivers/CMSIS/Include/core_cm4.h **** 
1573:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_BASE            (SCS_BASE +  0x0F30UL)                    /*!< Floating Point Unit */
1574:Drivers/CMSIS/Include/core_cm4.h **** #define FPU                 ((FPU_Type       *)     FPU_BASE      )   /*!< Floating Point Unit */
1575:Drivers/CMSIS/Include/core_cm4.h **** 
1576:Drivers/CMSIS/Include/core_cm4.h **** /*@} */
1577:Drivers/CMSIS/Include/core_cm4.h **** 
1578:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 58


1579:Drivers/CMSIS/Include/core_cm4.h **** 
1580:Drivers/CMSIS/Include/core_cm4.h **** /*******************************************************************************
1581:Drivers/CMSIS/Include/core_cm4.h ****  *                Hardware Abstraction Layer
1582:Drivers/CMSIS/Include/core_cm4.h ****   Core Function Interface contains:
1583:Drivers/CMSIS/Include/core_cm4.h ****   - Core NVIC Functions
1584:Drivers/CMSIS/Include/core_cm4.h ****   - Core SysTick Functions
1585:Drivers/CMSIS/Include/core_cm4.h ****   - Core Debug Functions
1586:Drivers/CMSIS/Include/core_cm4.h ****   - Core Register Access Functions
1587:Drivers/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
1588:Drivers/CMSIS/Include/core_cm4.h **** /**
1589:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1590:Drivers/CMSIS/Include/core_cm4.h **** */
1591:Drivers/CMSIS/Include/core_cm4.h **** 
1592:Drivers/CMSIS/Include/core_cm4.h **** 
1593:Drivers/CMSIS/Include/core_cm4.h **** 
1594:Drivers/CMSIS/Include/core_cm4.h **** /* ##########################   NVIC functions  #################################### */
1595:Drivers/CMSIS/Include/core_cm4.h **** /**
1596:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_Core_FunctionInterface
1597:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1598:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
1599:Drivers/CMSIS/Include/core_cm4.h ****   @{
1600:Drivers/CMSIS/Include/core_cm4.h ****  */
1601:Drivers/CMSIS/Include/core_cm4.h **** 
1602:Drivers/CMSIS/Include/core_cm4.h **** #ifdef CMSIS_NVIC_VIRTUAL
1603:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef CMSIS_NVIC_VIRTUAL_HEADER_FILE
1604:Drivers/CMSIS/Include/core_cm4.h ****     #define CMSIS_NVIC_VIRTUAL_HEADER_FILE "cmsis_nvic_virtual.h"
1605:Drivers/CMSIS/Include/core_cm4.h ****   #endif
1606:Drivers/CMSIS/Include/core_cm4.h ****   #include CMSIS_NVIC_VIRTUAL_HEADER_FILE
1607:Drivers/CMSIS/Include/core_cm4.h **** #else
1608:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_SetPriorityGrouping    __NVIC_SetPriorityGrouping
1609:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_GetPriorityGrouping    __NVIC_GetPriorityGrouping
1610:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_EnableIRQ              __NVIC_EnableIRQ
1611:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_GetEnableIRQ           __NVIC_GetEnableIRQ
1612:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_DisableIRQ             __NVIC_DisableIRQ
1613:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_GetPendingIRQ          __NVIC_GetPendingIRQ
1614:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_SetPendingIRQ          __NVIC_SetPendingIRQ
1615:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_ClearPendingIRQ        __NVIC_ClearPendingIRQ
1616:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_GetActive              __NVIC_GetActive
1617:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_SetPriority            __NVIC_SetPriority
1618:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_GetPriority            __NVIC_GetPriority
1619:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_SystemReset            __NVIC_SystemReset
1620:Drivers/CMSIS/Include/core_cm4.h **** #endif /* CMSIS_NVIC_VIRTUAL */
1621:Drivers/CMSIS/Include/core_cm4.h **** 
1622:Drivers/CMSIS/Include/core_cm4.h **** #ifdef CMSIS_VECTAB_VIRTUAL
1623:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1624:Drivers/CMSIS/Include/core_cm4.h ****     #define CMSIS_VECTAB_VIRTUAL_HEADER_FILE "cmsis_vectab_virtual.h"
1625:Drivers/CMSIS/Include/core_cm4.h ****   #endif
1626:Drivers/CMSIS/Include/core_cm4.h ****   #include CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1627:Drivers/CMSIS/Include/core_cm4.h **** #else
1628:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_SetVector              __NVIC_SetVector
1629:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_GetVector              __NVIC_GetVector
1630:Drivers/CMSIS/Include/core_cm4.h **** #endif  /* (CMSIS_VECTAB_VIRTUAL) */
1631:Drivers/CMSIS/Include/core_cm4.h **** 
1632:Drivers/CMSIS/Include/core_cm4.h **** #define NVIC_USER_IRQ_OFFSET          16
1633:Drivers/CMSIS/Include/core_cm4.h **** 
1634:Drivers/CMSIS/Include/core_cm4.h **** 
1635:Drivers/CMSIS/Include/core_cm4.h **** /* The following EXC_RETURN values are saved the LR on exception entry */
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 59


1636:Drivers/CMSIS/Include/core_cm4.h **** #define EXC_RETURN_HANDLER         (0xFFFFFFF1UL)     /* return to Handler mode, uses MSP after ret
1637:Drivers/CMSIS/Include/core_cm4.h **** #define EXC_RETURN_THREAD_MSP      (0xFFFFFFF9UL)     /* return to Thread mode, uses MSP after retu
1638:Drivers/CMSIS/Include/core_cm4.h **** #define EXC_RETURN_THREAD_PSP      (0xFFFFFFFDUL)     /* return to Thread mode, uses PSP after retu
1639:Drivers/CMSIS/Include/core_cm4.h **** #define EXC_RETURN_HANDLER_FPU     (0xFFFFFFE1UL)     /* return to Handler mode, uses MSP after ret
1640:Drivers/CMSIS/Include/core_cm4.h **** #define EXC_RETURN_THREAD_MSP_FPU  (0xFFFFFFE9UL)     /* return to Thread mode, uses MSP after retu
1641:Drivers/CMSIS/Include/core_cm4.h **** #define EXC_RETURN_THREAD_PSP_FPU  (0xFFFFFFEDUL)     /* return to Thread mode, uses PSP after retu
1642:Drivers/CMSIS/Include/core_cm4.h **** 
1643:Drivers/CMSIS/Include/core_cm4.h **** 
1644:Drivers/CMSIS/Include/core_cm4.h **** /**
1645:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Set Priority Grouping
1646:Drivers/CMSIS/Include/core_cm4.h ****   \details Sets the priority grouping field using the required unlock sequence.
1647:Drivers/CMSIS/Include/core_cm4.h ****            The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1648:Drivers/CMSIS/Include/core_cm4.h ****            Only values from 0..7 are used.
1649:Drivers/CMSIS/Include/core_cm4.h ****            In case of a conflict between priority grouping and available
1650:Drivers/CMSIS/Include/core_cm4.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1651:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      PriorityGroup  Priority grouping field.
1652:Drivers/CMSIS/Include/core_cm4.h ****  */
1653:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1654:Drivers/CMSIS/Include/core_cm4.h **** {
1655:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t reg_value;
1656:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
1657:Drivers/CMSIS/Include/core_cm4.h **** 
1658:Drivers/CMSIS/Include/core_cm4.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1659:Drivers/CMSIS/Include/core_cm4.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
1660:Drivers/CMSIS/Include/core_cm4.h ****   reg_value  =  (reg_value                                   |
1661:Drivers/CMSIS/Include/core_cm4.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1662:Drivers/CMSIS/Include/core_cm4.h ****                 (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key a
1663:Drivers/CMSIS/Include/core_cm4.h ****   SCB->AIRCR =  reg_value;
1664:Drivers/CMSIS/Include/core_cm4.h **** }
1665:Drivers/CMSIS/Include/core_cm4.h **** 
1666:Drivers/CMSIS/Include/core_cm4.h **** 
1667:Drivers/CMSIS/Include/core_cm4.h **** /**
1668:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Get Priority Grouping
1669:Drivers/CMSIS/Include/core_cm4.h ****   \details Reads the priority grouping field from the NVIC Interrupt Controller.
1670:Drivers/CMSIS/Include/core_cm4.h ****   \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1671:Drivers/CMSIS/Include/core_cm4.h ****  */
1672:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
1673:Drivers/CMSIS/Include/core_cm4.h **** {
1674:Drivers/CMSIS/Include/core_cm4.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
1675:Drivers/CMSIS/Include/core_cm4.h **** }
1676:Drivers/CMSIS/Include/core_cm4.h **** 
1677:Drivers/CMSIS/Include/core_cm4.h **** 
1678:Drivers/CMSIS/Include/core_cm4.h **** /**
1679:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Enable Interrupt
1680:Drivers/CMSIS/Include/core_cm4.h ****   \details Enables a device specific interrupt in the NVIC interrupt controller.
1681:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1682:Drivers/CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1683:Drivers/CMSIS/Include/core_cm4.h ****  */
1684:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
1685:Drivers/CMSIS/Include/core_cm4.h **** {
1686:Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1687:Drivers/CMSIS/Include/core_cm4.h ****   {
1688:Drivers/CMSIS/Include/core_cm4.h ****     __COMPILER_BARRIER();
1689:Drivers/CMSIS/Include/core_cm4.h ****     NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1690:Drivers/CMSIS/Include/core_cm4.h ****     __COMPILER_BARRIER();
1691:Drivers/CMSIS/Include/core_cm4.h ****   }
1692:Drivers/CMSIS/Include/core_cm4.h **** }
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 60


1693:Drivers/CMSIS/Include/core_cm4.h **** 
1694:Drivers/CMSIS/Include/core_cm4.h **** 
1695:Drivers/CMSIS/Include/core_cm4.h **** /**
1696:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Get Interrupt Enable status
1697:Drivers/CMSIS/Include/core_cm4.h ****   \details Returns a device specific interrupt enable status from the NVIC interrupt controller.
1698:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1699:Drivers/CMSIS/Include/core_cm4.h ****   \return             0  Interrupt is not enabled.
1700:Drivers/CMSIS/Include/core_cm4.h ****   \return             1  Interrupt is enabled.
1701:Drivers/CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1702:Drivers/CMSIS/Include/core_cm4.h ****  */
1703:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetEnableIRQ(IRQn_Type IRQn)
1704:Drivers/CMSIS/Include/core_cm4.h **** {
1705:Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1706:Drivers/CMSIS/Include/core_cm4.h ****   {
1707:Drivers/CMSIS/Include/core_cm4.h ****     return((uint32_t)(((NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1708:Drivers/CMSIS/Include/core_cm4.h ****   }
1709:Drivers/CMSIS/Include/core_cm4.h ****   else
1710:Drivers/CMSIS/Include/core_cm4.h ****   {
1711:Drivers/CMSIS/Include/core_cm4.h ****     return(0U);
1712:Drivers/CMSIS/Include/core_cm4.h ****   }
1713:Drivers/CMSIS/Include/core_cm4.h **** }
1714:Drivers/CMSIS/Include/core_cm4.h **** 
1715:Drivers/CMSIS/Include/core_cm4.h **** 
1716:Drivers/CMSIS/Include/core_cm4.h **** /**
1717:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Disable Interrupt
1718:Drivers/CMSIS/Include/core_cm4.h ****   \details Disables a device specific interrupt in the NVIC interrupt controller.
1719:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1720:Drivers/CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1721:Drivers/CMSIS/Include/core_cm4.h ****  */
1722:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
1723:Drivers/CMSIS/Include/core_cm4.h **** {
1724:Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1725:Drivers/CMSIS/Include/core_cm4.h ****   {
1726:Drivers/CMSIS/Include/core_cm4.h ****     NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1727:Drivers/CMSIS/Include/core_cm4.h ****     __DSB();
1728:Drivers/CMSIS/Include/core_cm4.h ****     __ISB();
1729:Drivers/CMSIS/Include/core_cm4.h ****   }
1730:Drivers/CMSIS/Include/core_cm4.h **** }
1731:Drivers/CMSIS/Include/core_cm4.h **** 
1732:Drivers/CMSIS/Include/core_cm4.h **** 
1733:Drivers/CMSIS/Include/core_cm4.h **** /**
1734:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Get Pending Interrupt
1735:Drivers/CMSIS/Include/core_cm4.h ****   \details Reads the NVIC pending register and returns the pending bit for the specified device spe
1736:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1737:Drivers/CMSIS/Include/core_cm4.h ****   \return             0  Interrupt status is not pending.
1738:Drivers/CMSIS/Include/core_cm4.h ****   \return             1  Interrupt status is pending.
1739:Drivers/CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1740:Drivers/CMSIS/Include/core_cm4.h ****  */
1741:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetPendingIRQ(IRQn_Type IRQn)
1742:Drivers/CMSIS/Include/core_cm4.h **** {
1743:Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1744:Drivers/CMSIS/Include/core_cm4.h ****   {
1745:Drivers/CMSIS/Include/core_cm4.h ****     return((uint32_t)(((NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1746:Drivers/CMSIS/Include/core_cm4.h ****   }
1747:Drivers/CMSIS/Include/core_cm4.h ****   else
1748:Drivers/CMSIS/Include/core_cm4.h ****   {
1749:Drivers/CMSIS/Include/core_cm4.h ****     return(0U);
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 61


1750:Drivers/CMSIS/Include/core_cm4.h ****   }
1751:Drivers/CMSIS/Include/core_cm4.h **** }
1752:Drivers/CMSIS/Include/core_cm4.h **** 
1753:Drivers/CMSIS/Include/core_cm4.h **** 
1754:Drivers/CMSIS/Include/core_cm4.h **** /**
1755:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Set Pending Interrupt
1756:Drivers/CMSIS/Include/core_cm4.h ****   \details Sets the pending bit of a device specific interrupt in the NVIC pending register.
1757:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1758:Drivers/CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1759:Drivers/CMSIS/Include/core_cm4.h ****  */
1760:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_SetPendingIRQ(IRQn_Type IRQn)
1761:Drivers/CMSIS/Include/core_cm4.h **** {
1762:Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1763:Drivers/CMSIS/Include/core_cm4.h ****   {
1764:Drivers/CMSIS/Include/core_cm4.h ****     NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1765:Drivers/CMSIS/Include/core_cm4.h ****   }
1766:Drivers/CMSIS/Include/core_cm4.h **** }
1767:Drivers/CMSIS/Include/core_cm4.h **** 
1768:Drivers/CMSIS/Include/core_cm4.h **** 
1769:Drivers/CMSIS/Include/core_cm4.h **** /**
1770:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Clear Pending Interrupt
1771:Drivers/CMSIS/Include/core_cm4.h ****   \details Clears the pending bit of a device specific interrupt in the NVIC pending register.
1772:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1773:Drivers/CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1774:Drivers/CMSIS/Include/core_cm4.h ****  */
1775:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1776:Drivers/CMSIS/Include/core_cm4.h **** {
1777:Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1778:Drivers/CMSIS/Include/core_cm4.h ****   {
1779:Drivers/CMSIS/Include/core_cm4.h ****     NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1780:Drivers/CMSIS/Include/core_cm4.h ****   }
1781:Drivers/CMSIS/Include/core_cm4.h **** }
1782:Drivers/CMSIS/Include/core_cm4.h **** 
1783:Drivers/CMSIS/Include/core_cm4.h **** 
1784:Drivers/CMSIS/Include/core_cm4.h **** /**
1785:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Get Active Interrupt
1786:Drivers/CMSIS/Include/core_cm4.h ****   \details Reads the active register in the NVIC and returns the active bit for the device specific
1787:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1788:Drivers/CMSIS/Include/core_cm4.h ****   \return             0  Interrupt status is not active.
1789:Drivers/CMSIS/Include/core_cm4.h ****   \return             1  Interrupt status is active.
1790:Drivers/CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1791:Drivers/CMSIS/Include/core_cm4.h ****  */
1792:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetActive(IRQn_Type IRQn)
1793:Drivers/CMSIS/Include/core_cm4.h **** {
1794:Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1795:Drivers/CMSIS/Include/core_cm4.h ****   {
1796:Drivers/CMSIS/Include/core_cm4.h ****     return((uint32_t)(((NVIC->IABR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1797:Drivers/CMSIS/Include/core_cm4.h ****   }
1798:Drivers/CMSIS/Include/core_cm4.h ****   else
1799:Drivers/CMSIS/Include/core_cm4.h ****   {
1800:Drivers/CMSIS/Include/core_cm4.h ****     return(0U);
1801:Drivers/CMSIS/Include/core_cm4.h ****   }
1802:Drivers/CMSIS/Include/core_cm4.h **** }
1803:Drivers/CMSIS/Include/core_cm4.h **** 
1804:Drivers/CMSIS/Include/core_cm4.h **** 
1805:Drivers/CMSIS/Include/core_cm4.h **** /**
1806:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Set Interrupt Priority
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 62


1807:Drivers/CMSIS/Include/core_cm4.h ****   \details Sets the priority of a device specific interrupt or a processor exception.
1808:Drivers/CMSIS/Include/core_cm4.h ****            The interrupt number can be positive to specify a device specific interrupt,
1809:Drivers/CMSIS/Include/core_cm4.h ****            or negative to specify a processor exception.
1810:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Interrupt number.
1811:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]  priority  Priority to set.
1812:Drivers/CMSIS/Include/core_cm4.h ****   \note    The priority cannot be set for every processor exception.
1813:Drivers/CMSIS/Include/core_cm4.h ****  */
1814:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
1815:Drivers/CMSIS/Include/core_cm4.h **** {
1816:Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1817:Drivers/CMSIS/Include/core_cm4.h ****   {
1818:Drivers/CMSIS/Include/core_cm4.h ****     NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (u
1819:Drivers/CMSIS/Include/core_cm4.h ****   }
1820:Drivers/CMSIS/Include/core_cm4.h ****   else
1821:Drivers/CMSIS/Include/core_cm4.h ****   {
1822:Drivers/CMSIS/Include/core_cm4.h ****     SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (u
1823:Drivers/CMSIS/Include/core_cm4.h ****   }
1824:Drivers/CMSIS/Include/core_cm4.h **** }
1825:Drivers/CMSIS/Include/core_cm4.h **** 
1826:Drivers/CMSIS/Include/core_cm4.h **** 
1827:Drivers/CMSIS/Include/core_cm4.h **** /**
1828:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Get Interrupt Priority
1829:Drivers/CMSIS/Include/core_cm4.h ****   \details Reads the priority of a device specific interrupt or a processor exception.
1830:Drivers/CMSIS/Include/core_cm4.h ****            The interrupt number can be positive to specify a device specific interrupt,
1831:Drivers/CMSIS/Include/core_cm4.h ****            or negative to specify a processor exception.
1832:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]   IRQn  Interrupt number.
1833:Drivers/CMSIS/Include/core_cm4.h ****   \return             Interrupt Priority.
1834:Drivers/CMSIS/Include/core_cm4.h ****                       Value is aligned automatically to the implemented priority bits of the microc
1835:Drivers/CMSIS/Include/core_cm4.h ****  */
1836:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetPriority(IRQn_Type IRQn)
1837:Drivers/CMSIS/Include/core_cm4.h **** {
1838:Drivers/CMSIS/Include/core_cm4.h **** 
1839:Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1840:Drivers/CMSIS/Include/core_cm4.h ****   {
1841:Drivers/CMSIS/Include/core_cm4.h ****     return(((uint32_t)NVIC->IP[((uint32_t)IRQn)]               >> (8U - __NVIC_PRIO_BITS)));
1842:Drivers/CMSIS/Include/core_cm4.h ****   }
1843:Drivers/CMSIS/Include/core_cm4.h ****   else
1844:Drivers/CMSIS/Include/core_cm4.h ****   {
1845:Drivers/CMSIS/Include/core_cm4.h ****     return(((uint32_t)SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] >> (8U - __NVIC_PRIO_BITS)));
1846:Drivers/CMSIS/Include/core_cm4.h ****   }
1847:Drivers/CMSIS/Include/core_cm4.h **** }
1848:Drivers/CMSIS/Include/core_cm4.h **** 
1849:Drivers/CMSIS/Include/core_cm4.h **** 
1850:Drivers/CMSIS/Include/core_cm4.h **** /**
1851:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Encode Priority
1852:Drivers/CMSIS/Include/core_cm4.h ****   \details Encodes the priority for an interrupt with the given priority group,
1853:Drivers/CMSIS/Include/core_cm4.h ****            preemptive priority value, and subpriority value.
1854:Drivers/CMSIS/Include/core_cm4.h ****            In case of a conflict between priority grouping and available
1855:Drivers/CMSIS/Include/core_cm4.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1856:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]     PriorityGroup  Used priority group.
1857:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
1858:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]       SubPriority  Subpriority value (starting from 0).
1859:Drivers/CMSIS/Include/core_cm4.h ****   \return                        Encoded priority. Value can be used in the function \ref NVIC_SetP
1860:Drivers/CMSIS/Include/core_cm4.h ****  */
1861:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uin
1862:Drivers/CMSIS/Include/core_cm4.h **** {
1863:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 63


1864:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t PreemptPriorityBits;
1865:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t SubPriorityBits;
1866:Drivers/CMSIS/Include/core_cm4.h **** 
1867:Drivers/CMSIS/Include/core_cm4.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
1868:Drivers/CMSIS/Include/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
1869:Drivers/CMSIS/Include/core_cm4.h **** 
1870:Drivers/CMSIS/Include/core_cm4.h ****   return (
1871:Drivers/CMSIS/Include/core_cm4.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
1872:Drivers/CMSIS/Include/core_cm4.h ****            ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
1873:Drivers/CMSIS/Include/core_cm4.h ****          );
1874:Drivers/CMSIS/Include/core_cm4.h **** }
1875:Drivers/CMSIS/Include/core_cm4.h **** 
1876:Drivers/CMSIS/Include/core_cm4.h **** 
1877:Drivers/CMSIS/Include/core_cm4.h **** /**
1878:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Decode Priority
1879:Drivers/CMSIS/Include/core_cm4.h ****   \details Decodes an interrupt priority value with a given priority group to
1880:Drivers/CMSIS/Include/core_cm4.h ****            preemptive priority value and subpriority value.
1881:Drivers/CMSIS/Include/core_cm4.h ****            In case of a conflict between priority grouping and available
1882:Drivers/CMSIS/Include/core_cm4.h ****            priority bits (__NVIC_PRIO_BITS) the smallest possible priority group is set.
1883:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]         Priority   Priority value, which can be retrieved with the function \ref NVIC
1884:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]     PriorityGroup  Used priority group.
1885:Drivers/CMSIS/Include/core_cm4.h ****   \param [out] pPreemptPriority  Preemptive priority value (starting from 0).
1886:Drivers/CMSIS/Include/core_cm4.h ****   \param [out]     pSubPriority  Subpriority value (starting from 0).
1887:Drivers/CMSIS/Include/core_cm4.h ****  */
1888:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void NVIC_DecodePriority (uint32_t Priority, uint32_t PriorityGroup, uint32_t* cons
1889:Drivers/CMSIS/Include/core_cm4.h **** {
1890:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
1891:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t PreemptPriorityBits;
1892:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t SubPriorityBits;
1893:Drivers/CMSIS/Include/core_cm4.h **** 
1894:Drivers/CMSIS/Include/core_cm4.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
1895:Drivers/CMSIS/Include/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
1896:Drivers/CMSIS/Include/core_cm4.h **** 
1897:Drivers/CMSIS/Include/core_cm4.h ****   *pPreemptPriority = (Priority >> SubPriorityBits) & (uint32_t)((1UL << (PreemptPriorityBits)) - 1
1898:Drivers/CMSIS/Include/core_cm4.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
1899:Drivers/CMSIS/Include/core_cm4.h **** }
1900:Drivers/CMSIS/Include/core_cm4.h **** 
1901:Drivers/CMSIS/Include/core_cm4.h **** 
1902:Drivers/CMSIS/Include/core_cm4.h **** /**
1903:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Set Interrupt Vector
1904:Drivers/CMSIS/Include/core_cm4.h ****   \details Sets an interrupt vector in SRAM based interrupt vector table.
1905:Drivers/CMSIS/Include/core_cm4.h ****            The interrupt number can be positive to specify a device specific interrupt,
1906:Drivers/CMSIS/Include/core_cm4.h ****            or negative to specify a processor exception.
1907:Drivers/CMSIS/Include/core_cm4.h ****            VTOR must been relocated to SRAM before.
1908:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]   IRQn      Interrupt number
1909:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]   vector    Address of interrupt handler function
1910:Drivers/CMSIS/Include/core_cm4.h ****  */
1911:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_SetVector(IRQn_Type IRQn, uint32_t vector)
1912:Drivers/CMSIS/Include/core_cm4.h **** {
1913:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t *vectors = (uint32_t *)SCB->VTOR;
1914:Drivers/CMSIS/Include/core_cm4.h ****   vectors[(int32_t)IRQn + NVIC_USER_IRQ_OFFSET] = vector;
1915:Drivers/CMSIS/Include/core_cm4.h ****   /* ARM Application Note 321 states that the M4 does not require the architectural barrier */
1916:Drivers/CMSIS/Include/core_cm4.h **** }
1917:Drivers/CMSIS/Include/core_cm4.h **** 
1918:Drivers/CMSIS/Include/core_cm4.h **** 
1919:Drivers/CMSIS/Include/core_cm4.h **** /**
1920:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Get Interrupt Vector
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 64


1921:Drivers/CMSIS/Include/core_cm4.h ****   \details Reads an interrupt vector from interrupt vector table.
1922:Drivers/CMSIS/Include/core_cm4.h ****            The interrupt number can be positive to specify a device specific interrupt,
1923:Drivers/CMSIS/Include/core_cm4.h ****            or negative to specify a processor exception.
1924:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]   IRQn      Interrupt number.
1925:Drivers/CMSIS/Include/core_cm4.h ****   \return                 Address of interrupt handler function
1926:Drivers/CMSIS/Include/core_cm4.h ****  */
1927:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetVector(IRQn_Type IRQn)
1928:Drivers/CMSIS/Include/core_cm4.h **** {
1929:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t *vectors = (uint32_t *)SCB->VTOR;
1930:Drivers/CMSIS/Include/core_cm4.h ****   return vectors[(int32_t)IRQn + NVIC_USER_IRQ_OFFSET];
1931:Drivers/CMSIS/Include/core_cm4.h **** }
1932:Drivers/CMSIS/Include/core_cm4.h **** 
1933:Drivers/CMSIS/Include/core_cm4.h **** 
1934:Drivers/CMSIS/Include/core_cm4.h **** /**
1935:Drivers/CMSIS/Include/core_cm4.h ****   \brief   System Reset
1936:Drivers/CMSIS/Include/core_cm4.h ****   \details Initiates a system reset request to reset the MCU.
1937:Drivers/CMSIS/Include/core_cm4.h ****  */
1938:Drivers/CMSIS/Include/core_cm4.h **** __NO_RETURN __STATIC_INLINE void __NVIC_SystemReset(void)
1939:Drivers/CMSIS/Include/core_cm4.h **** {
1940:Drivers/CMSIS/Include/core_cm4.h ****   __DSB();                                                          /* Ensure all outstanding memor
1941:Drivers/CMSIS/Include/core_cm4.h ****                                                                        buffered write are completed
1942:Drivers/CMSIS/Include/core_cm4.h ****   SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
1943:Drivers/CMSIS/Include/core_cm4.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
1944:Drivers/CMSIS/Include/core_cm4.h ****                             SCB_AIRCR_SYSRESETREQ_Msk    );         /* Keep priority group unchange
1945:Drivers/CMSIS/Include/core_cm4.h ****   __DSB();                                                          /* Ensure completion of memory 
1946:Drivers/CMSIS/Include/core_cm4.h **** 
1947:Drivers/CMSIS/Include/core_cm4.h ****   for(;;)                                                           /* wait until reset */
1948:Drivers/CMSIS/Include/core_cm4.h ****   {
1949:Drivers/CMSIS/Include/core_cm4.h ****     __NOP();
1950:Drivers/CMSIS/Include/core_cm4.h ****   }
1951:Drivers/CMSIS/Include/core_cm4.h **** }
1952:Drivers/CMSIS/Include/core_cm4.h **** 
1953:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of CMSIS_Core_NVICFunctions */
1954:Drivers/CMSIS/Include/core_cm4.h **** 
1955:Drivers/CMSIS/Include/core_cm4.h **** 
1956:Drivers/CMSIS/Include/core_cm4.h **** /* ##########################  MPU functions  #################################### */
1957:Drivers/CMSIS/Include/core_cm4.h **** 
1958:Drivers/CMSIS/Include/core_cm4.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1959:Drivers/CMSIS/Include/core_cm4.h **** 
1960:Drivers/CMSIS/Include/core_cm4.h **** #include "mpu_armv7.h"
1961:Drivers/CMSIS/Include/core_cm4.h **** 
1962:Drivers/CMSIS/Include/core_cm4.h **** #endif
1963:Drivers/CMSIS/Include/core_cm4.h **** 
1964:Drivers/CMSIS/Include/core_cm4.h **** 
1965:Drivers/CMSIS/Include/core_cm4.h **** /* ##########################  FPU functions  #################################### */
1966:Drivers/CMSIS/Include/core_cm4.h **** /**
1967:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_Core_FunctionInterface
1968:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_Core_FpuFunctions FPU Functions
1969:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Function that provides FPU type.
1970:Drivers/CMSIS/Include/core_cm4.h ****   @{
1971:Drivers/CMSIS/Include/core_cm4.h ****  */
1972:Drivers/CMSIS/Include/core_cm4.h **** 
1973:Drivers/CMSIS/Include/core_cm4.h **** /**
1974:Drivers/CMSIS/Include/core_cm4.h ****   \brief   get FPU type
1975:Drivers/CMSIS/Include/core_cm4.h ****   \details returns the FPU type
1976:Drivers/CMSIS/Include/core_cm4.h ****   \returns
1977:Drivers/CMSIS/Include/core_cm4.h ****    - \b  0: No FPU
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 65


1978:Drivers/CMSIS/Include/core_cm4.h ****    - \b  1: Single precision FPU
1979:Drivers/CMSIS/Include/core_cm4.h ****    - \b  2: Double + Single precision FPU
1980:Drivers/CMSIS/Include/core_cm4.h ****  */
1981:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t SCB_GetFPUType(void)
1982:Drivers/CMSIS/Include/core_cm4.h **** {
1983:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t mvfr0;
1984:Drivers/CMSIS/Include/core_cm4.h **** 
1985:Drivers/CMSIS/Include/core_cm4.h ****   mvfr0 = FPU->MVFR0;
1986:Drivers/CMSIS/Include/core_cm4.h ****   if      ((mvfr0 & (FPU_MVFR0_Single_precision_Msk | FPU_MVFR0_Double_precision_Msk)) == 0x020U)
1987:Drivers/CMSIS/Include/core_cm4.h ****   {
1988:Drivers/CMSIS/Include/core_cm4.h ****     return 1U;           /* Single precision FPU */
1989:Drivers/CMSIS/Include/core_cm4.h ****   }
1990:Drivers/CMSIS/Include/core_cm4.h ****   else
1991:Drivers/CMSIS/Include/core_cm4.h ****   {
1992:Drivers/CMSIS/Include/core_cm4.h ****     return 0U;           /* No FPU */
1993:Drivers/CMSIS/Include/core_cm4.h ****   }
1994:Drivers/CMSIS/Include/core_cm4.h **** }
1995:Drivers/CMSIS/Include/core_cm4.h **** 
1996:Drivers/CMSIS/Include/core_cm4.h **** 
1997:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of CMSIS_Core_FpuFunctions */
1998:Drivers/CMSIS/Include/core_cm4.h **** 
1999:Drivers/CMSIS/Include/core_cm4.h **** 
2000:Drivers/CMSIS/Include/core_cm4.h **** 
2001:Drivers/CMSIS/Include/core_cm4.h **** /* ##################################    SysTick function  ########################################
2002:Drivers/CMSIS/Include/core_cm4.h **** /**
2003:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_Core_FunctionInterface
2004:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_Core_SysTickFunctions SysTick Functions
2005:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Functions that configure the System.
2006:Drivers/CMSIS/Include/core_cm4.h ****   @{
2007:Drivers/CMSIS/Include/core_cm4.h ****  */
2008:Drivers/CMSIS/Include/core_cm4.h **** 
2009:Drivers/CMSIS/Include/core_cm4.h **** #if defined (__Vendor_SysTickConfig) && (__Vendor_SysTickConfig == 0U)
2010:Drivers/CMSIS/Include/core_cm4.h **** 
2011:Drivers/CMSIS/Include/core_cm4.h **** /**
2012:Drivers/CMSIS/Include/core_cm4.h ****   \brief   System Tick Configuration
2013:Drivers/CMSIS/Include/core_cm4.h ****   \details Initializes the System Timer and its interrupt, and starts the System Tick Timer.
2014:Drivers/CMSIS/Include/core_cm4.h ****            Counter is in free running mode to generate periodic interrupts.
2015:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]  ticks  Number of ticks between two interrupts.
2016:Drivers/CMSIS/Include/core_cm4.h ****   \return          0  Function succeeded.
2017:Drivers/CMSIS/Include/core_cm4.h ****   \return          1  Function failed.
2018:Drivers/CMSIS/Include/core_cm4.h ****   \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
2019:Drivers/CMSIS/Include/core_cm4.h ****            function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.
2020:Drivers/CMSIS/Include/core_cm4.h ****            must contain a vendor-specific implementation of this function.
2021:Drivers/CMSIS/Include/core_cm4.h ****  */
2022:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
2023:Drivers/CMSIS/Include/core_cm4.h **** {
2024:Drivers/CMSIS/Include/core_cm4.h ****   if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
2025:Drivers/CMSIS/Include/core_cm4.h ****   {
2026:Drivers/CMSIS/Include/core_cm4.h ****     return (1UL);                                                   /* Reload value impossible */
2027:Drivers/CMSIS/Include/core_cm4.h ****   }
2028:Drivers/CMSIS/Include/core_cm4.h **** 
2029:Drivers/CMSIS/Include/core_cm4.h ****   SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
2030:Drivers/CMSIS/Include/core_cm4.h ****   NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Int
2031:Drivers/CMSIS/Include/core_cm4.h ****   SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Val
2032:Drivers/CMSIS/Include/core_cm4.h ****   SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
2033:Drivers/CMSIS/Include/core_cm4.h ****                    SysTick_CTRL_TICKINT_Msk   |
2034:Drivers/CMSIS/Include/core_cm4.h ****                    SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTi
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 66


2035:Drivers/CMSIS/Include/core_cm4.h ****   return (0UL);                                                     /* Function successful */
2036:Drivers/CMSIS/Include/core_cm4.h **** }
2037:Drivers/CMSIS/Include/core_cm4.h **** 
2038:Drivers/CMSIS/Include/core_cm4.h **** #endif
2039:Drivers/CMSIS/Include/core_cm4.h **** 
2040:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of CMSIS_Core_SysTickFunctions */
2041:Drivers/CMSIS/Include/core_cm4.h **** 
2042:Drivers/CMSIS/Include/core_cm4.h **** 
2043:Drivers/CMSIS/Include/core_cm4.h **** 
2044:Drivers/CMSIS/Include/core_cm4.h **** /* ##################################### Debug In/Output function #################################
2045:Drivers/CMSIS/Include/core_cm4.h **** /**
2046:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_Core_FunctionInterface
2047:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_core_DebugFunctions ITM Functions
2048:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Functions that access the ITM debug interface.
2049:Drivers/CMSIS/Include/core_cm4.h ****   @{
2050:Drivers/CMSIS/Include/core_cm4.h ****  */
2051:Drivers/CMSIS/Include/core_cm4.h **** 
2052:Drivers/CMSIS/Include/core_cm4.h **** extern volatile int32_t ITM_RxBuffer;                              /*!< External variable to receiv
2053:Drivers/CMSIS/Include/core_cm4.h **** #define                 ITM_RXBUFFER_EMPTY  ((int32_t)0x5AA55AA5U) /*!< Value identifying \ref ITM_
2054:Drivers/CMSIS/Include/core_cm4.h **** 
2055:Drivers/CMSIS/Include/core_cm4.h **** 
2056:Drivers/CMSIS/Include/core_cm4.h **** /**
2057:Drivers/CMSIS/Include/core_cm4.h ****   \brief   ITM Send Character
2058:Drivers/CMSIS/Include/core_cm4.h ****   \details Transmits a character via the ITM channel 0, and
2059:Drivers/CMSIS/Include/core_cm4.h ****            \li Just returns when no debugger is connected that has booked the output.
2060:Drivers/CMSIS/Include/core_cm4.h ****            \li Is blocking when a debugger is connected, but the previous character sent has not be
2061:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]     ch  Character to transmit.
2062:Drivers/CMSIS/Include/core_cm4.h ****   \returns            Character to transmit.
2063:Drivers/CMSIS/Include/core_cm4.h ****  */
2064:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t ITM_SendChar (uint32_t ch)
2065:Drivers/CMSIS/Include/core_cm4.h **** {
2066:Drivers/CMSIS/Include/core_cm4.h ****   if (((ITM->TCR & ITM_TCR_ITMENA_Msk) != 0UL) &&      /* ITM enabled */
2067:Drivers/CMSIS/Include/core_cm4.h ****       ((ITM->TER & 1UL               ) != 0UL)   )     /* ITM Port #0 enabled */
2068:Drivers/CMSIS/Include/core_cm4.h ****   {
2069:Drivers/CMSIS/Include/core_cm4.h ****     while (ITM->PORT[0U].u32 == 0UL)
2070:Drivers/CMSIS/Include/core_cm4.h ****     {
2071:Drivers/CMSIS/Include/core_cm4.h ****       __NOP();
 780              		.loc 2 2071 7 is_stmt 1 view .LVU182
 781              		.syntax unified
 782              	@ 2071 "Drivers/CMSIS/Include/core_cm4.h" 1
 783 0008 00BF     		nop
 784              	@ 0 "" 2
 785              		.thumb
 786              		.syntax unified
 787              	.L45:
2069:Drivers/CMSIS/Include/core_cm4.h ****     {
 788              		.loc 2 2069 11 view .LVU183
2069:Drivers/CMSIS/Include/core_cm4.h ****     {
 789              		.loc 2 2069 25 is_stmt 0 view .LVU184
 790 000a 4FF06043 		mov	r3, #-536870912
 791 000e 1B68     		ldr	r3, [r3]
2069:Drivers/CMSIS/Include/core_cm4.h ****     {
 792              		.loc 2 2069 11 view .LVU185
 793 0010 002B     		cmp	r3, #0
 794 0012 F9D0     		beq	.L46
2072:Drivers/CMSIS/Include/core_cm4.h ****     }
2073:Drivers/CMSIS/Include/core_cm4.h ****     ITM->PORT[0U].u8 = (uint8_t)ch;
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 67


 795              		.loc 2 2073 5 is_stmt 1 view .LVU186
 796              		.loc 2 2073 22 is_stmt 0 view .LVU187
 797 0014 4FF06043 		mov	r3, #-536870912
 798 0018 1A70     		strb	r2, [r3]
 799              	.L44:
2074:Drivers/CMSIS/Include/core_cm4.h ****   }
2075:Drivers/CMSIS/Include/core_cm4.h ****   return (ch);
 800              		.loc 2 2075 3 is_stmt 1 view .LVU188
 801              	.LVL58:
 802              		.loc 2 2075 3 is_stmt 0 view .LVU189
 803              	.LBE14:
 804              	.LBE13:
  44:Core/Src/main.c ****     {
 805              		.loc 1 44 37 is_stmt 1 view .LVU190
  44:Core/Src/main.c ****     {
 806              		.loc 1 44 44 is_stmt 0 view .LVU191
 807 001a 0CF1010C 		add	ip, ip, #1
 808              	.LVL59:
 809              	.L43:
  44:Core/Src/main.c ****     {
 810              		.loc 1 44 22 is_stmt 1 discriminator 1 view .LVU192
  44:Core/Src/main.c ****     {
 811              		.loc 1 44 5 is_stmt 0 discriminator 1 view .LVU193
 812 001e 8445     		cmp	ip, r0
 813 0020 10DA     		bge	.L48
  46:Core/Src/main.c ****     }
 814              		.loc 1 46 9 is_stmt 1 discriminator 3 view .LVU194
 815              	.LVL60:
  46:Core/Src/main.c ****     }
 816              		.loc 1 46 22 is_stmt 0 discriminator 3 view .LVU195
 817 0022 11F8012B 		ldrb	r2, [r1], #1	@ zero_extendqisi2
 818              	.LVL61:
 819              	.LBB16:
 820              	.LBI13:
2064:Drivers/CMSIS/Include/core_cm4.h **** {
 821              		.loc 2 2064 26 is_stmt 1 discriminator 3 view .LVU196
 822              	.LBB15:
2066:Drivers/CMSIS/Include/core_cm4.h ****       ((ITM->TER & 1UL               ) != 0UL)   )     /* ITM Port #0 enabled */
 823              		.loc 2 2066 3 discriminator 3 view .LVU197
2066:Drivers/CMSIS/Include/core_cm4.h ****       ((ITM->TER & 1UL               ) != 0UL)   )     /* ITM Port #0 enabled */
 824              		.loc 2 2066 12 is_stmt 0 discriminator 3 view .LVU198
 825 0026 4FF06043 		mov	r3, #-536870912
 826 002a D3F8803E 		ldr	r3, [r3, #3712]
2066:Drivers/CMSIS/Include/core_cm4.h ****       ((ITM->TER & 1UL               ) != 0UL)   )     /* ITM Port #0 enabled */
 827              		.loc 2 2066 6 discriminator 3 view .LVU199
 828 002e 13F0010F 		tst	r3, #1
 829 0032 F2D0     		beq	.L44
2067:Drivers/CMSIS/Include/core_cm4.h ****   {
 830              		.loc 2 2067 12 view .LVU200
 831 0034 4FF06043 		mov	r3, #-536870912
 832 0038 D3F8003E 		ldr	r3, [r3, #3584]
2066:Drivers/CMSIS/Include/core_cm4.h ****       ((ITM->TER & 1UL               ) != 0UL)   )     /* ITM Port #0 enabled */
 833              		.loc 2 2066 48 view .LVU201
 834 003c 13F0010F 		tst	r3, #1
 835 0040 E3D1     		bne	.L45
 836 0042 EAE7     		b	.L44
 837              	.LVL62:
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 68


 838              	.L48:
2066:Drivers/CMSIS/Include/core_cm4.h ****       ((ITM->TER & 1UL               ) != 0UL)   )     /* ITM Port #0 enabled */
 839              		.loc 2 2066 48 view .LVU202
 840              	.LBE15:
 841              	.LBE16:
  48:Core/Src/main.c **** }
 842              		.loc 1 48 5 is_stmt 1 view .LVU203
  49:Core/Src/main.c **** /* USER CODE END PTD */
 843              		.loc 1 49 1 is_stmt 0 view .LVU204
 844 0044 7047     		bx	lr
 845              		.cfi_endproc
 846              	.LFE228:
 848              		.section	.text.POT_manager,"ax",%progbits
 849              		.align	1
 850              		.global	POT_manager
 851              		.syntax unified
 852              		.thumb
 853              		.thumb_func
 855              	POT_manager:
 856              	.LVL63:
 857              	.LFB236:
 589:Core/Src/main.c ****     uint16_t potentiometer_value = HAL_ADC_GetValue(&hadc1);
 858              		.loc 1 589 34 is_stmt 1 view -0
 859              		.cfi_startproc
 860              		@ args = 0, pretend = 0, frame = 0
 861              		@ frame_needed = 0, uses_anonymous_args = 0
 589:Core/Src/main.c ****     uint16_t potentiometer_value = HAL_ADC_GetValue(&hadc1);
 862              		.loc 1 589 34 is_stmt 0 view .LVU206
 863 0000 08B5     		push	{r3, lr}
 864              	.LCFI8:
 865              		.cfi_def_cfa_offset 8
 866              		.cfi_offset 3, -8
 867              		.cfi_offset 14, -4
 590:Core/Src/main.c ****     while(1) {
 868              		.loc 1 590 5 is_stmt 1 view .LVU207
 590:Core/Src/main.c ****     while(1) {
 869              		.loc 1 590 36 is_stmt 0 view .LVU208
 870 0002 0448     		ldr	r0, .L52
 871              	.LVL64:
 590:Core/Src/main.c ****     while(1) {
 872              		.loc 1 590 36 view .LVU209
 873 0004 FFF7FEFF 		bl	HAL_ADC_GetValue
 874              	.LVL65:
 875              	.L50:
 591:Core/Src/main.c ****     HAL_Delay(1000);
 876              		.loc 1 591 5 is_stmt 1 discriminator 1 view .LVU210
 592:Core/Src/main.c **** 
 877              		.loc 1 592 5 discriminator 1 view .LVU211
 878 0008 4FF47A70 		mov	r0, #1000
 879 000c FFF7FEFF 		bl	HAL_Delay
 880              	.LVL66:
 591:Core/Src/main.c ****     HAL_Delay(1000);
 881              		.loc 1 591 10 discriminator 1 view .LVU212
 882 0010 FAE7     		b	.L50
 883              	.L53:
 884 0012 00BF     		.align	2
 885              	.L52:
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 69


 886 0014 00000000 		.word	.LANCHOR5
 887              		.cfi_endproc
 888              	.LFE236:
 890              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 891              		.align	1
 892              		.global	HAL_TIM_PeriodElapsedCallback
 893              		.syntax unified
 894              		.thumb
 895              		.thumb_func
 897              	HAL_TIM_PeriodElapsedCallback:
 898              	.LVL67:
 899              	.LFB240:
 733:Core/Src/main.c ****   }
 734:Core/Src/main.c ****   /* USER CODE END 5 */
 735:Core/Src/main.c **** }
 736:Core/Src/main.c **** 
 737:Core/Src/main.c **** /**
 738:Core/Src/main.c ****   * @brief  Period elapsed callback in non blocking mode
 739:Core/Src/main.c ****   * @note   This function is called  when TIM11 interrupt took place, inside
 740:Core/Src/main.c ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 741:Core/Src/main.c ****   * a global variable "uwTick" used as application time base.
 742:Core/Src/main.c ****   * @param  htim : TIM handle
 743:Core/Src/main.c ****   * @retval None
 744:Core/Src/main.c ****   */
 745:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 746:Core/Src/main.c **** {
 900              		.loc 1 746 1 view -0
 901              		.cfi_startproc
 902              		@ args = 0, pretend = 0, frame = 0
 903              		@ frame_needed = 0, uses_anonymous_args = 0
 904              		.loc 1 746 1 is_stmt 0 view .LVU214
 905 0000 08B5     		push	{r3, lr}
 906              	.LCFI9:
 907              		.cfi_def_cfa_offset 8
 908              		.cfi_offset 3, -8
 909              		.cfi_offset 14, -4
 747:Core/Src/main.c ****   /* USER CODE BEGIN Callback 0 */
 748:Core/Src/main.c **** 
 749:Core/Src/main.c ****   /* USER CODE END Callback 0 */
 750:Core/Src/main.c ****   if (htim->Instance == TIM11)
 910              		.loc 1 750 3 is_stmt 1 view .LVU215
 911              		.loc 1 750 11 is_stmt 0 view .LVU216
 912 0002 0268     		ldr	r2, [r0]
 913              		.loc 1 750 6 view .LVU217
 914 0004 034B     		ldr	r3, .L58
 915 0006 9A42     		cmp	r2, r3
 916 0008 00D0     		beq	.L57
 917              	.LVL68:
 918              	.L54:
 751:Core/Src/main.c ****   {
 752:Core/Src/main.c ****     HAL_IncTick();
 753:Core/Src/main.c ****   }
 754:Core/Src/main.c ****   /* USER CODE BEGIN Callback 1 */
 755:Core/Src/main.c **** 
 756:Core/Src/main.c ****   /* USER CODE END Callback 1 */
 757:Core/Src/main.c **** }
 919              		.loc 1 757 1 view .LVU218
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 70


 920 000a 08BD     		pop	{r3, pc}
 921              	.LVL69:
 922              	.L57:
 752:Core/Src/main.c ****   }
 923              		.loc 1 752 5 is_stmt 1 view .LVU219
 924 000c FFF7FEFF 		bl	HAL_IncTick
 925              	.LVL70:
 926              		.loc 1 757 1 is_stmt 0 view .LVU220
 927 0010 FBE7     		b	.L54
 928              	.L59:
 929 0012 00BF     		.align	2
 930              	.L58:
 931 0014 00480140 		.word	1073825792
 932              		.cfi_endproc
 933              	.LFE240:
 935              		.section	.text.Error_Handler,"ax",%progbits
 936              		.align	1
 937              		.global	Error_Handler
 938              		.syntax unified
 939              		.thumb
 940              		.thumb_func
 942              	Error_Handler:
 943              	.LFB241:
 758:Core/Src/main.c **** 
 759:Core/Src/main.c **** /**
 760:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 761:Core/Src/main.c ****   * @retval None
 762:Core/Src/main.c ****   */
 763:Core/Src/main.c **** void Error_Handler(void)
 764:Core/Src/main.c **** {
 944              		.loc 1 764 1 is_stmt 1 view -0
 945              		.cfi_startproc
 946              		@ Volatile: function does not return.
 947              		@ args = 0, pretend = 0, frame = 0
 948              		@ frame_needed = 0, uses_anonymous_args = 0
 949              		@ link register save eliminated.
 765:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 766:Core/Src/main.c ****     /* User can add his own implementation to report the HAL error return state */
 767:Core/Src/main.c ****     __disable_irq();
 950              		.loc 1 767 5 view .LVU222
 951              	.LBB17:
 952              	.LBI17:
 953              		.file 3 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 71


  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 72


  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 73


 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 74


 186:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 75


 243:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 76


 300:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 77


 357:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 78


 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 424:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 431:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 435:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 442:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 444:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 446:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 447:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 450:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 464:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 79


 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 486:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 491:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 493:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 495:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 499:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 506:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 507:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 509:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 513:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 520:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 521:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 522:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 80


 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 537:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 540:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
 541:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 552:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 558:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SSAT(ARG1, ARG2) \
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 564:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 568:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 573:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 574:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
 575:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __USAT(ARG1, ARG2) \
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 583:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 81


 585:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 596:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 599:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 603:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
 604:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 608:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 610:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 611:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 615:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 616:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 621:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 622:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 625:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
 627:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 628:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 633:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 634:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 637:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 639:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 82


 642:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 644:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 647:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
 649:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 650:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 652:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
 653:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 655:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 665:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 669:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 684:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 690:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 693:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 696:Drivers/CMSIS/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 83


 699:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 700:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 704:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 708:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 712:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
 713:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > max)
 714:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 715:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 716:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < min)
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****       return min;
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 721:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   return val;
 723:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 724:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 726:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 727:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 734:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (sat <= 31U)
 735:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 736:Drivers/CMSIS/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
 737:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < 0)
 742:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****       return 0U;
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 746:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (uint32_t)val;
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 749:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 84


 756:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 757:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
 759:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 760:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 761:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 762:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
 763:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 781:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 795:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 799:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
 803:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
 804:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 809:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 85


 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 814:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 818:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 826:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
 827:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
 828:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 838:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 842:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 846:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 849:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 853:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 860:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 86


 870:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 871:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 878:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 889:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 892:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 904:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 907:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
 908:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 909:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 912:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 914:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 915:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 916:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
 919:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 920:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 926:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 87


 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "memo
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 930:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 931:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 932:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 945:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
 947:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 952:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 953:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 954              		.loc 3 960 27 view .LVU223
 955              	.LBB18:
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 956              		.loc 3 962 3 view .LVU224
 957              		.syntax unified
 958              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 959 0000 72B6     		cpsid i
 960              	@ 0 "" 2
 961              		.thumb
 962              		.syntax unified
 963              	.L61:
 964              	.LBE18:
 965              	.LBE17:
 768:Core/Src/main.c ****     while (1) {
 966              		.loc 1 768 5 discriminator 1 view .LVU225
 769:Core/Src/main.c ****     }
 967              		.loc 1 769 5 discriminator 1 view .LVU226
 768:Core/Src/main.c ****     while (1) {
 968              		.loc 1 768 11 discriminator 1 view .LVU227
 969 0002 FEE7     		b	.L61
 970              		.cfi_endproc
 971              	.LFE241:
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 88


 973              		.section	.text.MX_I2C1_Init,"ax",%progbits
 974              		.align	1
 975              		.syntax unified
 976              		.thumb
 977              		.thumb_func
 979              	MX_I2C1_Init:
 980              	.LFB232:
 383:Core/Src/main.c **** 
 981              		.loc 1 383 1 view -0
 982              		.cfi_startproc
 983              		@ args = 0, pretend = 0, frame = 0
 984              		@ frame_needed = 0, uses_anonymous_args = 0
 985 0000 08B5     		push	{r3, lr}
 986              	.LCFI10:
 987              		.cfi_def_cfa_offset 8
 988              		.cfi_offset 3, -8
 989              		.cfi_offset 14, -4
 392:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 990              		.loc 1 392 3 view .LVU229
 392:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 991              		.loc 1 392 18 is_stmt 0 view .LVU230
 992 0002 0A48     		ldr	r0, .L66
 993 0004 0A4B     		ldr	r3, .L66+4
 994 0006 0360     		str	r3, [r0]
 393:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 995              		.loc 1 393 3 is_stmt 1 view .LVU231
 393:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 996              		.loc 1 393 25 is_stmt 0 view .LVU232
 997 0008 0A4B     		ldr	r3, .L66+8
 998 000a 4360     		str	r3, [r0, #4]
 394:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 999              		.loc 1 394 3 is_stmt 1 view .LVU233
 394:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 1000              		.loc 1 394 24 is_stmt 0 view .LVU234
 1001 000c 0023     		movs	r3, #0
 1002 000e 8360     		str	r3, [r0, #8]
 395:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 1003              		.loc 1 395 3 is_stmt 1 view .LVU235
 395:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 1004              		.loc 1 395 26 is_stmt 0 view .LVU236
 1005 0010 C360     		str	r3, [r0, #12]
 396:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 1006              		.loc 1 396 3 is_stmt 1 view .LVU237
 396:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 1007              		.loc 1 396 29 is_stmt 0 view .LVU238
 1008 0012 4FF48042 		mov	r2, #16384
 1009 0016 0261     		str	r2, [r0, #16]
 397:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 1010              		.loc 1 397 3 is_stmt 1 view .LVU239
 397:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 1011              		.loc 1 397 30 is_stmt 0 view .LVU240
 1012 0018 4361     		str	r3, [r0, #20]
 398:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 1013              		.loc 1 398 3 is_stmt 1 view .LVU241
 398:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 1014              		.loc 1 398 26 is_stmt 0 view .LVU242
 1015 001a 8361     		str	r3, [r0, #24]
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 89


 399:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 1016              		.loc 1 399 3 is_stmt 1 view .LVU243
 399:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 1017              		.loc 1 399 30 is_stmt 0 view .LVU244
 1018 001c C361     		str	r3, [r0, #28]
 400:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 1019              		.loc 1 400 3 is_stmt 1 view .LVU245
 400:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 1020              		.loc 1 400 28 is_stmt 0 view .LVU246
 1021 001e 0362     		str	r3, [r0, #32]
 401:Core/Src/main.c ****   {
 1022              		.loc 1 401 3 is_stmt 1 view .LVU247
 401:Core/Src/main.c ****   {
 1023              		.loc 1 401 7 is_stmt 0 view .LVU248
 1024 0020 FFF7FEFF 		bl	HAL_I2C_Init
 1025              	.LVL71:
 401:Core/Src/main.c ****   {
 1026              		.loc 1 401 6 view .LVU249
 1027 0024 00B9     		cbnz	r0, .L65
 409:Core/Src/main.c **** 
 1028              		.loc 1 409 1 view .LVU250
 1029 0026 08BD     		pop	{r3, pc}
 1030              	.L65:
 403:Core/Src/main.c ****   }
 1031              		.loc 1 403 5 is_stmt 1 view .LVU251
 1032 0028 FFF7FEFF 		bl	Error_Handler
 1033              	.LVL72:
 1034              	.L67:
 1035              		.align	2
 1036              	.L66:
 1037 002c 00000000 		.word	.LANCHOR6
 1038 0030 00540040 		.word	1073763328
 1039 0034 A0860100 		.word	100000
 1040              		.cfi_endproc
 1041              	.LFE232:
 1043              		.section	.text.MX_ADC1_Init,"ax",%progbits
 1044              		.align	1
 1045              		.syntax unified
 1046              		.thumb
 1047              		.thumb_func
 1049              	MX_ADC1_Init:
 1050              	.LFB231:
 331:Core/Src/main.c **** 
 1051              		.loc 1 331 1 view -0
 1052              		.cfi_startproc
 1053              		@ args = 0, pretend = 0, frame = 16
 1054              		@ frame_needed = 0, uses_anonymous_args = 0
 1055 0000 00B5     		push	{lr}
 1056              	.LCFI11:
 1057              		.cfi_def_cfa_offset 4
 1058              		.cfi_offset 14, -4
 1059 0002 85B0     		sub	sp, sp, #20
 1060              	.LCFI12:
 1061              		.cfi_def_cfa_offset 24
 337:Core/Src/main.c **** 
 1062              		.loc 1 337 3 view .LVU253
 337:Core/Src/main.c **** 
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 90


 1063              		.loc 1 337 26 is_stmt 0 view .LVU254
 1064 0004 0023     		movs	r3, #0
 1065 0006 0093     		str	r3, [sp]
 1066 0008 0193     		str	r3, [sp, #4]
 1067 000a 0293     		str	r3, [sp, #8]
 1068 000c 0393     		str	r3, [sp, #12]
 345:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV2;
 1069              		.loc 1 345 3 is_stmt 1 view .LVU255
 345:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV2;
 1070              		.loc 1 345 18 is_stmt 0 view .LVU256
 1071 000e 1348     		ldr	r0, .L74
 1072 0010 134A     		ldr	r2, .L74+4
 1073 0012 0260     		str	r2, [r0]
 346:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 1074              		.loc 1 346 3 is_stmt 1 view .LVU257
 346:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 1075              		.loc 1 346 29 is_stmt 0 view .LVU258
 1076 0014 4360     		str	r3, [r0, #4]
 347:Core/Src/main.c ****   hadc1.Init.ScanConvMode = DISABLE;
 1077              		.loc 1 347 3 is_stmt 1 view .LVU259
 347:Core/Src/main.c ****   hadc1.Init.ScanConvMode = DISABLE;
 1078              		.loc 1 347 25 is_stmt 0 view .LVU260
 1079 0016 8360     		str	r3, [r0, #8]
 348:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = DISABLE;
 1080              		.loc 1 348 3 is_stmt 1 view .LVU261
 348:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = DISABLE;
 1081              		.loc 1 348 27 is_stmt 0 view .LVU262
 1082 0018 0361     		str	r3, [r0, #16]
 349:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 1083              		.loc 1 349 3 is_stmt 1 view .LVU263
 349:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 1084              		.loc 1 349 33 is_stmt 0 view .LVU264
 1085 001a 0376     		strb	r3, [r0, #24]
 350:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 1086              		.loc 1 350 3 is_stmt 1 view .LVU265
 350:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 1087              		.loc 1 350 36 is_stmt 0 view .LVU266
 1088 001c 80F82030 		strb	r3, [r0, #32]
 351:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 1089              		.loc 1 351 3 is_stmt 1 view .LVU267
 351:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 1090              		.loc 1 351 35 is_stmt 0 view .LVU268
 1091 0020 C362     		str	r3, [r0, #44]
 352:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 1092              		.loc 1 352 3 is_stmt 1 view .LVU269
 352:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 1093              		.loc 1 352 31 is_stmt 0 view .LVU270
 1094 0022 104A     		ldr	r2, .L74+8
 1095 0024 8262     		str	r2, [r0, #40]
 353:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 1096              		.loc 1 353 3 is_stmt 1 view .LVU271
 353:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 1097              		.loc 1 353 24 is_stmt 0 view .LVU272
 1098 0026 C360     		str	r3, [r0, #12]
 354:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = DISABLE;
 1099              		.loc 1 354 3 is_stmt 1 view .LVU273
 354:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = DISABLE;
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 91


 1100              		.loc 1 354 30 is_stmt 0 view .LVU274
 1101 0028 0122     		movs	r2, #1
 1102 002a C261     		str	r2, [r0, #28]
 355:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 1103              		.loc 1 355 3 is_stmt 1 view .LVU275
 355:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 1104              		.loc 1 355 36 is_stmt 0 view .LVU276
 1105 002c 80F83030 		strb	r3, [r0, #48]
 356:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 1106              		.loc 1 356 3 is_stmt 1 view .LVU277
 356:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 1107              		.loc 1 356 27 is_stmt 0 view .LVU278
 1108 0030 4261     		str	r2, [r0, #20]
 357:Core/Src/main.c ****   {
 1109              		.loc 1 357 3 is_stmt 1 view .LVU279
 357:Core/Src/main.c ****   {
 1110              		.loc 1 357 7 is_stmt 0 view .LVU280
 1111 0032 FFF7FEFF 		bl	HAL_ADC_Init
 1112              	.LVL73:
 357:Core/Src/main.c ****   {
 1113              		.loc 1 357 6 view .LVU281
 1114 0036 60B9     		cbnz	r0, .L72
 364:Core/Src/main.c ****   sConfig.Rank = 1;
 1115              		.loc 1 364 3 is_stmt 1 view .LVU282
 364:Core/Src/main.c ****   sConfig.Rank = 1;
 1116              		.loc 1 364 19 is_stmt 0 view .LVU283
 1117 0038 0023     		movs	r3, #0
 1118 003a 0093     		str	r3, [sp]
 365:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 1119              		.loc 1 365 3 is_stmt 1 view .LVU284
 365:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 1120              		.loc 1 365 16 is_stmt 0 view .LVU285
 1121 003c 0122     		movs	r2, #1
 1122 003e 0192     		str	r2, [sp, #4]
 366:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 1123              		.loc 1 366 3 is_stmt 1 view .LVU286
 366:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 1124              		.loc 1 366 24 is_stmt 0 view .LVU287
 1125 0040 0293     		str	r3, [sp, #8]
 367:Core/Src/main.c ****   {
 1126              		.loc 1 367 3 is_stmt 1 view .LVU288
 367:Core/Src/main.c ****   {
 1127              		.loc 1 367 7 is_stmt 0 view .LVU289
 1128 0042 6946     		mov	r1, sp
 1129 0044 0548     		ldr	r0, .L74
 1130 0046 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 1131              	.LVL74:
 367:Core/Src/main.c ****   {
 1132              		.loc 1 367 6 view .LVU290
 1133 004a 20B9     		cbnz	r0, .L73
 375:Core/Src/main.c **** 
 1134              		.loc 1 375 1 view .LVU291
 1135 004c 05B0     		add	sp, sp, #20
 1136              	.LCFI13:
 1137              		.cfi_remember_state
 1138              		.cfi_def_cfa_offset 4
 1139              		@ sp needed
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 92


 1140 004e 5DF804FB 		ldr	pc, [sp], #4
 1141              	.L72:
 1142              	.LCFI14:
 1143              		.cfi_restore_state
 359:Core/Src/main.c ****   }
 1144              		.loc 1 359 5 is_stmt 1 view .LVU292
 1145 0052 FFF7FEFF 		bl	Error_Handler
 1146              	.LVL75:
 1147              	.L73:
 369:Core/Src/main.c ****   }
 1148              		.loc 1 369 5 view .LVU293
 1149 0056 FFF7FEFF 		bl	Error_Handler
 1150              	.LVL76:
 1151              	.L75:
 1152 005a 00BF     		.align	2
 1153              	.L74:
 1154 005c 00000000 		.word	.LANCHOR5
 1155 0060 00200140 		.word	1073815552
 1156 0064 0100000F 		.word	251658241
 1157              		.cfi_endproc
 1158              	.LFE231:
 1160              		.section	.text.MX_TIM2_Init,"ax",%progbits
 1161              		.align	1
 1162              		.syntax unified
 1163              		.thumb
 1164              		.thumb_func
 1166              	MX_TIM2_Init:
 1167              	.LFB233:
 417:Core/Src/main.c **** 
 1168              		.loc 1 417 1 view -0
 1169              		.cfi_startproc
 1170              		@ args = 0, pretend = 0, frame = 56
 1171              		@ frame_needed = 0, uses_anonymous_args = 0
 1172 0000 00B5     		push	{lr}
 1173              	.LCFI15:
 1174              		.cfi_def_cfa_offset 4
 1175              		.cfi_offset 14, -4
 1176 0002 8FB0     		sub	sp, sp, #60
 1177              	.LCFI16:
 1178              		.cfi_def_cfa_offset 64
 423:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1179              		.loc 1 423 3 view .LVU295
 423:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1180              		.loc 1 423 26 is_stmt 0 view .LVU296
 1181 0004 0023     		movs	r3, #0
 1182 0006 0A93     		str	r3, [sp, #40]
 1183 0008 0B93     		str	r3, [sp, #44]
 1184 000a 0C93     		str	r3, [sp, #48]
 1185 000c 0D93     		str	r3, [sp, #52]
 424:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 1186              		.loc 1 424 3 is_stmt 1 view .LVU297
 424:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 1187              		.loc 1 424 27 is_stmt 0 view .LVU298
 1188 000e 0893     		str	r3, [sp, #32]
 1189 0010 0993     		str	r3, [sp, #36]
 425:Core/Src/main.c **** 
 1190              		.loc 1 425 3 is_stmt 1 view .LVU299
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 93


 425:Core/Src/main.c **** 
 1191              		.loc 1 425 22 is_stmt 0 view .LVU300
 1192 0012 0193     		str	r3, [sp, #4]
 1193 0014 0293     		str	r3, [sp, #8]
 1194 0016 0393     		str	r3, [sp, #12]
 1195 0018 0493     		str	r3, [sp, #16]
 1196 001a 0593     		str	r3, [sp, #20]
 1197 001c 0693     		str	r3, [sp, #24]
 1198 001e 0793     		str	r3, [sp, #28]
 430:Core/Src/main.c ****   htim2.Init.Prescaler = 0;
 1199              		.loc 1 430 3 is_stmt 1 view .LVU301
 430:Core/Src/main.c ****   htim2.Init.Prescaler = 0;
 1200              		.loc 1 430 18 is_stmt 0 view .LVU302
 1201 0020 1E48     		ldr	r0, .L88
 1202 0022 4FF08042 		mov	r2, #1073741824
 1203 0026 0260     		str	r2, [r0]
 431:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 1204              		.loc 1 431 3 is_stmt 1 view .LVU303
 431:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 1205              		.loc 1 431 24 is_stmt 0 view .LVU304
 1206 0028 4360     		str	r3, [r0, #4]
 432:Core/Src/main.c ****   htim2.Init.Period = 4294967295;
 1207              		.loc 1 432 3 is_stmt 1 view .LVU305
 432:Core/Src/main.c ****   htim2.Init.Period = 4294967295;
 1208              		.loc 1 432 26 is_stmt 0 view .LVU306
 1209 002a 8360     		str	r3, [r0, #8]
 433:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1210              		.loc 1 433 3 is_stmt 1 view .LVU307
 433:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1211              		.loc 1 433 21 is_stmt 0 view .LVU308
 1212 002c 4FF0FF32 		mov	r2, #-1
 1213 0030 C260     		str	r2, [r0, #12]
 434:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1214              		.loc 1 434 3 is_stmt 1 view .LVU309
 434:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1215              		.loc 1 434 28 is_stmt 0 view .LVU310
 1216 0032 0361     		str	r3, [r0, #16]
 435:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 1217              		.loc 1 435 3 is_stmt 1 view .LVU311
 435:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 1218              		.loc 1 435 32 is_stmt 0 view .LVU312
 1219 0034 8361     		str	r3, [r0, #24]
 436:Core/Src/main.c ****   {
 1220              		.loc 1 436 3 is_stmt 1 view .LVU313
 436:Core/Src/main.c ****   {
 1221              		.loc 1 436 7 is_stmt 0 view .LVU314
 1222 0036 FFF7FEFF 		bl	HAL_TIM_Base_Init
 1223              	.LVL77:
 436:Core/Src/main.c ****   {
 1224              		.loc 1 436 6 view .LVU315
 1225 003a 28BB     		cbnz	r0, .L83
 440:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 1226              		.loc 1 440 3 is_stmt 1 view .LVU316
 440:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 1227              		.loc 1 440 34 is_stmt 0 view .LVU317
 1228 003c 4FF48053 		mov	r3, #4096
 1229 0040 0A93     		str	r3, [sp, #40]
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 94


 441:Core/Src/main.c ****   {
 1230              		.loc 1 441 3 is_stmt 1 view .LVU318
 441:Core/Src/main.c ****   {
 1231              		.loc 1 441 7 is_stmt 0 view .LVU319
 1232 0042 0AA9     		add	r1, sp, #40
 1233 0044 1548     		ldr	r0, .L88
 1234 0046 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 1235              	.LVL78:
 441:Core/Src/main.c ****   {
 1236              		.loc 1 441 6 view .LVU320
 1237 004a F8B9     		cbnz	r0, .L84
 445:Core/Src/main.c ****   {
 1238              		.loc 1 445 3 is_stmt 1 view .LVU321
 445:Core/Src/main.c ****   {
 1239              		.loc 1 445 7 is_stmt 0 view .LVU322
 1240 004c 1348     		ldr	r0, .L88
 1241 004e FFF7FEFF 		bl	HAL_TIM_PWM_Init
 1242              	.LVL79:
 445:Core/Src/main.c ****   {
 1243              		.loc 1 445 6 view .LVU323
 1244 0052 E8B9     		cbnz	r0, .L85
 449:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1245              		.loc 1 449 3 is_stmt 1 view .LVU324
 449:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1246              		.loc 1 449 37 is_stmt 0 view .LVU325
 1247 0054 0023     		movs	r3, #0
 1248 0056 0893     		str	r3, [sp, #32]
 450:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 1249              		.loc 1 450 3 is_stmt 1 view .LVU326
 450:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 1250              		.loc 1 450 33 is_stmt 0 view .LVU327
 1251 0058 0993     		str	r3, [sp, #36]
 451:Core/Src/main.c ****   {
 1252              		.loc 1 451 3 is_stmt 1 view .LVU328
 451:Core/Src/main.c ****   {
 1253              		.loc 1 451 7 is_stmt 0 view .LVU329
 1254 005a 08A9     		add	r1, sp, #32
 1255 005c 0F48     		ldr	r0, .L88
 1256 005e FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 1257              	.LVL80:
 451:Core/Src/main.c ****   {
 1258              		.loc 1 451 6 view .LVU330
 1259 0062 B8B9     		cbnz	r0, .L86
 455:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 1260              		.loc 1 455 3 is_stmt 1 view .LVU331
 455:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 1261              		.loc 1 455 20 is_stmt 0 view .LVU332
 1262 0064 6023     		movs	r3, #96
 1263 0066 0193     		str	r3, [sp, #4]
 456:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 1264              		.loc 1 456 3 is_stmt 1 view .LVU333
 456:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 1265              		.loc 1 456 19 is_stmt 0 view .LVU334
 1266 0068 0023     		movs	r3, #0
 1267 006a 0293     		str	r3, [sp, #8]
 457:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 1268              		.loc 1 457 3 is_stmt 1 view .LVU335
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 95


 457:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 1269              		.loc 1 457 24 is_stmt 0 view .LVU336
 1270 006c 0393     		str	r3, [sp, #12]
 458:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 1271              		.loc 1 458 3 is_stmt 1 view .LVU337
 458:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 1272              		.loc 1 458 24 is_stmt 0 view .LVU338
 1273 006e 0593     		str	r3, [sp, #20]
 459:Core/Src/main.c ****   {
 1274              		.loc 1 459 3 is_stmt 1 view .LVU339
 459:Core/Src/main.c ****   {
 1275              		.loc 1 459 7 is_stmt 0 view .LVU340
 1276 0070 0822     		movs	r2, #8
 1277 0072 01A9     		add	r1, sp, #4
 1278 0074 0948     		ldr	r0, .L88
 1279 0076 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 1280              	.LVL81:
 459:Core/Src/main.c ****   {
 1281              		.loc 1 459 6 view .LVU341
 1282 007a 68B9     		cbnz	r0, .L87
 466:Core/Src/main.c **** 
 1283              		.loc 1 466 3 is_stmt 1 view .LVU342
 1284 007c 0748     		ldr	r0, .L88
 1285 007e FFF7FEFF 		bl	HAL_TIM_MspPostInit
 1286              	.LVL82:
 468:Core/Src/main.c **** 
 1287              		.loc 1 468 1 is_stmt 0 view .LVU343
 1288 0082 0FB0     		add	sp, sp, #60
 1289              	.LCFI17:
 1290              		.cfi_remember_state
 1291              		.cfi_def_cfa_offset 4
 1292              		@ sp needed
 1293 0084 5DF804FB 		ldr	pc, [sp], #4
 1294              	.L83:
 1295              	.LCFI18:
 1296              		.cfi_restore_state
 438:Core/Src/main.c ****   }
 1297              		.loc 1 438 5 is_stmt 1 view .LVU344
 1298 0088 FFF7FEFF 		bl	Error_Handler
 1299              	.LVL83:
 1300              	.L84:
 443:Core/Src/main.c ****   }
 1301              		.loc 1 443 5 view .LVU345
 1302 008c FFF7FEFF 		bl	Error_Handler
 1303              	.LVL84:
 1304              	.L85:
 447:Core/Src/main.c ****   }
 1305              		.loc 1 447 5 view .LVU346
 1306 0090 FFF7FEFF 		bl	Error_Handler
 1307              	.LVL85:
 1308              	.L86:
 453:Core/Src/main.c ****   }
 1309              		.loc 1 453 5 view .LVU347
 1310 0094 FFF7FEFF 		bl	Error_Handler
 1311              	.LVL86:
 1312              	.L87:
 461:Core/Src/main.c ****   }
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 96


 1313              		.loc 1 461 5 view .LVU348
 1314 0098 FFF7FEFF 		bl	Error_Handler
 1315              	.LVL87:
 1316              	.L89:
 1317              		.align	2
 1318              	.L88:
 1319 009c 00000000 		.word	.LANCHOR4
 1320              		.cfi_endproc
 1321              	.LFE233:
 1323              		.section	.text.SystemClock_Config,"ax",%progbits
 1324              		.align	1
 1325              		.global	SystemClock_Config
 1326              		.syntax unified
 1327              		.thumb
 1328              		.thumb_func
 1330              	SystemClock_Config:
 1331              	.LFB230:
 285:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1332              		.loc 1 285 1 view -0
 1333              		.cfi_startproc
 1334              		@ args = 0, pretend = 0, frame = 80
 1335              		@ frame_needed = 0, uses_anonymous_args = 0
 1336 0000 00B5     		push	{lr}
 1337              	.LCFI19:
 1338              		.cfi_def_cfa_offset 4
 1339              		.cfi_offset 14, -4
 1340 0002 95B0     		sub	sp, sp, #84
 1341              	.LCFI20:
 1342              		.cfi_def_cfa_offset 88
 286:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1343              		.loc 1 286 3 view .LVU350
 286:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1344              		.loc 1 286 22 is_stmt 0 view .LVU351
 1345 0004 3022     		movs	r2, #48
 1346 0006 0021     		movs	r1, #0
 1347 0008 08A8     		add	r0, sp, #32
 1348 000a FFF7FEFF 		bl	memset
 1349              	.LVL88:
 287:Core/Src/main.c **** 
 1350              		.loc 1 287 3 is_stmt 1 view .LVU352
 287:Core/Src/main.c **** 
 1351              		.loc 1 287 22 is_stmt 0 view .LVU353
 1352 000e 0023     		movs	r3, #0
 1353 0010 0393     		str	r3, [sp, #12]
 1354 0012 0493     		str	r3, [sp, #16]
 1355 0014 0593     		str	r3, [sp, #20]
 1356 0016 0693     		str	r3, [sp, #24]
 1357 0018 0793     		str	r3, [sp, #28]
 291:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 1358              		.loc 1 291 3 is_stmt 1 view .LVU354
 1359              	.LBB19:
 291:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 1360              		.loc 1 291 3 view .LVU355
 1361 001a 0193     		str	r3, [sp, #4]
 291:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 1362              		.loc 1 291 3 view .LVU356
 1363 001c 204A     		ldr	r2, .L96
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 97


 1364 001e 116C     		ldr	r1, [r2, #64]
 1365 0020 41F08051 		orr	r1, r1, #268435456
 1366 0024 1164     		str	r1, [r2, #64]
 291:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 1367              		.loc 1 291 3 view .LVU357
 1368 0026 126C     		ldr	r2, [r2, #64]
 1369 0028 02F08052 		and	r2, r2, #268435456
 1370 002c 0192     		str	r2, [sp, #4]
 291:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 1371              		.loc 1 291 3 view .LVU358
 1372 002e 019A     		ldr	r2, [sp, #4]
 1373              	.LBE19:
 291:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 1374              		.loc 1 291 3 view .LVU359
 292:Core/Src/main.c **** 
 1375              		.loc 1 292 3 view .LVU360
 1376              	.LBB20:
 292:Core/Src/main.c **** 
 1377              		.loc 1 292 3 view .LVU361
 1378 0030 0293     		str	r3, [sp, #8]
 292:Core/Src/main.c **** 
 1379              		.loc 1 292 3 view .LVU362
 1380 0032 1C4A     		ldr	r2, .L96+4
 1381 0034 1368     		ldr	r3, [r2]
 1382 0036 23F44043 		bic	r3, r3, #49152
 1383 003a 43F40043 		orr	r3, r3, #32768
 1384 003e 1360     		str	r3, [r2]
 292:Core/Src/main.c **** 
 1385              		.loc 1 292 3 view .LVU363
 1386 0040 1368     		ldr	r3, [r2]
 1387 0042 03F44043 		and	r3, r3, #49152
 1388 0046 0293     		str	r3, [sp, #8]
 292:Core/Src/main.c **** 
 1389              		.loc 1 292 3 view .LVU364
 1390 0048 029B     		ldr	r3, [sp, #8]
 1391              	.LBE20:
 292:Core/Src/main.c **** 
 1392              		.loc 1 292 3 view .LVU365
 297:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1393              		.loc 1 297 3 view .LVU366
 297:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1394              		.loc 1 297 36 is_stmt 0 view .LVU367
 1395 004a 0123     		movs	r3, #1
 1396 004c 0893     		str	r3, [sp, #32]
 298:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1397              		.loc 1 298 3 is_stmt 1 view .LVU368
 298:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1398              		.loc 1 298 30 is_stmt 0 view .LVU369
 1399 004e 4FF48033 		mov	r3, #65536
 1400 0052 0993     		str	r3, [sp, #36]
 299:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1401              		.loc 1 299 3 is_stmt 1 view .LVU370
 299:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1402              		.loc 1 299 34 is_stmt 0 view .LVU371
 1403 0054 0223     		movs	r3, #2
 1404 0056 0E93     		str	r3, [sp, #56]
 300:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 25;
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 98


 1405              		.loc 1 300 3 is_stmt 1 view .LVU372
 300:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 25;
 1406              		.loc 1 300 35 is_stmt 0 view .LVU373
 1407 0058 4FF48003 		mov	r3, #4194304
 1408 005c 0F93     		str	r3, [sp, #60]
 301:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 192;
 1409              		.loc 1 301 3 is_stmt 1 view .LVU374
 301:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 192;
 1410              		.loc 1 301 30 is_stmt 0 view .LVU375
 1411 005e 1923     		movs	r3, #25
 1412 0060 1093     		str	r3, [sp, #64]
 302:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 1413              		.loc 1 302 3 is_stmt 1 view .LVU376
 302:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 1414              		.loc 1 302 30 is_stmt 0 view .LVU377
 1415 0062 C023     		movs	r3, #192
 1416 0064 1193     		str	r3, [sp, #68]
 303:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 1417              		.loc 1 303 3 is_stmt 1 view .LVU378
 303:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 1418              		.loc 1 303 30 is_stmt 0 view .LVU379
 1419 0066 0423     		movs	r3, #4
 1420 0068 1293     		str	r3, [sp, #72]
 304:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1421              		.loc 1 304 3 is_stmt 1 view .LVU380
 304:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1422              		.loc 1 304 30 is_stmt 0 view .LVU381
 1423 006a 1393     		str	r3, [sp, #76]
 305:Core/Src/main.c ****   {
 1424              		.loc 1 305 3 is_stmt 1 view .LVU382
 305:Core/Src/main.c ****   {
 1425              		.loc 1 305 7 is_stmt 0 view .LVU383
 1426 006c 08A8     		add	r0, sp, #32
 1427 006e FFF7FEFF 		bl	HAL_RCC_OscConfig
 1428              	.LVL89:
 305:Core/Src/main.c ****   {
 1429              		.loc 1 305 6 view .LVU384
 1430 0072 88B9     		cbnz	r0, .L94
 312:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1431              		.loc 1 312 3 is_stmt 1 view .LVU385
 312:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1432              		.loc 1 312 31 is_stmt 0 view .LVU386
 1433 0074 0F23     		movs	r3, #15
 1434 0076 0393     		str	r3, [sp, #12]
 314:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1435              		.loc 1 314 3 is_stmt 1 view .LVU387
 314:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1436              		.loc 1 314 34 is_stmt 0 view .LVU388
 1437 0078 0223     		movs	r3, #2
 1438 007a 0493     		str	r3, [sp, #16]
 315:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1439              		.loc 1 315 3 is_stmt 1 view .LVU389
 315:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1440              		.loc 1 315 35 is_stmt 0 view .LVU390
 1441 007c 0023     		movs	r3, #0
 1442 007e 0593     		str	r3, [sp, #20]
 316:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 99


 1443              		.loc 1 316 3 is_stmt 1 view .LVU391
 316:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1444              		.loc 1 316 36 is_stmt 0 view .LVU392
 1445 0080 4FF48052 		mov	r2, #4096
 1446 0084 0692     		str	r2, [sp, #24]
 317:Core/Src/main.c **** 
 1447              		.loc 1 317 3 is_stmt 1 view .LVU393
 317:Core/Src/main.c **** 
 1448              		.loc 1 317 36 is_stmt 0 view .LVU394
 1449 0086 0793     		str	r3, [sp, #28]
 319:Core/Src/main.c ****   {
 1450              		.loc 1 319 3 is_stmt 1 view .LVU395
 319:Core/Src/main.c ****   {
 1451              		.loc 1 319 7 is_stmt 0 view .LVU396
 1452 0088 0121     		movs	r1, #1
 1453 008a 03A8     		add	r0, sp, #12
 1454 008c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1455              	.LVL90:
 319:Core/Src/main.c ****   {
 1456              		.loc 1 319 6 view .LVU397
 1457 0090 20B9     		cbnz	r0, .L95
 323:Core/Src/main.c **** 
 1458              		.loc 1 323 1 view .LVU398
 1459 0092 15B0     		add	sp, sp, #84
 1460              	.LCFI21:
 1461              		.cfi_remember_state
 1462              		.cfi_def_cfa_offset 4
 1463              		@ sp needed
 1464 0094 5DF804FB 		ldr	pc, [sp], #4
 1465              	.L94:
 1466              	.LCFI22:
 1467              		.cfi_restore_state
 307:Core/Src/main.c ****   }
 1468              		.loc 1 307 5 is_stmt 1 view .LVU399
 1469 0098 FFF7FEFF 		bl	Error_Handler
 1470              	.LVL91:
 1471              	.L95:
 321:Core/Src/main.c ****   }
 1472              		.loc 1 321 5 view .LVU400
 1473 009c FFF7FEFF 		bl	Error_Handler
 1474              	.LVL92:
 1475              	.L97:
 1476              		.align	2
 1477              	.L96:
 1478 00a0 00380240 		.word	1073887232
 1479 00a4 00700040 		.word	1073770496
 1480              		.cfi_endproc
 1481              	.LFE230:
 1483              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 1484              		.align	2
 1485              	.LC12:
 1486 0000 77616974 		.ascii	"waiting for connection \015 \012 \000"
 1486      696E6720 
 1486      666F7220 
 1486      636F6E6E 
 1486      65637469 
 1487              		.align	2
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 100


 1488              	.LC13:
 1489 001c 636F6E6E 		.ascii	"connected\000"
 1489      65637465 
 1489      6400
 1490              		.section	.text.main,"ax",%progbits
 1491              		.align	1
 1492              		.global	main
 1493              		.syntax unified
 1494              		.thumb
 1495              		.thumb_func
 1497              	main:
 1498              	.LFB229:
 162:Core/Src/main.c **** 
 1499              		.loc 1 162 1 view -0
 1500              		.cfi_startproc
 1501              		@ args = 0, pretend = 0, frame = 0
 1502              		@ frame_needed = 0, uses_anonymous_args = 0
 1503 0000 70B5     		push	{r4, r5, r6, lr}
 1504              	.LCFI23:
 1505              		.cfi_def_cfa_offset 16
 1506              		.cfi_offset 4, -16
 1507              		.cfi_offset 5, -12
 1508              		.cfi_offset 6, -8
 1509              		.cfi_offset 14, -4
 165:Core/Src/main.c **** 
 1510              		.loc 1 165 5 view .LVU402
 1511              	.LVL93:
 173:Core/Src/main.c **** 
 1512              		.loc 1 173 3 view .LVU403
 1513 0002 FFF7FEFF 		bl	HAL_Init
 1514              	.LVL94:
 180:Core/Src/main.c **** 
 1515              		.loc 1 180 3 view .LVU404
 1516 0006 FFF7FEFF 		bl	SystemClock_Config
 1517              	.LVL95:
 187:Core/Src/main.c ****   MX_I2C1_Init();
 1518              		.loc 1 187 3 view .LVU405
 1519 000a FFF7FEFF 		bl	MX_GPIO_Init
 1520              	.LVL96:
 188:Core/Src/main.c ****   MX_ADC1_Init();
 1521              		.loc 1 188 3 view .LVU406
 1522 000e FFF7FEFF 		bl	MX_I2C1_Init
 1523              	.LVL97:
 189:Core/Src/main.c ****   MX_TIM2_Init();
 1524              		.loc 1 189 3 view .LVU407
 1525 0012 FFF7FEFF 		bl	MX_ADC1_Init
 1526              	.LVL98:
 190:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1527              		.loc 1 190 3 view .LVU408
 1528 0016 FFF7FEFF 		bl	MX_TIM2_Init
 1529              	.LVL99:
 192:Core/Src/main.c ****     // printf("waiting for connection \r \n ");
 1530              		.loc 1 192 5 view .LVU409
 1531 001a FFF7FEFF 		bl	MX_USB_DEVICE_Init
 1532              	.LVL100:
 194:Core/Src/main.c ****     HAL_GPIO_WritePin(RED_LED.port, RED_LED.pin, GPIO_PIN_SET);
 1533              		.loc 1 194 5 view .LVU410
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 101


 1534 001e 354B     		ldr	r3, .L108
 1535 0020 0122     		movs	r2, #1
 1536 0022 1989     		ldrh	r1, [r3, #8]
 1537 0024 5868     		ldr	r0, [r3, #4]
 1538 0026 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1539              	.LVL101:
 195:Core/Src/main.c ****     HAL_GPIO_WritePin(GREEN_LED.port, GREEN_LED.pin, GPIO_PIN_SET);
 1540              		.loc 1 195 5 view .LVU411
 1541 002a 334B     		ldr	r3, .L108+4
 1542 002c 0122     		movs	r2, #1
 1543 002e 1989     		ldrh	r1, [r3, #8]
 1544 0030 5868     		ldr	r0, [r3, #4]
 1545 0032 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1546              	.LVL102:
 196:Core/Src/main.c **** 
 1547              		.loc 1 196 5 view .LVU412
 1548 0036 314B     		ldr	r3, .L108+8
 1549 0038 0122     		movs	r2, #1
 1550 003a 1989     		ldrh	r1, [r3, #8]
 1551 003c 5868     		ldr	r0, [r3, #4]
 1552 003e FFF7FEFF 		bl	HAL_GPIO_WritePin
 1553              	.LVL103:
 198:Core/Src/main.c ****     while((HAL_GetTick()-before)<CONNECTION_TIMEOUT){
 1554              		.loc 1 198 5 view .LVU413
 198:Core/Src/main.c ****     while((HAL_GetTick()-before)<CONNECTION_TIMEOUT){
 1555              		.loc 1 198 23 is_stmt 0 view .LVU414
 1556 0042 FFF7FEFF 		bl	HAL_GetTick
 1557              	.LVL104:
 1558 0046 0546     		mov	r5, r0
 1559              	.LVL105:
 199:Core/Src/main.c **** 
 1560              		.loc 1 199 5 is_stmt 1 view .LVU415
 165:Core/Src/main.c **** 
 1561              		.loc 1 165 13 is_stmt 0 view .LVU416
 1562 0048 0126     		movs	r6, #1
 1563              	.LVL106:
 1564              	.L100:
 199:Core/Src/main.c **** 
 1565              		.loc 1 199 10 is_stmt 1 view .LVU417
 199:Core/Src/main.c **** 
 1566              		.loc 1 199 12 is_stmt 0 view .LVU418
 1567 004a FFF7FEFF 		bl	HAL_GetTick
 1568              	.LVL107:
 199:Core/Src/main.c **** 
 1569              		.loc 1 199 25 view .LVU419
 1570 004e 401B     		subs	r0, r0, r5
 199:Core/Src/main.c **** 
 1571              		.loc 1 199 10 view .LVU420
 1572 0050 B0F57A6F 		cmp	r0, #4000
 1573 0054 1ED2     		bcs	.L105
 1574              	.LBB21:
 201:Core/Src/main.c ****         HAL_Delay(100);
 1575              		.loc 1 201 9 is_stmt 1 view .LVU421
 1576 0056 274B     		ldr	r3, .L108
 1577 0058 1989     		ldrh	r1, [r3, #8]
 1578 005a 5868     		ldr	r0, [r3, #4]
 1579 005c FFF7FEFF 		bl	HAL_GPIO_TogglePin
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 102


 1580              	.LVL108:
 202:Core/Src/main.c ****         printf("waiting for connection \r \n ");
 1581              		.loc 1 202 9 view .LVU422
 1582 0060 6420     		movs	r0, #100
 1583 0062 FFF7FEFF 		bl	HAL_Delay
 1584              	.LVL109:
 203:Core/Src/main.c ****         USBD_StatusTypeDef x = USBD_LL_DevConnected(&hUsbDeviceFS);
 1585              		.loc 1 203 9 view .LVU423
 1586 0066 2648     		ldr	r0, .L108+12
 1587 0068 FFF7FEFF 		bl	printf
 1588              	.LVL110:
 204:Core/Src/main.c ****         if(hUsbDeviceFS.dev_state==USBD_STATE_CONFIGURED){
 1589              		.loc 1 204 9 view .LVU424
 204:Core/Src/main.c ****         if(hUsbDeviceFS.dev_state==USBD_STATE_CONFIGURED){
 1590              		.loc 1 204 32 is_stmt 0 view .LVU425
 1591 006c 254C     		ldr	r4, .L108+16
 1592 006e 2046     		mov	r0, r4
 1593 0070 FFF7FEFF 		bl	USBD_LL_DevConnected
 1594              	.LVL111:
 205:Core/Src/main.c ****             enable_potentiometer = 0;
 1595              		.loc 1 205 9 is_stmt 1 view .LVU426
 205:Core/Src/main.c ****             enable_potentiometer = 0;
 1596              		.loc 1 205 24 is_stmt 0 view .LVU427
 1597 0074 94F89C32 		ldrb	r3, [r4, #668]	@ zero_extendqisi2
 1598 0078 DBB2     		uxtb	r3, r3
 205:Core/Src/main.c ****             enable_potentiometer = 0;
 1599              		.loc 1 205 11 view .LVU428
 1600 007a 032B     		cmp	r3, #3
 1601 007c E5D1     		bne	.L100
 206:Core/Src/main.c ****             HAL_GPIO_WritePin(BLUE_LED.port, BLUE_LED.pin, GPIO_PIN_RESET);
 1602              		.loc 1 206 13 is_stmt 1 view .LVU429
 1603              	.LVL112:
 207:Core/Src/main.c ****             printf("connected");
 1604              		.loc 1 207 13 view .LVU430
 1605 007e 1D4B     		ldr	r3, .L108
 1606 0080 0022     		movs	r2, #0
 1607 0082 1989     		ldrh	r1, [r3, #8]
 1608 0084 5868     		ldr	r0, [r3, #4]
 1609 0086 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1610              	.LVL113:
 208:Core/Src/main.c ****         }
 1611              		.loc 1 208 13 view .LVU431
 1612 008a 1F48     		ldr	r0, .L108+20
 1613 008c FFF7FEFF 		bl	printf
 1614              	.LVL114:
 206:Core/Src/main.c ****             HAL_GPIO_WritePin(BLUE_LED.port, BLUE_LED.pin, GPIO_PIN_RESET);
 1615              		.loc 1 206 34 is_stmt 0 view .LVU432
 1616 0090 0026     		movs	r6, #0
 1617 0092 DAE7     		b	.L100
 1618              	.LVL115:
 1619              	.L105:
 206:Core/Src/main.c ****             HAL_GPIO_WritePin(BLUE_LED.port, BLUE_LED.pin, GPIO_PIN_RESET);
 1620              		.loc 1 206 34 view .LVU433
 1621              	.LBE21:
 210:Core/Src/main.c **** 
 1622              		.loc 1 210 6 is_stmt 1 view .LVU434
 212:Core/Src/main.c ****         USBD_DeInit(&hUsbDeviceFS);
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 103


 1623              		.loc 1 212 5 view .LVU435
 212:Core/Src/main.c ****         USBD_DeInit(&hUsbDeviceFS);
 1624              		.loc 1 212 7 is_stmt 0 view .LVU436
 1625 0094 EEB9     		cbnz	r6, .L106
 1626              	.L102:
 219:Core/Src/main.c **** 
 1627              		.loc 1 219 5 is_stmt 1 view .LVU437
 1628 0096 FFF7FEFF 		bl	osKernelInitialize
 1629              	.LVL116:
 221:Core/Src/main.c ****         //    osThreadNew(POT_manager, NULL, &POT_attributes);
 1630              		.loc 1 221 5 view .LVU438
 221:Core/Src/main.c ****         //    osThreadNew(POT_manager, NULL, &POT_attributes);
 1631              		.loc 1 221 8 is_stmt 0 view .LVU439
 1632 009a 26B3     		cbz	r6, .L107
 1633              	.L103:
 230:Core/Src/main.c ****     TEMP_manager_handle = osThreadNew(TEMP_manager, NULL, &TEMP_attributes);
 1634              		.loc 1 230 5 is_stmt 1 view .LVU440
 230:Core/Src/main.c ****     TEMP_manager_handle = osThreadNew(TEMP_manager, NULL, &TEMP_attributes);
 1635              		.loc 1 230 26 is_stmt 0 view .LVU441
 1636 009c 1B4A     		ldr	r2, .L108+24
 1637 009e 0021     		movs	r1, #0
 1638 00a0 1B48     		ldr	r0, .L108+28
 1639 00a2 FFF7FEFF 		bl	osThreadNew
 1640              	.LVL117:
 230:Core/Src/main.c ****     TEMP_manager_handle = osThreadNew(TEMP_manager, NULL, &TEMP_attributes);
 1641              		.loc 1 230 24 view .LVU442
 1642 00a6 1B4B     		ldr	r3, .L108+32
 1643 00a8 1860     		str	r0, [r3]
 231:Core/Src/main.c ****   /* USER CODE END 2 */
 1644              		.loc 1 231 5 is_stmt 1 view .LVU443
 231:Core/Src/main.c ****   /* USER CODE END 2 */
 1645              		.loc 1 231 27 is_stmt 0 view .LVU444
 1646 00aa 1B4A     		ldr	r2, .L108+36
 1647 00ac 0021     		movs	r1, #0
 1648 00ae 1B48     		ldr	r0, .L108+40
 1649 00b0 FFF7FEFF 		bl	osThreadNew
 1650              	.LVL118:
 231:Core/Src/main.c ****   /* USER CODE END 2 */
 1651              		.loc 1 231 25 view .LVU445
 1652 00b4 1A4B     		ldr	r3, .L108+44
 1653 00b6 1860     		str	r0, [r3]
 235:Core/Src/main.c **** 
 1654              		.loc 1 235 3 is_stmt 1 view .LVU446
 1655 00b8 FFF7FEFF 		bl	osKernelInitialize
 1656              	.LVL119:
 255:Core/Src/main.c **** 
 1657              		.loc 1 255 3 view .LVU447
 255:Core/Src/main.c **** 
 1658              		.loc 1 255 17 is_stmt 0 view .LVU448
 1659 00bc 194A     		ldr	r2, .L108+48
 1660 00be 0021     		movs	r1, #0
 1661 00c0 1948     		ldr	r0, .L108+52
 1662 00c2 FFF7FEFF 		bl	osThreadNew
 1663              	.LVL120:
 255:Core/Src/main.c **** 
 1664              		.loc 1 255 15 view .LVU449
 1665 00c6 194B     		ldr	r3, .L108+56
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 104


 1666 00c8 1860     		str	r0, [r3]
 266:Core/Src/main.c **** 
 1667              		.loc 1 266 3 is_stmt 1 view .LVU450
 1668 00ca FFF7FEFF 		bl	osKernelStart
 1669              	.LVL121:
 278:Core/Src/main.c **** 
 1670              		.loc 1 278 1 is_stmt 0 view .LVU451
 1671 00ce 0020     		movs	r0, #0
 1672 00d0 70BD     		pop	{r4, r5, r6, pc}
 1673              	.LVL122:
 1674              	.L106:
 213:Core/Src/main.c ****         HAL_GPIO_WritePin(BLUE_LED.port, BLUE_LED.pin, GPIO_PIN_SET);
 1675              		.loc 1 213 9 is_stmt 1 view .LVU452
 1676 00d2 0C48     		ldr	r0, .L108+16
 1677 00d4 FFF7FEFF 		bl	USBD_DeInit
 1678              	.LVL123:
 214:Core/Src/main.c ****     }
 1679              		.loc 1 214 9 view .LVU453
 1680 00d8 064B     		ldr	r3, .L108
 1681 00da 0122     		movs	r2, #1
 1682 00dc 1989     		ldrh	r1, [r3, #8]
 1683 00de 5868     		ldr	r0, [r3, #4]
 1684 00e0 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1685              	.LVL124:
 1686 00e4 D7E7     		b	.L102
 1687              	.L107:
 226:Core/Src/main.c **** 
 1688              		.loc 1 226 9 view .LVU454
 1689 00e6 124A     		ldr	r2, .L108+60
 1690 00e8 0021     		movs	r1, #0
 1691 00ea 1248     		ldr	r0, .L108+64
 1692 00ec FFF7FEFF 		bl	osThreadNew
 1693              	.LVL125:
 1694 00f0 D4E7     		b	.L103
 1695              	.L109:
 1696 00f2 00BF     		.align	2
 1697              	.L108:
 1698 00f4 00000000 		.word	.LANCHOR7
 1699 00f8 00000000 		.word	.LANCHOR0
 1700 00fc 00000000 		.word	.LANCHOR1
 1701 0100 00000000 		.word	.LC12
 1702 0104 00000000 		.word	hUsbDeviceFS
 1703 0108 1C000000 		.word	.LC13
 1704 010c 00000000 		.word	.LANCHOR9
 1705 0110 00000000 		.word	LED_manager
 1706 0114 00000000 		.word	.LANCHOR10
 1707 0118 00000000 		.word	.LANCHOR11
 1708 011c 00000000 		.word	TEMP_manager
 1709 0120 00000000 		.word	.LANCHOR12
 1710 0124 00000000 		.word	.LANCHOR13
 1711 0128 00000000 		.word	StartBlink
 1712 012c 00000000 		.word	.LANCHOR14
 1713 0130 00000000 		.word	.LANCHOR8
 1714 0134 00000000 		.word	COM_manager
 1715              		.cfi_endproc
 1716              	.LFE229:
 1718              		.global	GREEN_LED
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 105


 1719              		.global	RED_LED
 1720              		.global	BLUE_LED
 1721              		.global	TARGET_TEMP
 1722              		.global	ACTUAL_TEMP
 1723              		.global	MessageLength
 1724              		.global	MessageCounter
 1725              		.global	DataToSend
 1726              		.global	POT_attributes
 1727              		.section	.rodata.str1.4,"aMS",%progbits,1
 1728              		.align	2
 1729              	.LC14:
 1730 0000 504F5400 		.ascii	"POT\000"
 1731              		.global	POT_manager_handle
 1732              		.global	TEMP_attributes
 1733              		.align	2
 1734              	.LC15:
 1735 0004 54454D50 		.ascii	"TEMP\000"
 1735      00
 1736              		.global	TEMP_manager_handle
 1737              		.global	LED_attributes
 1738 0009 000000   		.align	2
 1739              	.LC16:
 1740 000c 4C454400 		.ascii	"LED\000"
 1741              		.global	LED_manager_handle
 1742              		.global	COM_attributes
 1743              		.align	2
 1744              	.LC17:
 1745 0010 434F4D00 		.ascii	"COM\000"
 1746              		.global	COM_manager_handle
 1747              		.global	Blink_attributes
 1748              		.align	2
 1749              	.LC18:
 1750 0014 426C696E 		.ascii	"Blink\000"
 1750      6B00
 1751              		.global	BlinkHandle
 1752              		.global	htim2
 1753              		.global	hadc1
 1754              		.global	hi2c1
 1755              		.section	.bss.ACTUAL_TEMP,"aw",%nobits
 1756              		.align	3
 1757              		.set	.LANCHOR2,. + 0
 1760              	ACTUAL_TEMP:
 1761 0000 00000000 		.space	16
 1761      00000000 
 1761      00000000 
 1761      00000000 
 1762              		.section	.bss.BlinkHandle,"aw",%nobits
 1763              		.align	2
 1764              		.set	.LANCHOR14,. + 0
 1767              	BlinkHandle:
 1768 0000 00000000 		.space	4
 1769              		.section	.bss.COM_manager_handle,"aw",%nobits
 1770              		.align	2
 1771              		.set	.LANCHOR10,. + 0
 1774              	COM_manager_handle:
 1775 0000 00000000 		.space	4
 1776              		.section	.bss.DataToSend,"aw",%nobits
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 106


 1777              		.align	2
 1780              	DataToSend:
 1781 0000 00000000 		.space	16
 1781      00000000 
 1781      00000000 
 1781      00000000 
 1782              		.section	.bss.LED_manager_handle,"aw",%nobits
 1783              		.align	2
 1786              	LED_manager_handle:
 1787 0000 00000000 		.space	4
 1788              		.section	.bss.MessageCounter,"aw",%nobits
 1791              	MessageCounter:
 1792 0000 00       		.space	1
 1793              		.section	.bss.MessageLength,"aw",%nobits
 1796              	MessageLength:
 1797 0000 00       		.space	1
 1798              		.section	.bss.POT_manager_handle,"aw",%nobits
 1799              		.align	2
 1802              	POT_manager_handle:
 1803 0000 00000000 		.space	4
 1804              		.section	.bss.TARGET_TEMP,"aw",%nobits
 1805              		.align	3
 1806              		.set	.LANCHOR3,. + 0
 1809              	TARGET_TEMP:
 1810 0000 00000000 		.space	16
 1810      00000000 
 1810      00000000 
 1810      00000000 
 1811              		.section	.bss.TEMP_manager_handle,"aw",%nobits
 1812              		.align	2
 1813              		.set	.LANCHOR12,. + 0
 1816              	TEMP_manager_handle:
 1817 0000 00000000 		.space	4
 1818              		.section	.bss.hadc1,"aw",%nobits
 1819              		.align	2
 1820              		.set	.LANCHOR5,. + 0
 1823              	hadc1:
 1824 0000 00000000 		.space	72
 1824      00000000 
 1824      00000000 
 1824      00000000 
 1824      00000000 
 1825              		.section	.bss.hi2c1,"aw",%nobits
 1826              		.align	2
 1827              		.set	.LANCHOR6,. + 0
 1830              	hi2c1:
 1831 0000 00000000 		.space	84
 1831      00000000 
 1831      00000000 
 1831      00000000 
 1831      00000000 
 1832              		.section	.bss.htim2,"aw",%nobits
 1833              		.align	2
 1834              		.set	.LANCHOR4,. + 0
 1837              	htim2:
 1838 0000 00000000 		.space	72
 1838      00000000 
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 107


 1838      00000000 
 1838      00000000 
 1838      00000000 
 1839              		.section	.data.BLUE_LED,"aw"
 1840              		.align	2
 1841              		.set	.LANCHOR7,. + 0
 1844              	BLUE_LED:
 1845 0000 00000000 		.word	0
 1846 0004 00000240 		.word	1073872896
 1847 0008 2000     		.short	32
 1848 000a 0000     		.space	2
 1849              		.section	.data.GREEN_LED,"aw"
 1850              		.align	2
 1851              		.set	.LANCHOR1,. + 0
 1854              	GREEN_LED:
 1855 0000 00000000 		.word	0
 1856 0004 00000240 		.word	1073872896
 1857 0008 8000     		.short	128
 1858 000a 0000     		.space	2
 1859              		.section	.data.RED_LED,"aw"
 1860              		.align	2
 1861              		.set	.LANCHOR0,. + 0
 1864              	RED_LED:
 1865 0000 00000000 		.word	0
 1866 0004 00000240 		.word	1073872896
 1867 0008 4000     		.short	64
 1868 000a 0000     		.space	2
 1869              		.section	.rodata.Blink_attributes,"a"
 1870              		.align	2
 1871              		.set	.LANCHOR13,. + 0
 1874              	Blink_attributes:
 1875 0000 14000000 		.word	.LC18
 1876 0004 00000000 		.space	16
 1876      00000000 
 1876      00000000 
 1876      00000000 
 1877 0014 00020000 		.word	512
 1878 0018 18000000 		.word	24
 1879 001c 00000000 		.space	8
 1879      00000000 
 1880              		.section	.rodata.COM_attributes,"a"
 1881              		.align	2
 1882              		.set	.LANCHOR8,. + 0
 1885              	COM_attributes:
 1886 0000 10000000 		.word	.LC17
 1887 0004 00000000 		.space	16
 1887      00000000 
 1887      00000000 
 1887      00000000 
 1888 0014 00010000 		.word	256
 1889 0018 18000000 		.word	24
 1890 001c 00000000 		.space	8
 1890      00000000 
 1891              		.section	.rodata.LED_attributes,"a"
 1892              		.align	2
 1893              		.set	.LANCHOR9,. + 0
 1896              	LED_attributes:
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 108


 1897 0000 0C000000 		.word	.LC16
 1898 0004 00000000 		.space	16
 1898      00000000 
 1898      00000000 
 1898      00000000 
 1899 0014 20000000 		.word	32
 1900 0018 18000000 		.word	24
 1901 001c 00000000 		.space	8
 1901      00000000 
 1902              		.section	.rodata.POT_attributes,"a"
 1903              		.align	2
 1906              	POT_attributes:
 1907 0000 00000000 		.word	.LC14
 1908 0004 00000000 		.space	16
 1908      00000000 
 1908      00000000 
 1908      00000000 
 1909 0014 80000000 		.word	128
 1910 0018 18000000 		.word	24
 1911 001c 00000000 		.space	8
 1911      00000000 
 1912              		.section	.rodata.TEMP_attributes,"a"
 1913              		.align	2
 1914              		.set	.LANCHOR11,. + 0
 1917              	TEMP_attributes:
 1918 0000 04000000 		.word	.LC15
 1919 0004 00000000 		.space	16
 1919      00000000 
 1919      00000000 
 1919      00000000 
 1920 0014 80000000 		.word	128
 1921 0018 18000000 		.word	24
 1922 001c 00000000 		.space	8
 1922      00000000 
 1923              		.text
 1924              	.Letext0:
 1925              		.file 4 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 1926              		.file 5 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 1927              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f401xc.h"
 1928              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 1929              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1930              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 1931              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 1932              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1933              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1934              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 1935              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
 1936              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 1937              		.file 16 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h"
 1938              		.file 17 "Middlewares/ST/STM32_USB_Device_Library/Core/Inc/usbd_def.h"
 1939              		.file 18 "Middlewares/Third_Party/FreeRTOS/Source/include/queue.h"
 1940              		.file 19 "Middlewares/Third_Party/FreeRTOS/Source/include/semphr.h"
 1941              		.file 20 "USB_DEVICE/App/usbd_cdc_if.h"
 1942              		.file 21 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1943              		.file 22 "USB_DEVICE/App/usb_device.h"
 1944              		.file 23 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\
 1945              		.file 24 "Core/Inc/thermal_control.h"
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 109


 1946              		.file 25 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim_ex.h"
 1947              		.file 26 "Core/Inc/main.h"
 1948              		.file 27 "<built-in>"
 1949              		.file 28 "Middlewares/ST/STM32_USB_Device_Library/Core/Inc/usbd_core.h"
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 110


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s:20     .text.MX_GPIO_Init:00000000 $t
C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s:25     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s:149    .text.MX_GPIO_Init:0000008c $d
C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s:155    .rodata.LED_manager.str1.4:00000000 $d
C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s:162    .text.LED_manager:00000000 $t
C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s:168    .text.LED_manager:00000000 LED_manager
C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s:205    .text.LED_manager:00000018 $d
C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s:212    .rodata.COM_manager.str1.4:00000000 $d
C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s:244    .text.COM_manager:00000000 $t
C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s:250    .text.COM_manager:00000000 COM_manager
C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s:309    .text.COM_manager:00000030 $d
C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s:317    .text.COM_manager:00000038 $t
C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s:527    .text.COM_manager:00000164 $d
C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s:553    .text.TEMP_manager:00000000 $t
C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s:559    .text.TEMP_manager:00000000 TEMP_manager
C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s:707    .text.TEMP_manager:000000ac $d
C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s:717    .text.StartBlink:00000000 $t
C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s:723    .text.StartBlink:00000000 StartBlink
C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s:752    .text._write:00000000 $t
C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s:758    .text._write:00000000 _write
C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s:849    .text.POT_manager:00000000 $t
C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s:855    .text.POT_manager:00000000 POT_manager
C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s:886    .text.POT_manager:00000014 $d
C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s:891    .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s:897    .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s:931    .text.HAL_TIM_PeriodElapsedCallback:00000014 $d
C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s:936    .text.Error_Handler:00000000 $t
C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s:942    .text.Error_Handler:00000000 Error_Handler
C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s:974    .text.MX_I2C1_Init:00000000 $t
C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s:979    .text.MX_I2C1_Init:00000000 MX_I2C1_Init
C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s:1037   .text.MX_I2C1_Init:0000002c $d
C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s:1044   .text.MX_ADC1_Init:00000000 $t
C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s:1049   .text.MX_ADC1_Init:00000000 MX_ADC1_Init
C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s:1154   .text.MX_ADC1_Init:0000005c $d
C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s:1161   .text.MX_TIM2_Init:00000000 $t
C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s:1166   .text.MX_TIM2_Init:00000000 MX_TIM2_Init
C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s:1319   .text.MX_TIM2_Init:0000009c $d
C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s:1324   .text.SystemClock_Config:00000000 $t
C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s:1330   .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s:1478   .text.SystemClock_Config:000000a0 $d
C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s:1484   .rodata.main.str1.4:00000000 $d
C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s:1491   .text.main:00000000 $t
C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s:1497   .text.main:00000000 main
C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s:1698   .text.main:000000f4 $d
C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s:1854   .data.GREEN_LED:00000000 GREEN_LED
C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s:1864   .data.RED_LED:00000000 RED_LED
C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s:1844   .data.BLUE_LED:00000000 BLUE_LED
C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s:1809   .bss.TARGET_TEMP:00000000 TARGET_TEMP
C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s:1760   .bss.ACTUAL_TEMP:00000000 ACTUAL_TEMP
C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s:1796   .bss.MessageLength:00000000 MessageLength
C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s:1791   .bss.MessageCounter:00000000 MessageCounter
C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s:1780   .bss.DataToSend:00000000 DataToSend
C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s:1906   .rodata.POT_attributes:00000000 POT_attributes
C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s:1728   .rodata.str1.4:00000000 $d
C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s:1802   .bss.POT_manager_handle:00000000 POT_manager_handle
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 111


C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s:1917   .rodata.TEMP_attributes:00000000 TEMP_attributes
C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s:1816   .bss.TEMP_manager_handle:00000000 TEMP_manager_handle
C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s:1896   .rodata.LED_attributes:00000000 LED_attributes
C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s:1786   .bss.LED_manager_handle:00000000 LED_manager_handle
C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s:1885   .rodata.COM_attributes:00000000 COM_attributes
C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s:1774   .bss.COM_manager_handle:00000000 COM_manager_handle
C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s:1874   .rodata.Blink_attributes:00000000 Blink_attributes
C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s:1767   .bss.BlinkHandle:00000000 BlinkHandle
C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s:1837   .bss.htim2:00000000 htim2
C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s:1823   .bss.hadc1:00000000 hadc1
C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s:1830   .bss.hi2c1:00000000 hi2c1
C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s:1756   .bss.ACTUAL_TEMP:00000000 $d
C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s:1763   .bss.BlinkHandle:00000000 $d
C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s:1770   .bss.COM_manager_handle:00000000 $d
C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s:1777   .bss.DataToSend:00000000 $d
C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s:1783   .bss.LED_manager_handle:00000000 $d
C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s:1792   .bss.MessageCounter:00000000 $d
C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s:1797   .bss.MessageLength:00000000 $d
C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s:1799   .bss.POT_manager_handle:00000000 $d
C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s:1805   .bss.TARGET_TEMP:00000000 $d
C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s:1812   .bss.TEMP_manager_handle:00000000 $d
C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s:1819   .bss.hadc1:00000000 $d
C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s:1826   .bss.hi2c1:00000000 $d
C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s:1833   .bss.htim2:00000000 $d
C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s:1840   .data.BLUE_LED:00000000 $d
C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s:1850   .data.GREEN_LED:00000000 $d
C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s:1860   .data.RED_LED:00000000 $d
C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s:1870   .rodata.Blink_attributes:00000000 $d
C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s:1881   .rodata.COM_attributes:00000000 $d
C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s:1892   .rodata.LED_attributes:00000000 $d
C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s:1903   .rodata.POT_attributes:00000000 $d
C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s:1913   .rodata.TEMP_attributes:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
puts
printf
hUsbDeviceFS
__aeabi_f2d
CDC_Transmit_FS
HAL_Delay
UserRxBufferFS
__aeabi_dsub
__aeabi_dmul
__aeabi_ddiv
__aeabi_d2uiz
HAL_TIM_PWM_Start
HAL_ADC_Start
HAL_GetTick
HAL_ADC_GetValue
calc_temp
HAL_ADC_PollForConversion
HAL_ADC_Stop
MX_USB_DEVICE_Init
osDelay
HAL_IncTick
ARM GAS  C:\Users\M\AppData\Local\Temp\ccGfEKrZ.s 			page 112


HAL_I2C_Init
HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIM_MspPostInit
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_GPIO_TogglePin
USBD_LL_DevConnected
osKernelInitialize
osThreadNew
osKernelStart
USBD_DeInit
